[{"path":"_reposense/config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-07-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"**.adoc\", \"collate**\"],","lastModifiedDate":"2018-08-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\t\"formats\": [\"gradle\", \"pug\", \"java\", \"js\", \"md\", \"scss\", \"yml\"],","lastModifiedDate":"2020-03-12"},{"lineNumber":4,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"7b96c563eb2d3612aa5275364333664a18f01491\",","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t\t\"90018e49f129ce7e0abdc8b18e91c9813588c601\",","lastModifiedDate":"2018-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t\"b8dbc3cf3c7c334665a828cf4236dcb442228c94\",","lastModifiedDate":"2018-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\"832dd728bbfa203d92e4548325d64d5a151c013f\",","lastModifiedDate":"2018-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\"503c43ed1c90e8dcb46173c8f7c8e62f9286acbf\",","lastModifiedDate":"2018-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\"14faede3d27097a74063fd407b210f8a5f7e3de5\"],","lastModifiedDate":"2018-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-07-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"eugenepeh\",","lastModifiedDate":"2018-07-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Eugene\",","lastModifiedDate":"2018-07-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Eugene Peh\"]","lastModifiedDate":"2018-08-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-07-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2020-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jamessspanggg\",","lastModifiedDate":"2020-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"James\",","lastModifiedDate":"2020-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"James Pang\"]","lastModifiedDate":"2020-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2020-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-07-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"ongspxm\",","lastModifiedDate":"2018-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Metta\",","lastModifiedDate":"2018-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Metta Ong\"]","lastModifiedDate":"2018-08-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-07-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"yamidark\",","lastModifiedDate":"2018-07-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jun An\",","lastModifiedDate":"2018-07-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jun An\"],","lastModifiedDate":"2018-07-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**.html\", \"**.jade\"]","lastModifiedDate":"2018-08-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-07-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-07-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"yong24s\",","lastModifiedDate":"2018-07-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Yong Hao\",","lastModifiedDate":"2018-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Yong Hao TENG\"],","lastModifiedDate":"2018-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**.css\", \"**.html\", \"**.jade\", \"**.js\"]","lastModifiedDate":"2018-08-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-07-26"}],"authorContributionMap":{"FH-30":1,"-":39}},{"path":"docs/dg/learningBasics.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Learning the Basics\" %}","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","lastModifiedDate":"2021-05-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2021-05-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed, step with context %}","lastModifiedDate":"2021-05-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This is a learning guide for developers who are new to RepoSense.","lastModifiedDate":"2021-05-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Depending on what you know already and what you would like to work on (i.e., backend or frontend), you may find certain sections irrelevant to you and you can skip them accordingly.","lastModifiedDate":"2021-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Backend","lastModifiedDate":"2021-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"This section is for developers who want to contribute to the backend of RepoSense. You may skip this section if you want to contribute as a pure frontend developer. Before you get started, you should have set up the project on your computer according to [the _Setting up_ page](settingUp.html).","lastModifiedDate":"2021-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"The backend implementation of RepoSense is located in `src/main`.","lastModifiedDate":"2021-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"{{ step(1) }} **Know Java**","lastModifiedDate":"2021-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The RepoSense backend is mostly written in `Java 8`. ","lastModifiedDate":"2021-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. You need to have a basic knowledge of Java before getting started, including its syntax, [API](https://docs.oracle.com/javase/8/docs/api/), and certain frameworks such as [JUnit](https://se-education.org/learningresources/contents/java/JUnit.html).","lastModifiedDate":"2021-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Once you are familiar with the basic syntax, you may wish to learn more advanced topics such as [concurrency](https://se-education.org/learningresources/contents/java/JavaConcurrency.html), [synchronization](https://se-education.org/learningresources/contents/java/JavaSynchronization.html), and [streams](https://se-education.org/learningresources/contents/java/streams-an-introduction.html). These topics can help you to understand certain part of the backend implementation (concurrent cloning and analysis of multiple repositories, etc). They are optional but you may find them useful when working on certain issues.","lastModifiedDate":"2021-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"{{ step(2) }} **Learn the RepoSense backend architecture**","lastModifiedDate":"2021-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"You may want to refer to the [backend architecture](architecture.html) to understand the RepoSense backend implementation logic.","lastModifiedDate":"2021-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"To gain a more concrete idea of how the backend works, you can use the IDE Debugger and run RepoSense under the debugging mode to trace through the steps of how arguments from command line and CSV files are parsed, how repositories are cloned and analyzed, and how the JSON files are generated.","lastModifiedDate":"2021-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The information below is for **Intellij**. If you are using a different IDE, you may need to check the documentation of how to use the debugger separately.","lastModifiedDate":"2021-05-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Check the [debugging guide](https://www.jetbrains.com/help/idea/debugging-your-first-java-application.html) if you are not familiar with debugging in **Intelij**.","lastModifiedDate":"2021-05-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* In `RepoSense.java`, the main class, set appropriate break points. Here are some relevant method calls in the `main` method at which you can set the breakpoints:","lastModifiedDate":"2021-05-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * `ArgsParser.parse(args)`: RepoSense parses the CLI arguments from the command given by the user.","lastModifiedDate":"2021-05-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * `getRepoConfigurations(cliArguments)`: RepoSense gets the configuration for each repository by parsing the CSV files.","lastModifiedDate":"2021-05-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  * `getReportConfigurations(cliArguments)`: RepoSense gets the report configuration (report title) by parsing the JSON files.","lastModifiedDate":"2021-05-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  * `ReportGenerator.generateReposReport(...)` This is where the bulk of the work is conducted, including cloning repositories, analyzing repositories, and generating the JSON files to be used by the report.","lastModifiedDate":"2021-05-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"When tracing through the program execution, you can cross reference the architecture diagram and Javadoc of the class and method to check your understanding of the procedure.","lastModifiedDate":"2021-05-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"{{ step(3) }} **Gain some hands-on experience**","lastModifiedDate":"2021-05-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Here are some small tasks for you to gain some basic knowledge of the code related to the RepoSense backend. You can do each in a separate branch in your local copy of the code.","lastModifiedDate":"2021-05-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cpanel header\u003d\"**Task 1: Add a flag to pretty-print the JSON file**\" type\u003d\"primary\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  **Task 1: Add a flag to pretty-print the JSON file**","lastModifiedDate":"2021-05-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  1. [Generate a report locally](../ug/generatingReports.html#generating-reports-locally).","lastModifiedDate":"2021-05-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  2. Open a generated JSON file. For example, you can open `summary.json` of the generated report.","lastModifiedDate":"2021-05-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  3. You should see that the content in the JSON is compactly organized in 1 single line. This may affect readability for developer who wants to investigate the content in the JSON file.","lastModifiedDate":"2021-05-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  **Your Task**","lastModifiedDate":"2021-05-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  Add a new CLI argument `--use-json-pretty-printing`, such that when a user runs the command `java -jar RepoSense.jar --repos LIST_OF_REPO_URLS --view --use-json-pretty-printing`, the JSON files `summary.json`, `authorship.json`, and `commits.json` will be printed in a more readable way.","lastModifiedDate":"2021-05-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 1\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  Try to understand the parsing process of the Command Line Arguments, which starts from `ArgsParser.parse(args)` in `RepoSense.java` and uses `ArgumentParser` to capture the arguments in the command string.","lastModifiedDate":"2021-05-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  Therefore, the first step you can take is to add the following to `ArgsParser`.","lastModifiedDate":"2021-05-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  public static final String[] JSON_PRINT_MODE_FLAGS \u003d new String[]{\"--use-json-pretty-printing\", \"-j\"};","lastModifiedDate":"2021-05-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  In `getArgumentParser` method, add the following content to make `ArgumentParser` capture the new argument.","lastModifiedDate":"2021-05-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  parser.addArgument(JSON_PRINT_MODE_FLAGS)","lastModifiedDate":"2021-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .dest(JSON_PRINT_MODE_FLAGS[0])","lastModifiedDate":"2021-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      .action(Arguments.storeTrue())","lastModifiedDate":"2021-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      .help(\"A flag to use json pretty printing when generating the json files.\");","lastModifiedDate":"2021-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 2\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  After the step in hint 1, the argument is captured by `ArgumentParser`. Now make corresponding changes to `CliArguments.java`, `ConfigCliArguments.java`, and the `parse` method in `ArgsParser.java` to make the return result of `parse` include the new argument. ","lastModifiedDate":"2021-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  1. Add the following content to `CliArguments` to include `isPrettyPrintingUsed` as a new attribute to the class.","lastModifiedDate":"2021-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  protected boolean isPrettyPrintingUsed;","lastModifiedDate":"2021-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  public boolean isPrettyPrintingUsed() {","lastModifiedDate":"2021-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          return isPrettyPrintingUsed;","lastModifiedDate":"2021-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  2. In the constructor of `ConfigCliArguments`, add `isPrettyPrintingUsed` as a new parameter of the method, and add the following instruction to the method body.","lastModifiedDate":"2021-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  this.isPrettyPrintingUsed \u003d isPrettyPrintingUsed;","lastModifiedDate":"2021-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  3. In the `parse` method of `ArgsParser`, add the following instruction to get `isJsonPrettyPrintingUsed` from `ArgmentParser`.","lastModifiedDate":"2021-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  boolean isJsonPrettyPrintingUsed \u003d results.get(JSON_PRINT_MODE_FLAGS[0]);","lastModifiedDate":"2021-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  ``` ","lastModifiedDate":"2021-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  4. Additionally, change the return statement of the `parse` method so that the `ConfigCliArguments` object returned will now include `isJsonPrettyPrintingUsed`.","lastModifiedDate":"2021-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 3\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  After the steps in hint 1 and hint 2, the result returned from `ArgsParser.parse(args)` in `RepoSense.java` should be able to capture the new argument when it is specified in the command. ","lastModifiedDate":"2021-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  The next step is to extract the argument from the `CliArguments` object, and pass it to JSON file writer to notify it of the specified printing mode.","lastModifiedDate":"2021-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  Note that the creation and writing of JSON file is invoked in `ReportGenerator.generateReposReport`, which calls `FileUtil.writeJsonFile` directly to write the `summary.json` file or indirectly (Check `generateIndividualRepoReport` and `generateEmptyRepoReport`) to write the `commits.json` or `authorship.json` files of individual repositories.","lastModifiedDate":"2021-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  Therefore, the task now is to make `FileUtil.writeJsonFile` switch between different printing mode.","lastModifiedDate":"2021-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  1. You can find out what [`Gson.setPrettyPrinting`](https://www.javadoc.io/doc/com.google.code.gson/gson/2.8.5/com/google/gson/GsonBuilder.html#setPrettyPrinting--) does and how it can be used in the `writeJsonFile` method of [`FileUtil.java`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/util/FileUtil.java).","lastModifiedDate":"2021-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  2. Add the following content to `FileUtil`.","lastModifiedDate":"2021-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  private static boolean isPrettyPrintingUsed \u003d false;","lastModifiedDate":"2021-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  3. In the `writeJsonFile` method, Replace the creation of the `Gson` object with the following instructions.","lastModifiedDate":"2021-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  GsonBuilder gsonBuilder \u003d new GsonBuilder()","lastModifiedDate":"2021-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          .setDateFormat(GITHUB_API_DATE_FORMAT)","lastModifiedDate":"2021-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          .registerTypeAdapter(FileType.class, new FileType.FileTypeSerializer());","lastModifiedDate":"2021-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  Gson gson;","lastModifiedDate":"2021-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  if (isPrettyPrintingUsed) {","lastModifiedDate":"2021-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      gson \u003d gsonBuilder.setPrettyPrinting().create();","lastModifiedDate":"2021-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  } else {","lastModifiedDate":"2021-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      gson \u003d gsonBuilder.create();","lastModifiedDate":"2021-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  4. To notify `FileUtil` of the switch between different printing mode, add the following method to `FileUtil`.","lastModifiedDate":"2021-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  public static void setPrettyPrintingMode(boolean isPrettyPrintingAdopted) {","lastModifiedDate":"2021-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      isPrettyPrintingUsed \u003d isPrettyPrintingAdopted;","lastModifiedDate":"2021-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  5. It is now possible to notify `FileUtil` of the printing mode switch by extracting the argument from the `CliArguments` object in the `main` method of `RepoSense.java` and passing it to the corresponding method in `FileUtil`.","lastModifiedDate":"2021-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  FileUtil.setPrettyPrintingMode(cliArguments.isPrettyPrintingUsed());","lastModifiedDate":"2021-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  Now the parsing of argument and changing of printing mode should have been completed.","lastModifiedDate":"2021-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Suggested solution\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  There is more than 1 way to achieve this. By combining the changes in hint 1, hint 2, and hint 3, you should be able to get a possible solution.","lastModifiedDate":"2021-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  Try the command `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git --view --use-json-pretty-printing` and check the generated JSON files to see if it works.","lastModifiedDate":"2021-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpanel header\u003d\"**Task 2: Add exception message during repository cloning to the summary view**\" type\u003d\"primary\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  **Task 2: Add exception message during repository cloning to the summary view**","lastModifiedDate":"2021-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  1. Open a [report](https://dashboard-1507-pr-reposense-reposense.surge.sh/).","lastModifiedDate":"2021-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  2. You should see that there is a red panel in the summary view containing the following message, indicating that there is an issue in the cloning process of the repository `reposense/testrepo-Empty`.","lastModifiedDate":"2021-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  reposense/testrepo-Empty[master]","lastModifiedDate":"2021-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          Failed to clone from https://github.com/reposense/testrepo-Empty.git","lastModifiedDate":"2021-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  **Your task**","lastModifiedDate":"2021-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  For the repository with the message `Failed to clone from ...`, find out what exception causes this cloning error, and add that exception message to the panel as well.","lastModifiedDate":"2021-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 1\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  You can find out what [`ErrorSummary.java`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/report/ErrorSummary.java) and [`RepoCloner.java`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/report/RepoCloner.java) do, and where they are used.","lastModifiedDate":"2021-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 2\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  Try to understand the cloning process. ","lastModifiedDate":"2021-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  * The cloning process is invoked by [`RepoGenerator.java`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/report/ReportGenerator.java) in the `cloneAndAnalyzeRepos` method, which subsequently calls `cloneBare` in `RepoCloner.java` to start the cloning. ","lastModifiedDate":"2021-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * The `cloneAndAnalyzeRepos` method will then call `getRepoLocation`  in `RepoCloner.java` to try to get the repository location. ","lastModifiedDate":"2021-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Beneath the surface, `RepoCloner` will first execute `spawnCloneProcess` and then execute `waitForCloneProcess` when it is invoked by `RepoGenerator` for the first and second time respectively.","lastModifiedDate":"2021-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 3\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  In `RepoCloner`, the potential exceptions in `spawnCloneProcess` and `waitForCloneProcess` are caught but not recorded by `ErrorSummary`. ","lastModifiedDate":"2021-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Suggested solution\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  There is more than 1 way to achieve this. One solution is shown as the following:","lastModifiedDate":"2021-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-05-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  Add this to the catch block of `spawnCloneProcess` and `waitForCloneProcess`, so that the message will be captured in `summary.json`.","lastModifiedDate":"2021-05-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-05-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  ``` ","lastModifiedDate":"2021-05-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), e.getMessage());","lastModifiedDate":"2021-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"This is only for your practice. There is no need for you to commit this change and submit it in a pull request.","lastModifiedDate":"2021-05-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"{{ step(4) }} **Next Step**","lastModifiedDate":"2021-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"You can now proceed to learn the [contributing workflow](workflow.html).","lastModifiedDate":"2021-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Frontend","lastModifiedDate":"2021-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"This section is for developers who want to contribute to the frontend of RepoSense. You may skip this section if you want to contribute as a pure backend developer.","lastModifiedDate":"2021-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"The frontend implementation of RepoSense is located in `frontend/src`.","lastModifiedDate":"2021-05-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"{{ step(1) }} **Learn the necessary tools**","lastModifiedDate":"2021-05-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"It is necessary for you to learn the basics of Vue.js, Pug, and SCSS before working on the project. ","lastModifiedDate":"2021-05-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### Vue.js","lastModifiedDate":"2021-05-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Vue.js uses JavaScript as its programming language. Before learning **Vue.js**, you may need to first get yourself familiar with JavaScript syntax first.","lastModifiedDate":"2021-05-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"You can refer to the [Javascript documentation](https://devdocs.io/javascript/) to learn the basic syntax. There are plenty of other resources available and please feel free to find the resource most suitable for you.","lastModifiedDate":"2021-05-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":267,"author":{"gitId":"yhtMinceraft1010X"},"content":"RepoSense uses **Vue.js** (Vue2) in its front-end implementation. In particular, major user interface components, such as [summary view](report.html#summary-view-v-summary-js), [authorship view](report.html#authorship-view-v-authorship-js), and [zoom view](report.html#zoom-view-v-zoom-js), are implemented as Vue components. The corresponding source files are in `frontend/src`.","lastModifiedDate":"2021-09-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* If you are new to Vue.js, you may want to start learning by looking at the [the beginner tutorial](https://www.vuemastery.com/courses/intro-to-vue-js/).","lastModifiedDate":"2021-05-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* You can dive deeper later by checking the [Vue.js documentation](https://vuejs.org/v2/guide/index.html) to learn about essential concepts such as component life cycle hooks, and component properties.","lastModifiedDate":"2021-05-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* It is recommended if you can work on some small projects first to gain more solid understanding of Vue.js.","lastModifiedDate":"2021-05-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"The guide above uses HTML as the component template, which is not the case with RepoSense. You may wish to learn more about [Pug](#pug) and its connection with HTML.","lastModifiedDate":"2021-05-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"#### Vuex","lastModifiedDate":"2021-05-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"RepoSense uses **Vuex** for the state management of the Vue components.","lastModifiedDate":"2021-05-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* You can check the [Vuex guide](https://vuex.vuejs.org/guide/#the-simplest-store) to find out how Vuex can be used in a Vue project.","lastModifiedDate":"2021-05-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* There is also a [course](https://vueschool.io/courses/vuex-for-everyone) available that will walk you through an example of creating Vue application with Vuex.","lastModifiedDate":"2021-05-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Pug","lastModifiedDate":"2021-05-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"RepoSense uses Pug files as the template of each Vue component. The corresponding HTML templates will later be generated from the Pug files by [spuild](https://github.com/ongspxm/spuild2) when generating the report.","lastModifiedDate":"2021-05-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Since Pug is used to generate the HTML template, it is recommended that you have a basic knowledge of HTML before starting to learn Pug. Once you understand how HTML works, you can proceed to focus on how Pug is translated into HTML.","lastModifiedDate":"2021-05-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* You can refer to the [official documentation](https://pugjs.org/api/getting-started.html) or [this tutorial](https://www.youtube.com/watch?v\u003dkt3cEjjkCZA) to learn about the syntax of pug and how it is translated into HTML.","lastModifiedDate":"2021-05-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* To get a hands-on experience, here is a [Pug to HTML converter](https://pughtml.com/). Feel free to try out a couple of examples on your own.","lastModifiedDate":"2021-05-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Scss","lastModifiedDate":"2021-05-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":303,"author":{"gitId":"yhtMinceraft1010X"},"content":"SCSS is used for styling the Pug template. The corresponding CSS will later be generated from the SCSS files by [spuild](https://github.com/ongspxm/spuild2) when generating the report. The corresponding source files are in `frontend/src/styles`.","lastModifiedDate":"2021-09-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"It is recommended that you have a basic knowledge of CSS before starting to learn SCSS. Once you understand how CSS works, you can proceed to focus on how SCSS is translated into CSS.","lastModifiedDate":"2021-05-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* You can refer to the [style rules](https://sass-lang.com/documentation/style-rules) to learn about the similarities and differences between SCSS and CSS.","lastModifiedDate":"2021-05-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"{{ step(2) }} **Learn the RepoSense frontend architecture**","lastModifiedDate":"2021-05-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* You may want to refer to the [frontend architecture](report.html#report-architecture) to understand the implementation.","lastModifiedDate":"2021-05-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* Another way for you to understand the frontend is to use **Vue.js devtools** to learn how the various Vue Components interact with each other. You can refer to the [frontend debugging guide](workflow.html#debugging-front-end) for more information.","lastModifiedDate":"2021-05-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"{{ step(3) }} **Gain some hands-on experience**","lastModifiedDate":"2021-05-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Here are some small tasks for you to gain some basic knowledge of the code related to the RepoSense frontend. You can do each in a separate branch in your local copy of the code.","lastModifiedDate":"2021-05-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003cpanel header\u003d\"**Task 1: Highlight the selected author name in the summary view**\" type\u003d\"primary\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  **Task 1: Highlight the selected author name in the summary view**","lastModifiedDate":"2021-05-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  1. Open a [report](https://dashboard-1507-pr-reposense-reposense.surge.sh/).","lastModifiedDate":"2021-05-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  2. Randomly open the authorship contribution panel of an author (The icon is `\u003c/\u003e`).","lastModifiedDate":"2021-05-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  3. You should see that, after you open the panel, the author title background on the chart panel becomes yellow, and the background of the `\u003c/\u003e` icon you clicked becomes green.","lastModifiedDate":"2021-05-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  **Your Task**","lastModifiedDate":"2021-05-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  Make corresponding changes to `summary charts` so that in step 3, after opening the panel, the font colour of the author title (in the form of `authorDisplayName(authorName)`) on the chart panel also becomes green.","lastModifiedDate":"2021-05-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 1\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":335,"author":{"gitId":"yhtMinceraft1010X"},"content":"  Try to locate where the author title is in [`v-summary-charts.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/v-summary-charts.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 2\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":340,"author":{"gitId":"yhtMinceraft1010X"},"content":"  You can check what `activeUser` and `activeRepo` do in [`v-summary-charts.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/v-summary-charts.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 3\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":345,"author":{"gitId":"yhtMinceraft1010X"},"content":"  Refer to how changes are made to the title background and icon background in [`v-summary-charts.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/v-summary-charts.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 4\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":350,"author":{"gitId":"yhtMinceraft1010X"},"content":"  Some of the CSS styling for `v-summary-charts.vue` is in [`style.scss`](https://github.com/reposense/RepoSense/blob/master/frontend/src/styles/style.scss). You can add corresponding class selector if necessary.","lastModifiedDate":"2021-09-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Suggested solution\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  There is more than 1 way to achieve this. One solution is shown as the following:","lastModifiedDate":"2021-05-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"  Add this to `v_summary.scss`.","lastModifiedDate":"2021-05-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  .active-text {","lastModifiedDate":"2021-05-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027green\u0027);","lastModifiedDate":"2021-05-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-05-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":365,"author":{"gitId":"yhtMinceraft1010X"},"content":"  In `v-summary-charts.vue`, locate `summary-chart__title--name`, and add the following to its `v-bind:class` attribute map.","lastModifiedDate":"2021-09-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  \u0027active-text\u0027: user.name \u003d\u003d\u003d activeUser \u0026\u0026 user.repoName \u003d\u003d\u003d activeRepo","lastModifiedDate":"2021-05-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"\u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003cpanel header\u003d\"**Task 2: Add tooltip for file path in authorship panel**\" type\u003d\"primary\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  **Task 2: Add tooltip for file path in authorship panel**","lastModifiedDate":"2021-05-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  1. Open a [report](https://dashboard-1507-pr-reposense-reposense.surge.sh/).","lastModifiedDate":"2021-05-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  2. Randomly open the authorship contribution panel of an author (The icon is `\u003c/\u003e`).","lastModifiedDate":"2021-05-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"  3. Select a random file in the authorship contribution panel, and hover your mouse on an icon on the file title, a corresponding tooltip will show up, suggesting what the purpose of the icon is. However, when you hover the mouse over the file path on the file title, there is no tool tip shown, even if clicking the path itself will also trigger some event.","lastModifiedDate":"2021-05-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  \u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  For example, if you open the authorship contribution panel of an author in `reposense/RepoSense[master]` and hover the mouse over the triangular icon beside the file path `src/main/java/reposense/model/Author.java`, you should see a tooltip saying `Click to hide file details` above the icon. However, when you hover the mouse over the file path `src/main/java/reposense/model/Author.java`, there is no corresponding tooltip shown.","lastModifiedDate":"2021-05-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"  **Your Task**","lastModifiedDate":"2021-05-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  Make corresponding `authorship contribution panel` so that in step 3, when hovering your mouse over the file path:","lastModifiedDate":"2021-05-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  * A tip saying `This is the file path. Click to hide file details` will show up when the file details are shown","lastModifiedDate":"2021-05-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  * A tip saying `This is the file path. Click to show file details` will show up when the file details are not shown.","lastModifiedDate":"2021-05-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 1\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":395,"author":{"gitId":"yhtMinceraft1010X"},"content":"  Try to locate where the file title and the file path are in [`v-authorship.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-authorship.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 2\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":400,"author":{"gitId":"yhtMinceraft1010X"},"content":"  You can check how tooltip is added for the triangular icon in the file title in [`v-authorship.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-authorship.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 3\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  You can check what `file.active` does and how it is used to switch between different tooltip messages when hovering the mouse on the corresponding icon.","lastModifiedDate":"2021-05-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Suggested solution\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  There is more than 1 way to achieve this. One solution is shown as the following:","lastModifiedDate":"2021-05-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-05-08"},{"lineNumber":412,"author":{"gitId":"yhtMinceraft1010X"},"content":"  1. In `v-authorship.vue`, locate the section that iterates through each file in `selectedFiles`. ","lastModifiedDate":"2021-09-05"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  2. There is a specific portion of the section that renders the toggle icon, the file index, and the file path of the file title.","lastModifiedDate":"2021-05-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  3. Try to locate the `span` tag that renders `file.path`, and wraps it inside a new `tooptip`.","lastModifiedDate":"2021-05-08"},{"lineNumber":415,"author":{"gitId":"-"},"content":"  4. In the `tooltip`, use the following instructions to handle the switch of tooltip message.","lastModifiedDate":"2021-05-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  span.tooltip-text(v-show\u003d\"file.active\") This is the file path. Click to hide file details","lastModifiedDate":"2021-05-08"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  span.tooltip-text(v-show\u003d\"!file.active\") This is the file path. Click to show file details","lastModifiedDate":"2021-05-08"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003cpanel header\u003d\"**Task 3: Add tooltip for commit message title in zoom panel**\" type\u003d\"primary\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  **Task 3: Add tooltip for commit message title in zoom panel**","lastModifiedDate":"2021-05-08"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  1. Open a [report](https://dashboard-1507-pr-reposense-reposense.surge.sh/).","lastModifiedDate":"2021-05-08"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  2. Randomly open the commits panel of an author.","lastModifiedDate":"2021-05-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  3. Select a random commit in the commits panel, and hover your mouse on the icons on the commit title, there is no tooltip shown saying that it will redirect you to a different site.","lastModifiedDate":"2021-05-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  For example, given the [report](https://dashboard-1507-pr-reposense-reposense.surge.sh/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003deugenepeh\u0026zR\u003dreposense%2FRepoSense%5Bmaster%5D\u0026zACS\u003d99.28792569659443\u0026zS\u003d2017-10-09\u0026zFS\u003d\u0026zU\u003d2021-04-04\u0026zMG\u003dundefined\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse), if you hover the mouse over the commit title `README: add acknowledgements section (#978)`, there is no corresponding tooltip shown, but when you click on the commit title, you will be redirected to a different site to see the commit details.","lastModifiedDate":"2021-05-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"  **Your Task**","lastModifiedDate":"2021-05-08"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"  Make corresponding changes to `zoom panel` so that in step 3, when hovering your mouse over the commit title, a tooltip saying `Click to view the detailed file changes in the commit` will show up on the commit title.","lastModifiedDate":"2021-05-08"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 1\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":444,"author":{"gitId":"yhtMinceraft1010X"},"content":"  Try to locate where the commit title is in [`v-zoom.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-zoom.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 2\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":449,"author":{"gitId":"yhtMinceraft1010X"},"content":"  You can check how tooltip is added for other icons in [`v-zoom.vue`](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-zoom.vue).","lastModifiedDate":"2021-09-05"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Hint 3\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":454,"author":{"gitId":"-"},"content":"  Check what `selectedCommits` does and how the link and commit title of each commit is retrieved.","lastModifiedDate":"2021-05-08"},{"lineNumber":455,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  \u003cpanel header\u003d\"Suggested solution\"\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":459,"author":{"gitId":"-"},"content":"  There is more than 1 way to achieve this. One solution is shown as the following:","lastModifiedDate":"2021-05-08"},{"lineNumber":460,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-05-08"},{"lineNumber":461,"author":{"gitId":"yhtMinceraft1010X"},"content":"  1. In `v-zoom.vue`, locate the section that iterates througth each `day` in `selectedCommits`.","lastModifiedDate":"2021-09-05"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  2. The component that helps render the commit message title should be an `a` tag which uses the `getSliceLink` method to set the link to the commit details and uses `slice.messageTitle` to show the commit message title.","lastModifiedDate":"2021-05-08"},{"lineNumber":463,"author":{"gitId":"-"},"content":"  3. Wrap the `a` tag in a new `tooltip`.","lastModifiedDate":"2021-05-08"},{"lineNumber":464,"author":{"gitId":"-"},"content":"  4. In the `tooltip`, add the following content to show the tooltip message.","lastModifiedDate":"2021-05-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":467,"author":{"gitId":"-"},"content":"  span.tooltip-text Click to view the detailed file changes in the commit","lastModifiedDate":"2021-05-08"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-05-08"},{"lineNumber":469,"author":{"gitId":"-"},"content":"  \u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003c/panel\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":475,"author":{"gitId":"-"},"content":"This is only for your practice. There is no need for you to commit this change and submit it in a pull request.","lastModifiedDate":"2021-05-08"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":478,"author":{"gitId":"-"},"content":"{{ step(4) }} **Next Step**","lastModifiedDate":"2021-05-08"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":480,"author":{"gitId":"-"},"content":"You can now proceed to learn the [contributing workflow](workflow.html).","lastModifiedDate":"2021-05-08"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2021-05-08"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":484,"author":{"gitId":"-"},"content":"## DevOps","lastModifiedDate":"2021-05-08"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-05-08"},{"lineNumber":486,"author":{"gitId":"-"},"content":"If you want to understand and contribute to the DevOps aspect of RepoSense, you can refer to the [DevOps guide](https://github.com/reposense/RepoSense/wiki/DevOps-guide) for more information.","lastModifiedDate":"2021-05-08"}],"authorContributionMap":{"yhtMinceraft1010X":13,"-":473}},{"path":"docs/dg/report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"HTML report\" %}","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","lastModifiedDate":"2020-06-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2020-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","lastModifiedDate":"2020-06-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"The report\u0027s source files are located in [`frontend/src`](https://github.com/reposense/RepoSense/blob/master/frontend/src) and are built by [spuild](https://github.com/ongspxm/spuild2) before being packaged into the JAR file to be extracted as part of the report.","lastModifiedDate":"2021-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"The main HTML file is generated from [`frontend/src/index.pug`](https://github.com/reposense/RepoSense/blob/master/frontend/src/index.pug).","lastModifiedDate":"2020-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"[Vue](https://vuejs.org/v2/api/) (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. It is heavily utilized in the report to update the information in the various views dynamically. (Style guide available [here](https://vuejs.org/v2/style-guide/), Developer tool available [here](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd)). Vue lifecycle hooks are the defined methods that get executed in a particular stage of the Vue object lifespan. The following is the Vue lifecycle diagram taken from [here](https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram) indicating the hook sequence:","lastModifiedDate":"2021-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"![vue lifecycle diagram](../images/vue-lifecycle-diagram.png)","lastModifiedDate":"2020-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"The following is a snapshot of the report:","lastModifiedDate":"2020-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"![report screenshot](../images/report-summary.png)","lastModifiedDate":"2020-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Report architecture","lastModifiedDate":"2020-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![report architecture](../images/report-architecture.png)","lastModifiedDate":"2020-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"The main Vue object (`window.app`) is responsible for loading the report (through `summary.json`). Its `repos` attribute is tied to the global `window.REPOS`, and is passed into the various other modules when the information is needed.","lastModifiedDate":"2021-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"`window.app` is broken down into two main parts","lastModifiedDate":"2020-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"- the summary view","lastModifiedDate":"2020-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"- and the tabbed interface","lastModifiedDate":"2020-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The summary view acts as the main report, which shows the various calculations. \u003c/br\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The tabbed interface is responsible for loading various modules such as authorship and zoom to display additional information.","lastModifiedDate":"2020-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Javascript and Vue files","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"- [**main.js**](#main-main-js) - main controller that pushes content into different modules","lastModifiedDate":"2020-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"- [**api.js**](#data-loader-api-js) - loading and parsing of the report content","lastModifiedDate":"2020-06-09"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"- [**v_summary.vue**](#summary-view-v-summary-vue) - module that supports the summary view","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"- [**v_authorship.vue**](#authorship-view-v-authorship-vue) - module that supports the authorship tab view","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"- [**v_zoom.vue**](#zoom-view-v-zoom-vue) - module that supports the zoom tab view","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"- [**v_ramp.vue**](#ramp-view-v-ramp-vue) - module that supports the ramp chart view","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"- [**v_segment.vue**](#segment-view-v-segment-vue) - module that supports the code segment view","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## JSON report files","lastModifiedDate":"2020-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"- **summary.json** - a list of all the repositories and their respective details","lastModifiedDate":"2020-06-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"- **projName/commits.json** - contains information of the users\u0027 commits information (e.g., line deletion, insertion, etc.), grouped by date","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"- **projName/authorship.json** - contains information from git blame, detailing the author of each line for all the processed files","lastModifiedDate":"2020-06-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Main ([main.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/main.js))","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"This contains the logic for the main VueJS object, `window.app`, which is responsible for passing the necessary data into the relevant modules to be loaded.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"`v_summary`, `v_authorship`, `v_zoom`, `v_segment`, and `v_ramp` are components embedded into the report and will render the corresponding content based on the data passed into it from the main `window.app`.","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Loading of report information","lastModifiedDate":"2020-06-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The main Vue object depends on the `summary.json` data to determine the right `commits.json` files to load into memory. This is handled by `api.js`, which loads the relevant file information from the network files if available; otherwise, a report archive, `archive.zip`, has to be used.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Once the relevant `commit.json` files are loaded, all the repo information will be passed into `v_summary` to be loaded in the summary view as the relevant ramp charts.","lastModifiedDate":"2020-06-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Activating additional view modules","lastModifiedDate":"2020-06-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Most activity or actions should happen within the module itself, but in the case where there is a need to spawn or alter the view of another module, an event is emitted from the first module to the main Vue object (`window.app`), which then handles the data received and passes it along to the relevant modules.","lastModifiedDate":"2020-06-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Hash link","lastModifiedDate":"2020-06-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Other than the global main Vue object, another global variable we have is the `window.hashParams`. This object is responsible for generating the relevant permalink for a specific view of the report\u0027s summary module.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Data loader ([api.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/utils/api.js))","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"This is the module that is in charge of loading and parsing the data files generated as part of the report.","lastModifiedDate":"2020-06-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Loading from ZIP file","lastModifiedDate":"2020-06-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Due to security design, most modern browsers (e.g., Chrome) do not allow web pages to obtain local files using the directory alone. As such, a ZIP archive of the report information will be produced alongside the report generation.","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"This archive will be used in place of the network files to load information into the report when the network files are unavailable.","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The API module will be handling all requests for all the JSON data files. If the network file is not available, the files will be obtained from the zip archive provided.","lastModifiedDate":"2021-02-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Retrieving and parsing information","lastModifiedDate":"2020-06-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"After the JSON files are loaded from their respective sources, the data will be parsed as objects and included inside the global storage object, `window.REPOS`,  in the right format.","lastModifiedDate":"2020-06-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"For the basic skeleton of `window.REPOS`, refer to the generated `summary.json` file in the report for more details.","lastModifiedDate":"2020-06-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Summary view ([v-summary.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-summary.vue))","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `v_summary` module is in charge of loading the ramp charts from the corresponding `commits.json`.","lastModifiedDate":"2020-06-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureSummary.puml\"/\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Initializing the data for the ramp charts","lastModifiedDate":"2020-06-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The summary module is activated after the information is loaded from the main Vue.JS object. At creation, the `repo` attribute is populated with the `window.REPOS` object, which contains information loaded from `summary.json`.","lastModifiedDate":"2020-06-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Filtering users and repositories","lastModifiedDate":"2020-06-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The commits information is retrieved from the corresponding project folders for each repository. This information will be filtered and sorted before being passed into the template to be displayed as ramp charts.","lastModifiedDate":"2021-01-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Authorship view ([v-authorship.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-authorship.vue))","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The authorship module retrieves the relevant information from the corresponding `authorship.json` file if it is not yet loaded. If it has been loaded, the data will be written into `window.REPOS` and be read from there instead.","lastModifiedDate":"2020-06-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureAuthorship.puml\"/\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Showing relevant information by authors","lastModifiedDate":"2020-06-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The files will be filtered, picking only files the selected author has written in. The lines are then split into chunks of \"touched\" and \"untouched\" code segments displayed in the tab view which will be popped up on the right side of the screen.","lastModifiedDate":"2021-02-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Zoom view ([v-zoom.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/v-zoom.vue))","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The `v_zoom` module is in charge of filtering and displaying the commits from the ramp chart\u0027s selected sub-range.","lastModifiedDate":"2021-02-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Ramp view ([v-ramp.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/v-ramp.vue))","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `v_ramp` module is responsible for receiving the relevant information from `v_summary` and generating ramp charts that contain ramp slices.","lastModifiedDate":"2020-06-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Padding for dates","lastModifiedDate":"2020-06-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"For ramps between the date ranges, the slices will be selected and it will be pre and post padded with empty slices to align the ramp slice between the `sinceDate` and `untilDate`. The ramps will then be rendered with the slices in the right position.","lastModifiedDate":"2020-06-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Segment view ([v-segment.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/v-segment.vue))","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"The `v-segment` module is used as a component in `v_authorship`. It separates the code in terms of \"touched\" and \"untouched\" segments and only loads each \"untouched\" segment when it is toggled.","lastModifiedDate":"2020-06-09"}],"authorContributionMap":{"yhtMinceraft1010X":13,"-":119}},{"path":"docs/dg/styleGuides.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Style guides\" %}","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","lastModifiedDate":"2020-06-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","lastModifiedDate":"2020-06-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Our coding standards are mostly based on those at [se-education.org/guides](https://se-education.org/guides).","lastModifiedDate":"2020-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [**CSS** coding standard](https://se-education.org/guides/conventions/css.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [**Files/folders** naming conventions](https://se-education.org/guides/conventions/files.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [**HTML** coding standard](https://se-education.org/guides/conventions/html.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* [**Markdown/MarkBind** coding standard](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* [**Java** coding standard](https://se-education.org/guides/conventions/java/index.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* [**JavaScript** coding standard](https://se-education.org/guides/conventions/javascript.html)","lastModifiedDate":"2020-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Documentation**: Follow the [**Google developer documentation style guide**](https://developers.google.com/style).","lastModifiedDate":"2020-06-09"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Note on Ternary Operators:","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"Ternary operators can be used to shorten if-else blocks such as this:","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"```","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"Date min \u003d new Date(Long.MIN_VALUE);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"if (!commitInfos.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    min \u003d commitInfos.get(0).getTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"```","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"The result would look something like this:","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"```","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"Date min \u003d commitInfos.isEmpty() ? new Date(Long.MIN_VALUE) : commitInfos.get(0).getTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"```","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"To preserve readability, it is recommended that if-else blocks should only be ","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"converted to ternary operators if the resultant code can be kept at most 3 lines long","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"(in accordance to the coding standard).","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yhtMinceraft1010X":18,"-":19}},{"path":"docs/ug/configFiles.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Config files format\" %}","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","lastModifiedDate":"2020-06-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2020-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% set mandatory %}\u003cspan class\u003d\"badge badge-danger\"\u003emandatory\u003c/span\u003e{% endset %}","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","lastModifiedDate":"2020-06-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are the details of the various config files used by RepoSense.","lastModifiedDate":"2020-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**RepoSense ignores the order of column headers in the CSV config files. However, the spelling of the column headers must match the specified headers exactly, or the column would be ignored by RepoSense.**","lastModifiedDate":"2021-04-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2020-06-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**A value in a config file is optional to provide unless it is specified as {{ mandatory }}**.","lastModifiedDate":"2021-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2020-06-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## `repo-config.csv`","lastModifiedDate":"2020-06-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"**`repo-config.csv` file contains repo-level config data.** Each row represents a repository\u0027s configuration ([example](repo-config.csv)).","lastModifiedDate":"2020-06-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Column Name | Explanation","lastModifiedDate":"2020-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"----------- | -----------","lastModifiedDate":"2020-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Repository\u0027s Location {{ mandatory }}| The `GitHub URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar`","lastModifiedDate":"2020-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author e.g., `test/**;temp/**`. Refer to the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) for the path glob syntax.","lastModifiedDate":"2021-04-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"FH-30"},"content":"Ignore Commits List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive).","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Ignore Authors List\u003csup\u003e*+\u003c/sup\u003e | The list of authors to ignore during analysis. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name).","lastModifiedDate":"2020-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Shallow Cloning | Enter **`yes`** to clone the repository using Git\u0027s shallow cloning functionality. This option can significantly reduce the time taken to clone large repositories. However, the option should ideally be disabled for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The Shallow Cloning option is incompatible with the \"--last-modified-date\" CLI flag.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2020-06-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"When using [standalone config](#config-json-standalone-config-file) (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`.","lastModifiedDate":"2020-06-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2020-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## `author-config.csv`","lastModifiedDate":"2020-06-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Optionally, you can use an `author-config.csv` (which should be in the same directory as the `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Column Name | Explanation","lastModifiedDate":"2020-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"----------- | -----------","lastModifiedDate":"2020-06-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`","lastModifiedDate":"2020-06-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Branch | The branch to analyze for this author, e.g., `master`. Default: the author will be bound to all the repos in `repo-config.csv` that has the same repo\u0027s location, regardless of branch.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Author\u0027s GitHub ID {{ mandatory }}| GitHub username of the target author, e.g., `JohnDoe`","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated Github emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails).","lastModifiedDate":"2020-06-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Author\u0027s Display Name | The name to display for the author. Default: author\u0027s GitHub username.","lastModifiedDate":"2020-06-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name).","lastModifiedDate":"2020-06-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`. The path glob syntax is the same as that of Ignore Glob List in `repo-config.csv`.","lastModifiedDate":"2021-04-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"If `author-config.csv` is not given and the repo has not provided author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"## `group-config.csv`","lastModifiedDate":"2020-06-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Optionally, you can provide a `group-config.csv`(which should be in the same directory as `repo-config.csv` file) to provide details on any custom groupings for files in specified repositories ([example](group-config.csv)). It should contain the following columns:","lastModifiedDate":"2020-06-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Column Name | Explanation","lastModifiedDate":"2020-06-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"----------- | -----------","lastModifiedDate":"2020-06-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`","lastModifiedDate":"2020-06-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Group Name {{ mandatory }}| Name of the group, e.g.,`test`.","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Globs * {{ mandatory }}| The list of file path globs to include for specified group, e.g.,`**/test/*;**.java`.","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Note that a file in a given repository should only be tagged to one group. \u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"e.g.: `example.java` in `example-repo` can either be in the `test` group or the `code` group, but not in both `test` and `code` group. If multiple groups are specified for a given file, the latter group (i.e., `code` group) is set for the file.","lastModifiedDate":"2021-02-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## `report-config.json`","lastModifiedDate":"2020-11-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"You can optionally use `report-config.json` to customize report generation by providing the following information. ([example](report-config.json))","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**Fields to provide**:","lastModifiedDate":"2020-11-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* `title`: Title of the generated report, which is also the title of the deployed dashboard. Default: \"RepoSense Report\"","lastModifiedDate":"2020-11-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","lastModifiedDate":"2020-11-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-standalone\"\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"## `config.json` (standalone config file)","lastModifiedDate":"2020-06-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:","lastModifiedDate":"2020-06-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* which files/authors/commits to analyze/omit","lastModifiedDate":"2020-06-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* which git and GitHub usernames belong to which authors","lastModifiedDate":"2020-06-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* the display of an author","lastModifiedDate":"2020-06-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](https://github.com/reposense/RepoSense/blob/master/_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):","lastModifiedDate":"2020-06-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```json {.no-line-numbers}","lastModifiedDate":"2020-06-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-06-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],","lastModifiedDate":"2020-06-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  \"formats\": [\"html\", \"css\"],","lastModifiedDate":"2020-06-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\", \"abc123..def456\"],","lastModifiedDate":"2020-11-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \"ignoreAuthorList\": [\"charlie\"],","lastModifiedDate":"2020-06-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  \"authors\":","lastModifiedDate":"2020-06-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  [","lastModifiedDate":"2020-06-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2020-06-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \"githubId\": \"alice\",","lastModifiedDate":"2020-06-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],","lastModifiedDate":"2020-06-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \"displayName\": \"Alice T.\",","lastModifiedDate":"2020-06-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \"authorNames\": [\"AT\", \"A\"],","lastModifiedDate":"2020-06-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \"ignoreGlobList\": [\"**.css\"]","lastModifiedDate":"2020-06-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    },","lastModifiedDate":"2020-06-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2020-06-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \"githubId\": \"bob\"","lastModifiedDate":"2020-06-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-06-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  ]","lastModifiedDate":"2020-06-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-06-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-06-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Note: all fields are optional unless specified otherwise.","lastModifiedDate":"2020-06-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**Fields to provide _repository-level_ info**:","lastModifiedDate":"2020-06-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob).","lastModifiedDate":"2020-06-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `formats`: File formats to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive).","lastModifiedDate":"2020-11-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `ignoreAuthorList`: The list of authors to ignore during analysis. Authors specified in `authors` field or `author-config.csv` will be also be omitted if they are in this list. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name).","lastModifiedDate":"2020-06-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**Fields to provide _author-level_ info**:\u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Note: `authors` field should contain _all_ authors that should be captured in the analysis.","lastModifiedDate":"2020-06-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `githubId`: GitHub username of the author. {{ mandatory }} field.","lastModifiedDate":"2020-06-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `emails`: Associated GitHub emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails).","lastModifiedDate":"2020-06-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `displayName`: Name to display on the report for this author.","lastModifiedDate":"2020-06-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default, RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name).","lastModifiedDate":"2021-02-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author. The path glob syntax is specified by the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob). In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`.","lastModifiedDate":"2021-04-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Format: `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report.","lastModifiedDate":"2020-06-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## A note about git author name","lastModifiedDate":"2020-06-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:","lastModifiedDate":"2020-06-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}","lastModifiedDate":"2020-06-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-06-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"commit cd7f610e0becbdf331d5231887d8010a689f87c7","lastModifiedDate":"2020-06-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Author: ConfiguredAuthorName \u003cauthor@example.com\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:14:41 2018 +0800","lastModifiedDate":"2020-06-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    Make some changes to show my new author\u0027s name","lastModifiedDate":"2020-06-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49","lastModifiedDate":"2020-06-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Author: ActualGitHubId \u003cauthor@example.com\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:13:13 2018 +0800","lastModifiedDate":"2020-06-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    Initial commit","lastModifiedDate":"2020-06-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":" ...","lastModifiedDate":"2020-06-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-06-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"`ActualGitHubId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"To find the author name that you are currently using for your current git repository, run the following command within your git repository:","lastModifiedDate":"2020-06-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}","lastModifiedDate":"2020-06-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"git config user.name","lastModifiedDate":"2020-06-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-06-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):","lastModifiedDate":"2020-06-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}","lastModifiedDate":"2020-06-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"git config user.name \"YOUR_AUTHOR_NAME”","lastModifiedDate":"2020-06-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-06-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"To set the author name to use a default value you want for future git repositories, you can use the following command:","lastModifiedDate":"2020-06-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}","lastModifiedDate":"2020-06-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"git config --global user.name \"YOUR_AUTHOR_NAME”","lastModifiedDate":"2020-06-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-06-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"RepoSense expects the Git Author Name to be the same as author\u0027s GitHub username. If an author\u0027s `Git Author Name` is different from her `GitHub ID`, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too.","lastModifiedDate":"2020-06-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar.","lastModifiedDate":"2020-06-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2020-06-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-06-09"}],"authorContributionMap":{"FH-30":1,"-":193}},{"path":"frontend/cypress/tests/chartView/chartView_filterBreakdown.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027filter breakdown\u0027, () \u003d\u003e {","lastModifiedDate":"2020-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check breakdown by file type should show file types\u0027, () \u003d\u003e {","lastModifiedDate":"2020-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    Cypress.wait();","lastModifiedDate":"2020-05-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        .check()","lastModifiedDate":"2020-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    // should show file type checkboxes","lastModifiedDate":"2020-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // should show file type legends","lastModifiedDate":"2020-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  });","lastModifiedDate":"2020-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"  it(\u0027check, uncheck and recheck breakdown by file type should check all file types\u0027, () \u003d\u003e {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    Cypress.wait();","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .check()","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    // uncheck all file types","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .uncheck()","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"    cy.contains(\u0027breakdown by file type\u0027).scrollIntoView();","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    // uncheck and recheck breakdown by file type","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .uncheck()","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027not.be.checked\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .check()","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"  });","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  it(\u0027uncheck all file types should show no file types\u0027, () \u003d\u003e {","lastModifiedDate":"2020-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Cypress.wait();","lastModifiedDate":"2020-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        .check()","lastModifiedDate":"2020-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // uncheck all file types","lastModifiedDate":"2020-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        .uncheck()","lastModifiedDate":"2020-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // should not show file type legends","lastModifiedDate":"2020-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.visible\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  });","lastModifiedDate":"2020-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  it(\u0027uncheck file type should uncheck all option and not show legend\u0027, () \u003d\u003e {","lastModifiedDate":"2020-05-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Cypress.wait();","lastModifiedDate":"2020-05-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        .check()","lastModifiedDate":"2020-05-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // uncheck gradle file type","lastModifiedDate":"2020-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"gradle\"]\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .uncheck()","lastModifiedDate":"2020-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // should not show gradle file type legend","lastModifiedDate":"2020-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts \u003e div \u003e div.summary-charts__fileType--breakdown span\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        .should(\u0027not.contain.text\u0027, \u0027gradle\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // all option should be unchecked","lastModifiedDate":"2020-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"all\"]\u0027)","lastModifiedDate":"2020-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  });","lastModifiedDate":"2020-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"});","lastModifiedDate":"2020-05-12"}],"authorContributionMap":{"yhtMinceraft1010X":27,"-":58}},{"path":"frontend/cypress/tests/codeView/codeView_reload.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {","lastModifiedDate":"2020-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {","lastModifiedDate":"2020-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    Cypress.wait();","lastModifiedDate":"2020-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    // open the code panel","lastModifiedDate":"2020-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        .first()","lastModifiedDate":"2020-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        .click();","lastModifiedDate":"2020-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // change sort by","lastModifiedDate":"2021-04-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        .select(\u0027LoC\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // change sort order","lastModifiedDate":"2021-04-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        .select(\u0027Descending\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // select radio-button","lastModifiedDate":"2020-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        .check()","lastModifiedDate":"2020-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .uncheck()","lastModifiedDate":"2020-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":32,"author":{"gitId":"FH-30"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)","lastModifiedDate":"2021-08-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.reload();","lastModifiedDate":"2020-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .should(\u0027have.value\u0027, \u0027lineOfCode\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .should(\u0027have.value\u0027, \u0027true\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)","lastModifiedDate":"2020-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-09"},{"lineNumber":52,"author":{"gitId":"FH-30"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)","lastModifiedDate":"2021-08-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        .should(\u0027be.checked\u0027);","lastModifiedDate":"2020-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  });","lastModifiedDate":"2020-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"});","lastModifiedDate":"2020-10-09"}],"authorContributionMap":{"FH-30":2,"-":53}},{"path":"frontend/src/styles/panels.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027colors\u0027;","lastModifiedDate":"2020-04-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@import \u0027z-indices\u0027;","lastModifiedDate":"2020-04-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":".panel-padding {","lastModifiedDate":"2020-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  padding: 2rem 1.5rem 2rem 2.2rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"#app-wrapper {","lastModifiedDate":"2020-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  height: 100vh;","lastModifiedDate":"2020-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  left: 0;","lastModifiedDate":"2020-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  top: 0;","lastModifiedDate":"2020-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  z-index: z-index(\u0027app-wrapper\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  #tab-resize {","lastModifiedDate":"2020-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    cursor: col-resize;","lastModifiedDate":"2020-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    height: 100%;","lastModifiedDate":"2020-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    width: 13.250px;","lastModifiedDate":"2020-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  .tab-close {","lastModifiedDate":"2020-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    position: relative;","lastModifiedDate":"2020-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    top: calc(50vh - 3rem);","lastModifiedDate":"2020-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    svg {","lastModifiedDate":"2020-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027grey\u0027, \u0027300\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027black\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      padding: 3rem .25rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  .left-resize-container {","lastModifiedDate":"2020-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    flex-grow: 1;","lastModifiedDate":"2020-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    height: 100%;","lastModifiedDate":"2020-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    min-width: 0;","lastModifiedDate":"2020-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .right-resize-container {","lastModifiedDate":"2020-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    flex: 0 0 50%;","lastModifiedDate":"2020-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    height: 100%;","lastModifiedDate":"2020-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    min-width: 0;","lastModifiedDate":"2020-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  #tab-resize-guide {","lastModifiedDate":"2020-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    $tabs-width: 50%;","lastModifiedDate":"2020-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    cursor: col-resize;","lastModifiedDate":"2020-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    height: 100%;","lastModifiedDate":"2020-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    position: fixed;","lastModifiedDate":"2020-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    right: $tabs-width;","lastModifiedDate":"2020-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    width: 2px;","lastModifiedDate":"2020-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);","lastModifiedDate":"2020-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  #tabs-wrapper {","lastModifiedDate":"2020-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    height: 100%;","lastModifiedDate":"2020-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    overflow-y: scroll;","lastModifiedDate":"2020-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    position: relative;","lastModifiedDate":"2020-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    .tab-content {","lastModifiedDate":"2020-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      display: flex;","lastModifiedDate":"2020-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .tab-pane {","lastModifiedDate":"2020-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        text-align: left;","lastModifiedDate":"2020-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        width: 100%;","lastModifiedDate":"2020-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":".hash {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"  background-color: mui-color(\u0027grey\u0027, \u0027200\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"  border-radius: 5px;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"  display: inline-block;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"  margin: 0 5px 5px 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010X"},"content":"  padding: 0 5px;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010X"},"content":"  span {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010X"},"content":"    text-align: center;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010X"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010X"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010X"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":".fileTypes {","lastModifiedDate":"2020-04-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  align-items: center;","lastModifiedDate":"2020-04-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  margin: 5px 0 5px 0;","lastModifiedDate":"2020-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  text-align: left;","lastModifiedDate":"2020-04-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  .checkboxes {","lastModifiedDate":"2020-04-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    label {","lastModifiedDate":"2020-04-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      align-items: center;","lastModifiedDate":"2020-04-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      border-radius: 5px;","lastModifiedDate":"2020-04-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      display: inline-flex;","lastModifiedDate":"2020-04-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      margin: 0 5px 5px 0;","lastModifiedDate":"2020-04-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      padding: 0 5px;","lastModifiedDate":"2020-04-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    span {","lastModifiedDate":"2020-04-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      margin-left: .25rem;","lastModifiedDate":"2020-04-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":".fileTypeLabel {","lastModifiedDate":"2020-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  display: inline-block;","lastModifiedDate":"2020-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  margin: 0 5px 5px 0;","lastModifiedDate":"2020-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  padding: 0 5px;","lastModifiedDate":"2020-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026.binary {","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027white\u0027);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    border: 1px solid mui-color(\u0027grey\u0027, \u0027800\u0027);","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027grey\u0027, \u0027800\u0027);","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":".toolbar {","lastModifiedDate":"2020-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  cursor: pointer;","lastModifiedDate":"2020-04-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  float: right;","lastModifiedDate":"2020-04-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  \u0026--multiline {","lastModifiedDate":"2020-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u003e a {","lastModifiedDate":"2020-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      margin: 1px 0;","lastModifiedDate":"2020-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      text-align: end;","lastModifiedDate":"2020-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".sorting {","lastModifiedDate":"2020-04-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  align-items: center;","lastModifiedDate":"2020-04-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-04-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  margin-top: 1.0rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  .mui-select {","lastModifiedDate":"2020-04-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-04-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    padding-right: 15px;","lastModifiedDate":"2020-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  select {","lastModifiedDate":"2020-05-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @include medium-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  label {","lastModifiedDate":"2020-04-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @include medium-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    overflow-y: hidden;","lastModifiedDate":"2020-04-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  \u0026 \u003e label {","lastModifiedDate":"2020-04-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    margin-left: 10px;","lastModifiedDate":"2020-04-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  span {","lastModifiedDate":"2020-04-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    margin-left: .25rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".panel-title {","lastModifiedDate":"2020-05-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  @include large-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  display: inline;","lastModifiedDate":"2020-05-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":".panel-heading {","lastModifiedDate":"2020-04-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  .group-name {","lastModifiedDate":"2020-04-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @include large-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-04-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  .author {","lastModifiedDate":"2020-04-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @include medium-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    margin-left: .3rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  .period {","lastModifiedDate":"2020-04-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @include medium-font;","lastModifiedDate":"2020-05-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    margin-left: 2rem;","lastModifiedDate":"2020-04-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-04-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-04-08"}],"authorContributionMap":{"yhtMinceraft1010X":12,"-":176}},{"path":"src/main/java/reposense/RepoSense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2020-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","lastModifiedDate":"2018-07-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2018-07-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2018-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","lastModifiedDate":"2019-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;","lastModifiedDate":"2019-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.GroupConfiguration;","lastModifiedDate":"2019-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2018-12-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","lastModifiedDate":"2020-11-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","lastModifiedDate":"2018-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;","lastModifiedDate":"2018-08-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;","lastModifiedDate":"2019-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidCsvException;","lastModifiedDate":"2020-02-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidLocationException;","lastModifiedDate":"2018-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.parser.ParseException;","lastModifiedDate":"2018-06-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;","lastModifiedDate":"2018-08-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;","lastModifiedDate":"2018-06-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.system.ReportServer;","lastModifiedDate":"2019-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-07-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2019-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * The main RepoSense class.","lastModifiedDate":"2019-04-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class RepoSense {","lastModifiedDate":"2018-05-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoSense.class);","lastModifiedDate":"2018-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final int SERVER_PORT_NUMBER \u003d 9000;","lastModifiedDate":"2018-07-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E MMM d HH:mm:ss yyyy z\");","lastModifiedDate":"2019-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VERSION_UNSPECIFIED \u003d \"unspecified\";","lastModifiedDate":"2019-04-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The entry point of the program.","lastModifiedDate":"2019-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2018-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-05-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            TimeUtil.startTimer();","lastModifiedDate":"2019-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            CliArguments cliArguments \u003d ArgsParser.parse(args);","lastModifiedDate":"2018-06-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs \u003d null;","lastModifiedDate":"2018-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig \u003d new ReportConfiguration();","lastModifiedDate":"2020-11-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (cliArguments instanceof ViewCliArguments) {","lastModifiedDate":"2018-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, ((","lastModifiedDate":"2019-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        ViewCliArguments) cliArguments).getReportDirectoryPath().toAbsolutePath());","lastModifiedDate":"2018-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2018-07-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else if (cliArguments instanceof ConfigCliArguments) {","lastModifiedDate":"2018-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                configs \u003d getRepoConfigurations((ConfigCliArguments) cliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                reportConfig \u003d ((ConfigCliArguments) cliArguments).getReportConfiguration();","lastModifiedDate":"2021-04-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else if (cliArguments instanceof LocationsCliArguments) {","lastModifiedDate":"2018-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                configs \u003d getRepoConfigurations((LocationsCliArguments) cliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"CliArguments\u0027s subclass type is unhandled.\");","lastModifiedDate":"2018-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            RepoConfiguration.setFormatsToRepoConfigs(configs, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            RepoConfiguration.setDatesToRepoConfigs(configs, cliArguments.getSinceDate(), cliArguments.getUntilDate());","lastModifiedDate":"2018-06-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            RepoConfiguration.setZoneIdToRepoConfigs(configs, cliArguments.getZoneId().toString());","lastModifiedDate":"2020-11-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(configs,","lastModifiedDate":"2019-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    cliArguments.isStandaloneConfigIgnored());","lastModifiedDate":"2019-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(configs,","lastModifiedDate":"2020-11-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    cliArguments.isLastModifiedDateIncluded());","lastModifiedDate":"2020-11-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(configs,","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    cliArguments.isShallowCloningPerformed());","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            List\u003cPath\u003e reportFoldersAndFiles \u003d ReportGenerator.generateReposReport(configs,","lastModifiedDate":"2019-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    cliArguments.getOutputFilePath().toAbsolutePath().toString(),","lastModifiedDate":"2019-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    cliArguments.getAssetsFilePath().toAbsolutePath().toString(), reportConfig,","lastModifiedDate":"2020-11-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    formatter.format(ZonedDateTime.now(cliArguments.getZoneId())),","lastModifiedDate":"2019-04-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    cliArguments.getSinceDate(), cliArguments.getUntilDate(),","lastModifiedDate":"2019-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),","lastModifiedDate":"2020-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(),","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    TimeUtil::getElapsedTime, cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            FileUtil.zipFoldersAndFiles(reportFoldersAndFiles, cliArguments.getOutputFilePath().toAbsolutePath(),","lastModifiedDate":"2019-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    \".json\");","lastModifiedDate":"2019-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.info(TimeUtil.getElapsedTimeMessage());","lastModifiedDate":"2019-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (cliArguments.isAutomaticallyLaunching()) {","lastModifiedDate":"2019-01-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getOutputFilePath().toAbsolutePath());","lastModifiedDate":"2019-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-01-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException | ParseException | InvalidCsvException e) {","lastModifiedDate":"2020-02-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);","lastModifiedDate":"2020-02-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException e) {","lastModifiedDate":"2019-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            // help message was printed by the ArgumentParser; it is safe to exit.","lastModifiedDate":"2019-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-12-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code ConfigCliArguments}.","lastModifiedDate":"2018-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if user-supplied csv file does not exists or is not readable.","lastModifiedDate":"2018-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if user-supplied repo-config csv is malformed.","lastModifiedDate":"2020-02-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(ConfigCliArguments cliArguments)","lastModifiedDate":"2020-02-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throws IOException, InvalidCsvException {","lastModifiedDate":"2020-02-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","lastModifiedDate":"2018-08-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs;","lastModifiedDate":"2019-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs;","lastModifiedDate":"2019-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            authorConfigs \u003d new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();","lastModifiedDate":"2018-08-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            RepoConfiguration.merge(repoConfigs, authorConfigs);","lastModifiedDate":"2018-08-02"},{"lineNumber":115,"author":{"gitId":"aidoxe-123"},"content":"            AuthorConfiguration.setHasAuthorConfigFile(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2020-01-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            // FileNotFoundException thrown as author-config.csv is not found.","lastModifiedDate":"2020-01-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            // Ignore exception as the file is optional.","lastModifiedDate":"2018-08-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (IOException | InvalidCsvException e) {","lastModifiedDate":"2020-02-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            // for all IO and invalid csv exceptions, log the error and continue","lastModifiedDate":"2020-02-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);","lastModifiedDate":"2020-02-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            groupConfigs \u003d new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();","lastModifiedDate":"2019-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);","lastModifiedDate":"2019-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2020-01-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            // FileNotFoundException thrown as groups-config.csv is not found.","lastModifiedDate":"2020-01-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // Ignore exception as the file is optional.","lastModifiedDate":"2019-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException | InvalidCsvException e) {","lastModifiedDate":"2020-02-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            // for all other IO and invalid csv exceptions, log the error and continue","lastModifiedDate":"2020-02-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);","lastModifiedDate":"2020-02-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return repoConfigs;","lastModifiedDate":"2018-08-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code LocationsCliArguments}.","lastModifiedDate":"2018-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-08-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if all repo locations are invalid.","lastModifiedDate":"2020-08-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(LocationsCliArguments cliArguments)","lastModifiedDate":"2020-08-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2020-08-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (String locationString : cliArguments.getLocations()) {","lastModifiedDate":"2018-12-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2018-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                configs.add(new RepoConfiguration(new RepoLocation(locationString)));","lastModifiedDate":"2018-12-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            } catch (InvalidLocationException ile) {","lastModifiedDate":"2018-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, ile.getMessage(), ile);","lastModifiedDate":"2018-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (configs.isEmpty()) {","lastModifiedDate":"2020-08-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ParseException(\"All repository locations are invalid.\");","lastModifiedDate":"2020-08-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-08-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return configs;","lastModifiedDate":"2018-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static String getVersion() {","lastModifiedDate":"2019-04-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String version \u003d RepoSense.class.getPackage().getImplementationVersion();","lastModifiedDate":"2019-04-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (version \u003d\u003d null || version.equals(VERSION_UNSPECIFIED)) {","lastModifiedDate":"2019-04-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            version \u003d System.getProperty(\"version\");","lastModifiedDate":"2019-04-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return version;","lastModifiedDate":"2019-04-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-12"}],"authorContributionMap":{"-":169,"aidoxe-123":1}},{"path":"src/main/java/reposense/authorship/FileInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2019-12-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2020-11-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2020-11-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;","lastModifiedDate":"2018-06-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;","lastModifiedDate":"2018-06-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitBlame;","lastModifiedDate":"2018-12-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-06-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","lastModifiedDate":"2018-12-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-06-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2020-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2020-11-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-06-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Analyzes the target and information given in the {@code FileInfo}.","lastModifiedDate":"2018-06-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-06-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FileInfoAnalyzer {","lastModifiedDate":"2018-06-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoAnalyzer.class);","lastModifiedDate":"2018-06-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_NAME_OFFSET \u003d \"author \".length();","lastModifiedDate":"2018-06-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_EMAIL_OFFSET \u003d \"author-mail \".length();","lastModifiedDate":"2019-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_TIME_OFFSET \u003d \"author-time \".length();","lastModifiedDate":"2019-12-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_TIMEZONE_OFFSET \u003d \"author-tz \".length();","lastModifiedDate":"2019-12-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final int FULL_COMMIT_HASH_LENGTH \u003d 40;","lastModifiedDate":"2018-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_MISSING \u003d \"Unable to analyze the file located at \\\"%s\\\" \"","lastModifiedDate":"2019-12-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"as the file is missing from your system. Skipping this file.\";","lastModifiedDate":"2019-12-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT \u003d \"Repo %s was cloned using \"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"shallow cloning. As such, the \\\"last modified date\\\" values may be incorrect.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Analyzes the lines of the file, given in the {@code fileInfo}, that has changed in the time period provided","lastModifiedDate":"2018-06-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * by {@code config}.","lastModifiedDate":"2018-06-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the","lastModifiedDate":"2020-02-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code Author} specified in {@code config} contributed to the file in {@code fileInfo}.","lastModifiedDate":"2019-12-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static FileResult analyzeTextFile(RepoConfiguration config, FileInfo fileInfo) {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();","lastModifiedDate":"2018-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {","lastModifiedDate":"2019-12-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));","lastModifiedDate":"2019-12-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2019-12-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (FileUtil.isEmptyFile(config.getRepoRoot(), relativePath)) {","lastModifiedDate":"2020-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2020-02-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        aggregateBlameAuthorModifiedAndDateInfo(config, fileInfo);","lastModifiedDate":"2020-11-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));","lastModifiedDate":"2019-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":66,"author":{"gitId":"aidoxe-123"},"content":"        AnnotatorAnalyzer.aggregateAnnotationAuthorInfo(fileInfo, config.getAuthorConfig());","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!config.getAuthorList().isEmpty() \u0026\u0026 fileInfo.isAllAuthorsIgnored(config.getAuthorList())) {","lastModifiedDate":"2018-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2018-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return generateTextFileResult(fileInfo);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Analyzes the binary file, given in the {@code fileInfo}, that has changed in the time period provided","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * by {@code config}.","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Author} specified in {@code config} contributed to the file in {@code fileInfo}.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static FileResult analyzeBinaryFile(RepoConfiguration config, FileInfo fileInfo) {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return generateBinaryFileResult(config, fileInfo);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileResult} with the authorship results from {@code fileInfo} consolidated.","lastModifiedDate":"2018-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static FileResult generateTextFileResult(FileInfo fileInfo) {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (LineInfo line : fileInfo.getLines()) {","lastModifiedDate":"2018-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Author author \u003d line.getAuthor();","lastModifiedDate":"2018-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, authorContributionMap.getOrDefault(author, 0) + 1);","lastModifiedDate":"2018-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return FileResult.createTextFileResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            fileInfo.getPath(), fileInfo.getFileType(), fileInfo.getLines(), authorContributionMap);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileResult} with the authorship results from binary {@code fileInfo} consolidated.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Authorship results are indicated in the {@code authorContributionMap} as contributions with zero line counts.","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns {@code null} if none of the {@code Author} specified in {@code config} contributed to the file in","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code fileInfo}.","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static FileResult generateBinaryFileResult(RepoConfiguration config, FileInfo fileInfo) {","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String authorsString \u003d GitLog.getBinaryFileAuthors(config, fileInfo.getPath());","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (authorsString.isEmpty()) { // Empty string, means no author at all","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String authorString : authorsString.split(\"\\n\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String[] arr \u003d authorString.split(\"\\t\");","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String authorName \u003d arr[0];","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String authorEmail \u003d arr[1];","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            authors.add(config.getAuthor(authorName, authorEmail));","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (Author author : authors) {","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, 0);","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return FileResult.createBinaryFileResult(fileInfo.getPath(), fileInfo.getFileType(), authorContributionMap);","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the {@code Author} and {@code Date} for each line in {@code fileInfo} based on the git blame analysis","lastModifiedDate":"2020-11-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * on the file.","lastModifiedDate":"2020-11-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static void aggregateBlameAuthorModifiedAndDateInfo(RepoConfiguration config, FileInfo fileInfo) {","lastModifiedDate":"2020-11-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String blameResults \u003d getGitBlameResult(config, fileInfo.getPath());","lastModifiedDate":"2018-06-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String[] blameResultLines \u003d blameResults.split(\"\\n\");","lastModifiedDate":"2018-06-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());","lastModifiedDate":"2018-08-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Long sinceDateInMs \u003d config.getSinceDate().getTime();","lastModifiedDate":"2019-12-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Long untilDateInMs \u003d config.getUntilDate().getTime();","lastModifiedDate":"2019-12-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        for (int lineCount \u003d 0; lineCount \u003c blameResultLines.length; lineCount +\u003d 5) {","lastModifiedDate":"2019-12-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String commitHash \u003d blameResultLines[lineCount].substring(0, FULL_COMMIT_HASH_LENGTH);","lastModifiedDate":"2018-08-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String authorName \u003d blameResultLines[lineCount + 1].substring(AUTHOR_NAME_OFFSET);","lastModifiedDate":"2019-01-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String authorEmail \u003d blameResultLines[lineCount + 2]","lastModifiedDate":"2019-01-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    .substring(AUTHOR_EMAIL_OFFSET).replaceAll(\"\u003c|\u003e\", \"\");","lastModifiedDate":"2019-01-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Long commitDateInMs \u003d Long.parseLong(blameResultLines[lineCount + 3].substring(AUTHOR_TIME_OFFSET)) * 1000;","lastModifiedDate":"2019-12-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String authorTimeZone \u003d blameResultLines[lineCount + 4].substring(AUTHOR_TIMEZONE_OFFSET);","lastModifiedDate":"2019-12-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Author author \u003d config.getAuthor(authorName, authorEmail);","lastModifiedDate":"2019-04-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!fileInfo.isFileLineTracked(lineCount / 5) || author.isIgnoringFile(filePath)","lastModifiedDate":"2020-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    || CommitHash.isInsideCommitList(commitHash, config.getIgnoreCommitList())","lastModifiedDate":"2019-12-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    || commitDateInMs \u003c sinceDateInMs || commitDateInMs \u003e untilDateInMs) {","lastModifiedDate":"2019-12-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                author \u003d Author.UNKNOWN_AUTHOR;","lastModifiedDate":"2019-01-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (config.isLastModifiedDateIncluded()) {","lastModifiedDate":"2020-11-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                if (config.isShallowCloningPerformed()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                            MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT, config.getRepoName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                // convert the commit date from the system default time zone to cli-specified timezone","lastModifiedDate":"2020-11-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Date convertedCommitDate \u003d TimeUtil.getZonedDateFromSystemDate(new Date(commitDateInMs),","lastModifiedDate":"2020-11-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                        ZoneId.of(config.getZoneId()));","lastModifiedDate":"2020-11-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                fileInfo.setLineLastModifiedDate(lineCount / 5, convertedCommitDate);","lastModifiedDate":"2020-11-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2020-11-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            fileInfo.setLineAuthor(lineCount / 5, author);","lastModifiedDate":"2019-12-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame on {@code filePath}.","lastModifiedDate":"2018-06-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private static String getGitBlameResult(RepoConfiguration config, String filePath) {","lastModifiedDate":"2018-06-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return GitBlame.blame(config.getRepoRoot(), filePath);","lastModifiedDate":"2018-12-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-22"}],"authorContributionMap":{"-":182,"aidoxe-123":1}},{"path":"src/main/java/reposense/authorship/FileInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2018-06-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileReader;","lastModifiedDate":"2018-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-22"},{"lineNumber":6,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2018-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2019-06-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2019-06-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2018-06-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2018-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2018-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-06-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;","lastModifiedDate":"2018-12-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.git.GitDiff;","lastModifiedDate":"2018-12-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.GitRevList;","lastModifiedDate":"2018-12-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","lastModifiedDate":"2019-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-06-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2019-06-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-06-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Extracts out all the relevant {@code FileInfo} from the repository.","lastModifiedDate":"2018-06-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-06-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FileInfoExtractor {","lastModifiedDate":"2018-06-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoExtractor.class);","lastModifiedDate":"2018-06-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_FILE_INFO \u003d \"Extracting relevant file info from %s (%s)...\";","lastModifiedDate":"2019-03-31"},{"lineNumber":36,"author":{"gitId":"chan-j-d"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path for current OS or \"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chan-j-d"},"content":"            + \"indicates a possible regex match issue. Skipping this directory.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String DIFF_FILE_CHUNK_SEPARATOR \u003d \"\\ndiff --git \\\"?\\\u0027?a/.*\\n\";","lastModifiedDate":"2020-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String LINE_CHUNKS_SEPARATOR \u003d \"\\n@@ \";","lastModifiedDate":"2018-07-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String LINE_INSERTED_SYMBOL \u003d \"+\";","lastModifiedDate":"2018-07-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String STARTING_LINE_NUMBER_GROUP_NAME \u003d \"startingLineNumber\";","lastModifiedDate":"2018-07-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FILE_CHANGED_GROUP_NAME \u003d \"filePath\";","lastModifiedDate":"2018-07-20"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"    private static final String FILE_DELETED_SYMBOL \u003d \"dev/null\";","lastModifiedDate":"2021-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MATCH_GROUP_FAIL_MESSAGE_FORMAT \u003d \"Failed to match the %s group for:\\n%s\";","lastModifiedDate":"2018-07-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String BINARY_FILE_LINE_DIFF_RESULT \u003d \"-\\t-\\t\";","lastModifiedDate":"2019-06-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final int LINE_CHANGED_HEADER_INDEX \u003d 0;","lastModifiedDate":"2018-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Pattern STARTING_LINE_NUMBER_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2018-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"-(\\\\d)+(,)?(\\\\d)* \\\\+(?\u003cstartingLineNumber\u003e\\\\d+)(,)?(\\\\d)* @@\");","lastModifiedDate":"2018-07-20"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"    private static final Pattern FILE_CHANGED_PATTERN \u003d Pattern.compile(\"\\n(\\\\+){3} b?/(?\u003cfilePath\u003e.*?)\\t?\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant non-binary files given in {@code config}.","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e extractTextFileInfos(RepoConfiguration config) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_FILE_INFO, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // checks out to the latest commit of the date range to ensure the FileInfo generated correspond to the","lastModifiedDate":"2018-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // git blame file analyze output","lastModifiedDate":"2018-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), config.getUntilDate());","lastModifiedDate":"2018-12-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (CommitNotFoundException cnfe) {","lastModifiedDate":"2018-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return fileInfos;","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String lastCommitHash \u003d GitRevList.getCommitHashBeforeDate(","lastModifiedDate":"2018-12-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                config.getRepoRoot(), config.getBranch(), config.getSinceDate());","lastModifiedDate":"2018-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"        fileInfos \u003d (lastCommitHash.isEmpty())","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"                ? getAllFileInfo(config, false)","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"                : getEditedFileInfos(config, lastCommitHash);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        fileInfos.sort(Comparator.comparing(FileInfo::getPath));","lastModifiedDate":"2018-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return fileInfos;","lastModifiedDate":"2018-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant binary files given in {@code config}.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e extractBinaryFileInfos(RepoConfiguration config) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d getAllFileInfo(config, true);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        binaryFileInfos.sort(Comparator.comparing(FileInfo::getPath));","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return binaryFileInfos;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Generates a list of relevant {@code FileInfo} for all files that were edited in between the current","lastModifiedDate":"2018-07-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * commit and the {@code lastCommitHash} commit, marks each {@code LineInfo} for each {@code FileInfo} on","lastModifiedDate":"2018-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * whether they have been inserted within the commit range or not, and returns it.","lastModifiedDate":"2018-07-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e getEditedFileInfos(RepoConfiguration config, String lastCommitHash) {","lastModifiedDate":"2018-07-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String fullDiffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), lastCommitHash);","lastModifiedDate":"2018-12-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // no diff between the 2 commits, return an empty list","lastModifiedDate":"2018-07-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (fullDiffResult.isEmpty()) {","lastModifiedDate":"2018-07-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return fileInfos;","lastModifiedDate":"2018-07-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String[] fileDiffResultList \u003d fullDiffResult.split(DIFF_FILE_CHUNK_SEPARATOR);","lastModifiedDate":"2018-07-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFilesSet \u003d getFiles(config, false);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (String fileDiffResult : fileDiffResultList) {","lastModifiedDate":"2018-07-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Matcher filePathMatcher \u003d FILE_CHANGED_PATTERN.matcher(fileDiffResult);","lastModifiedDate":"2018-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            // diff result does not have the markers to indicate that file has any line changes, skip it","lastModifiedDate":"2018-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!filePathMatcher.find()) {","lastModifiedDate":"2018-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2018-07-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            String filePath \u003d filePathMatcher.group(FILE_CHANGED_GROUP_NAME);","lastModifiedDate":"2018-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // file is deleted, skip it as well","lastModifiedDate":"2018-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (filePath.equals(FILE_DELETED_SYMBOL)) {","lastModifiedDate":"2018-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2018-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!isValidTextFile(filePath, textFilesSet)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-06-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-06-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (config.getFileTypeManager().isInsideWhitelistedFormats(filePath)) {","lastModifiedDate":"2019-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FileInfo currentFileInfo \u003d generateFileInfo(config.getRepoRoot(), filePath);","lastModifiedDate":"2018-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                setLinesToTrack(currentFileInfo, fileDiffResult);","lastModifiedDate":"2018-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                fileInfos.add(currentFileInfo);","lastModifiedDate":"2018-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return fileInfos;","lastModifiedDate":"2018-06-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns a {@code Set} of non-binary files for the repo {@code repoConfig}","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * if {@code isBinaryFiles} is set to `false`.","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Otherwise, returns a {@code Set} of binary files for the repo {@code repoConfig}","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Set\u003cPath\u003e getFiles(RepoConfiguration repoConfig, boolean isBinaryFile) {","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cString\u003e modifiedFileList \u003d GitDiff.getModifiedFilesList(Paths.get(repoConfig.getRepoRoot()));","lastModifiedDate":"2019-06-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // Gets rid of files with invalid directory name and filters by the {@code isBinaryFile} flag","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return modifiedFileList.stream()","lastModifiedDate":"2019-06-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .filter(file -\u003e isBinaryFile \u003d\u003d file.startsWith(BINARY_FILE_LINE_DIFF_RESULT))","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .map(file -\u003e file.split(\"\\t\")[2])","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .filter(FileUtil::isValidPath)","lastModifiedDate":"2019-06-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .map(filteredFile -\u003e Paths.get(filteredFile))","lastModifiedDate":"2019-06-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .collect(Collectors.toCollection(HashSet::new));","lastModifiedDate":"2019-06-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Analyzes the {@code fileDiffResult} and marks each {@code LineInfo} in {@code FileInfo} on whether they were","lastModifiedDate":"2018-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * inserted in between the commit range.","lastModifiedDate":"2018-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static void setLinesToTrack(FileInfo fileInfo, String fileDiffResult) {","lastModifiedDate":"2018-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String[] linesChangedChunk \u003d fileDiffResult.split(LINE_CHUNKS_SEPARATOR);","lastModifiedDate":"2018-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lineInfos \u003d fileInfo.getLines();","lastModifiedDate":"2018-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        int fileLinePointer \u003d 0;","lastModifiedDate":"2018-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // skips the header, index starts from 1","lastModifiedDate":"2018-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        for (int sectionIndex \u003d 1; sectionIndex \u003c linesChangedChunk.length; sectionIndex++) {","lastModifiedDate":"2018-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String linesChangedInSection \u003d linesChangedChunk[sectionIndex];","lastModifiedDate":"2018-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String[] linesChanged \u003d linesChangedInSection.split(\"\\n\");","lastModifiedDate":"2018-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            int startingLineNumber \u003d getStartingLineNumber(linesChanged[LINE_CHANGED_HEADER_INDEX]);","lastModifiedDate":"2018-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            // mark all untouched lines between sections as untracked","lastModifiedDate":"2018-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            while (fileLinePointer \u003c startingLineNumber - 1) {","lastModifiedDate":"2018-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                lineInfos.get(fileLinePointer++).setTracked(false);","lastModifiedDate":"2018-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            // skips the header, index starts from 1","lastModifiedDate":"2018-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            for (int lineIndex \u003d 1; lineIndex \u003c linesChanged.length; lineIndex++) {","lastModifiedDate":"2018-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                String lineChanged \u003d linesChanged[lineIndex];","lastModifiedDate":"2018-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                // set line added to be tracked","lastModifiedDate":"2018-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                if (lineChanged.startsWith(LINE_INSERTED_SYMBOL)) {","lastModifiedDate":"2018-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    lineInfos.get(fileLinePointer++).setTracked(true);","lastModifiedDate":"2018-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // set all remaining lines in file that were untouched to be untracked","lastModifiedDate":"2018-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        while (fileLinePointer \u003c lineInfos.size()) {","lastModifiedDate":"2018-07-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            lineInfos.get(fileLinePointer++).setTracked(false);","lastModifiedDate":"2018-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Traverses each file from the repo root directory, generates the {@code FileInfo} for each relevant file found","lastModifiedDate":"2018-06-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * based on {@code config} and inserts it into {@code fileInfos}.","lastModifiedDate":"2018-06-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private static List\u003cFileInfo\u003e getAllFileInfo(RepoConfiguration config, boolean isBinaryFiles) {","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e files \u003d getFiles(config, isBinaryFiles);","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        for (Path relativePath : files) {","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (!config.getFileTypeManager().isInsideWhitelistedFormats(relativePath.toString())) {","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fileInfos.add((isBinaryFiles)","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    ? new FileInfo(relativePath.toString())","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    : generateFileInfo(config.getRepoRoot(), relativePath.toString()));","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return fileInfos;","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileInfo} with a list of {@code LineInfo} for each line content in the","lastModifiedDate":"2018-06-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * {@code relativePath} file.","lastModifiedDate":"2018-06-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static FileInfo generateFileInfo(String repoRoot, String relativePath) {","lastModifiedDate":"2018-06-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d new FileInfo(relativePath);","lastModifiedDate":"2019-04-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(repoRoot, fileInfo.getPath());","lastModifiedDate":"2018-07-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(path.toFile()))) {","lastModifiedDate":"2018-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            String line;","lastModifiedDate":"2018-06-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2018-06-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2018-06-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                fileInfo.addLine(new LineInfo(lineNum++, line));","lastModifiedDate":"2018-06-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-06-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-06-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, ioe.getMessage(), ioe);","lastModifiedDate":"2018-06-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return fileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Returns the starting line changed number, within the file diff result, by matching the pattern inside","lastModifiedDate":"2018-07-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * {@code linesChanged}.","lastModifiedDate":"2018-07-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private static int getStartingLineNumber(String linesChanged) {","lastModifiedDate":"2018-07-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Matcher chunkHeaderMatcher \u003d STARTING_LINE_NUMBER_PATTERN.matcher(linesChanged);","lastModifiedDate":"2018-07-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (!chunkHeaderMatcher.find()) {","lastModifiedDate":"2018-07-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MATCH_GROUP_FAIL_MESSAGE_FORMAT, \"line changed\", linesChanged));","lastModifiedDate":"2018-07-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Should not have error matching line number pattern inside chunk header!\");","lastModifiedDate":"2018-07-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return Integer.parseInt(chunkHeaderMatcher.group(STARTING_LINE_NUMBER_GROUP_NAME));","lastModifiedDate":"2018-07-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-20"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Returns true if {@code filePath} is valid and the file is not in binary.","lastModifiedDate":"2019-06-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private static boolean isValidTextFile(String filePath, Set\u003cPath\u003e textFilesSet) {","lastModifiedDate":"2021-03-15"},{"lineNumber":244,"author":{"gitId":"chan-j-d"},"content":"        boolean isValidFilePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"chan-j-d"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"chan-j-d"},"content":"            isValidFilePath \u003d FileUtil.isValidPath(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"chan-j-d"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"chan-j-d"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":249,"author":{"gitId":"chan-j-d"},"content":"            isValidFilePath \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"chan-j-d"},"content":"        return isValidFilePath \u0026\u0026 textFilesSet.contains(Paths.get(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-22"}],"authorContributionMap":{"chan-j-d":14,"yhtMinceraft1010X":6,"-":234}},{"path":"src/main/java/reposense/authorship/analyzer/AnnotatorAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.analyzer;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2020-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2018-05-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2018-05-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-06-22"},{"lineNumber":13,"author":{"gitId":"aidoxe-123"},"content":"import reposense.model.AuthorConfiguration;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Analyzes the authorship of a {@code FileInfo} using the given annotations on the file.","lastModifiedDate":"2018-06-22"},{"lineNumber":17,"author":{"gitId":"aidoxe-123"},"content":" * Only the lines with the format (START OF LINE) COMMENT_SYMBOL @@author ONE_STRING_WITH_NO_SPACE (END OF LINE)","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"aidoxe-123"},"content":" * will be analyzed. Otherwise, the line will be ignored and treated as normal lines.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"aidoxe-123"},"content":" * If the line is analyzed, and the string following the author tag is a valid git id, and there is no author config","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"aidoxe-123"},"content":" * file, then the code will be attributed to the author with that git id. Otherwise, the code will be attributed to","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"aidoxe-123"},"content":" * unknown author","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzer {","lastModifiedDate":"2017-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_TAG \u003d \"@@author\";","lastModifiedDate":"2017-08-06"},{"lineNumber":25,"author":{"gitId":"aidoxe-123"},"content":"    // reference: https://github.com/shinnn/github-username-regex","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"aidoxe-123"},"content":"    private static final String REGEX_AUTHOR_NAME_FORMAT \u003d \"^[a-zA-Z0-9](?:[a-zA-Z0-9]|-(?\u003d[a-zA-Z0-9])){0,38}$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Pattern PATTERN_AUTHOR_NAME_FORMAT \u003d Pattern.compile(REGEX_AUTHOR_NAME_FORMAT);","lastModifiedDate":"2017-08-06"},{"lineNumber":28,"author":{"gitId":"aidoxe-123"},"content":"    private static final String REGEX_COMMENT_WITH_AUTHOR_TAG_FORMAT \u003d \"^[^\\\\w]*@@author(\\\\s[^\\\\s]+)?[\\\\s]*$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"aidoxe-123"},"content":"    private static final Pattern PATTERN_COMMENT_WITH_AUTHOR_TAG_FORMAT \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"aidoxe-123"},"content":"            Pattern.compile(REGEX_COMMENT_WITH_AUTHOR_TAG_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Overrides the authorship information in {@code fileInfo} based on annotations given on the file.","lastModifiedDate":"2018-06-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":35,"author":{"gitId":"aidoxe-123"},"content":"    public static void aggregateAnnotationAuthorInfo(FileInfo fileInfo, AuthorConfiguration authorConfig) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Optional\u003cAuthor\u003e currentAnnotatedAuthor \u003d Optional.empty();","lastModifiedDate":"2020-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());","lastModifiedDate":"2018-08-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        for (LineInfo lineInfo : fileInfo.getLines()) {","lastModifiedDate":"2018-06-22"},{"lineNumber":39,"author":{"gitId":"aidoxe-123"},"content":"            String lineContent \u003d lineInfo.getContent();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"aidoxe-123"},"content":"            Matcher matcher \u003d PATTERN_COMMENT_WITH_AUTHOR_TAG_FORMAT.matcher(lineContent);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"aidoxe-123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"aidoxe-123"},"content":"                Optional\u003cAuthor\u003e newAnnotatedAuthor \u003d findAuthorInLine(lineInfo.getContent(), authorConfig,","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        currentAnnotatedAuthor);","lastModifiedDate":"2021-05-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                if (!newAnnotatedAuthor.isPresent()) {","lastModifiedDate":"2020-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    // end of an author tag should belong to the current author too.","lastModifiedDate":"2020-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    lineInfo.setAuthor(currentAnnotatedAuthor.get());","lastModifiedDate":"2021-05-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                } else if (newAnnotatedAuthor.get().isIgnoringFile(filePath)) {","lastModifiedDate":"2020-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    newAnnotatedAuthor \u003d Optional.empty();","lastModifiedDate":"2020-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                //set a new author","lastModifiedDate":"2017-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                currentAnnotatedAuthor \u003d newAnnotatedAuthor;","lastModifiedDate":"2020-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            currentAnnotatedAuthor.ifPresent(lineInfo::setAuthor);","lastModifiedDate":"2020-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Extracts the author name from the given {@code line}, finds the corresponding {@code Author}","lastModifiedDate":"2019-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * in {@code authorAliasMap}, and returns this {@code Author} stored in an {@code Optional}.","lastModifiedDate":"2020-03-21"},{"lineNumber":62,"author":{"gitId":"aidoxe-123"},"content":"     * @return {@code Optional.of(Author#UNKNOWN_AUTHOR)} if there is an author config file and","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"aidoxe-123"},"content":"     *              no matching {@code Author} is found,","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         {@code Optional.empty()} if an end author tag is used (i.e. \"@@author\"),","lastModifiedDate":"2020-03-21"},{"lineNumber":65,"author":{"gitId":"aidoxe-123"},"content":"     *         {@code Optional.of(Author#tagged author)} otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":67,"author":{"gitId":"aidoxe-123"},"content":"    private static Optional\u003cAuthor\u003e findAuthorInLine(String line, AuthorConfiguration authorConfig,","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                                     Optional\u003cAuthor\u003e currentAnnotatedAuthor) {","lastModifiedDate":"2021-05-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-06"},{"lineNumber":70,"author":{"gitId":"aidoxe-123"},"content":"            Map\u003cString, Author\u003e authorAliasMap \u003d authorConfig.getAuthorDetailsToAuthorMap();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            String[] split \u003d line.split(AUTHOR_TAG);","lastModifiedDate":"2017-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String name \u003d extractAuthorName(split[1]);","lastModifiedDate":"2017-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (name \u003d\u003d null) {","lastModifiedDate":"2017-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                if (!currentAnnotatedAuthor.isPresent()) {","lastModifiedDate":"2021-05-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    // Attribute to unknown author if an empty author tag was provided, but not as an end author tag","lastModifiedDate":"2021-05-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    return Optional.of(Author.UNKNOWN_AUTHOR);","lastModifiedDate":"2021-05-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-05-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                return Optional.empty();","lastModifiedDate":"2020-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-08-06"},{"lineNumber":80,"author":{"gitId":"aidoxe-123"},"content":"            if (!authorAliasMap.containsKey(name) \u0026\u0026 !AuthorConfiguration.hasAuthorConfigFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"aidoxe-123"},"content":"                authorConfig.addAuthor(new Author(name));","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"aidoxe-123"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.of(authorAliasMap.getOrDefault(name, Author.UNKNOWN_AUTHOR));","lastModifiedDate":"2020-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2017-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!currentAnnotatedAuthor.isPresent()) {","lastModifiedDate":"2021-05-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                return Optional.of(Author.UNKNOWN_AUTHOR);","lastModifiedDate":"2021-05-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-05-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2020-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Extracts the name that follows the specific format.","lastModifiedDate":"2017-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @return an empty string if no such author was found, the new author name otherwise","lastModifiedDate":"2017-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static String extractAuthorName(String authorTagParameters) {","lastModifiedDate":"2018-05-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedParameters \u003d authorTagParameters.trim();","lastModifiedDate":"2017-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d PATTERN_AUTHOR_NAME_FORMAT.matcher(trimmedParameters);","lastModifiedDate":"2017-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        boolean foundMatch \u003d matcher.find();","lastModifiedDate":"2017-08-06"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (foundMatch) ? trimmedParameters : null;","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-06"}],"authorContributionMap":{"yhtMinceraft1010X":1,"-":79,"aidoxe-123":24}},{"path":"src/main/java/reposense/commits/CommitResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-05-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-05-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-05-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-05-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-05-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-05-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.commits.model.AuthorDailyContribution;","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;","lastModifiedDate":"2018-06-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;","lastModifiedDate":"2018-06-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;","lastModifiedDate":"2019-06-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;","lastModifiedDate":"2019-04-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2020-11-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-06-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Uses the commit analysis results to generate the summary information of a repository.","lastModifiedDate":"2018-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-06-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommitResultAggregator {","lastModifiedDate":"2018-06-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int DAYS_IN_MS \u003d 24 * 60 * 60 * 1000;","lastModifiedDate":"2019-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the {@code CommitContributionSummary} generated from aggregating the {@code commitResults}.","lastModifiedDate":"2018-06-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static CommitContributionSummary aggregateCommitResults(","lastModifiedDate":"2018-06-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            RepoConfiguration config, List\u003cCommitResult\u003e commitResults) {","lastModifiedDate":"2018-06-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Date startDate;","lastModifiedDate":"2019-06-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        startDate \u003d (config.getSinceDate().equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE))","lastModifiedDate":"2019-06-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ? getStartOfDate(getStartDate(commitResults), config.getZoneId())","lastModifiedDate":"2020-11-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                : config.getSinceDate();","lastModifiedDate":"2019-06-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ReportGenerator.setEarliestSinceDate(startDate);","lastModifiedDate":"2019-04-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getAuthorDailyContributionsMap(config.getAuthorDisplayNameMap().keySet(), commitResults,","lastModifiedDate":"2020-11-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        config.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Date lastDate \u003d commitResults.size() \u003d\u003d 0","lastModifiedDate":"2019-06-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                ? null","lastModifiedDate":"2019-06-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                : getStartOfDate(commitResults.get(commitResults.size() - 1).getTime(), config.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e authorContributionVariance \u003d","lastModifiedDate":"2018-06-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                calcAuthorContributionVariance(authorDailyContributionsMap, startDate, lastDate, config.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommitContributionSummary(","lastModifiedDate":"2018-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                config.getAuthorDisplayNameMap(),","lastModifiedDate":"2018-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                authorDailyContributionsMap,","lastModifiedDate":"2019-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                authorContributionVariance);","lastModifiedDate":"2018-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance of all authors.","lastModifiedDate":"2019-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static Map\u003cAuthor, Float\u003e calcAuthorContributionVariance(","lastModifiedDate":"2018-05-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e intervalContributionMaps, Date startDate, Date lastDate,","lastModifiedDate":"2020-11-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-12-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Author author : intervalContributionMaps.keySet()) {","lastModifiedDate":"2017-12-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e contributions \u003d intervalContributionMaps.get(author);","lastModifiedDate":"2019-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            result.put(author, getContributionVariance(contributions, startDate, lastDate, zoneId));","lastModifiedDate":"2020-11-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-12-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2018-01-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static float getContributionVariance(List\u003cAuthorDailyContribution\u003e contributions,","lastModifiedDate":"2019-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Date startDate, Date lastDate, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (contributions.size() \u003d\u003d 0) {","lastModifiedDate":"2018-05-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2018-05-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-05-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        //get mean","lastModifiedDate":"2018-01-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        float total \u003d 0;","lastModifiedDate":"2018-01-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        long totalDays \u003d (lastDate.getTime() - startDate.getTime()) / DAYS_IN_MS + 1;","lastModifiedDate":"2020-11-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (AuthorDailyContribution contribution : contributions) {","lastModifiedDate":"2019-02-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            total +\u003d contribution.getTotalContribution();","lastModifiedDate":"2018-01-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-12-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        float mean \u003d total / totalDays;","lastModifiedDate":"2019-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        float variance \u003d 0;","lastModifiedDate":"2018-01-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        long currentDate \u003d TimeUtil.getZonedDateFromSystemDate(startDate, ZoneId.of(zoneId)).getTime();","lastModifiedDate":"2020-11-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        int contributionIndex \u003d 0;","lastModifiedDate":"2019-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c totalDays; i +\u003d 1) {","lastModifiedDate":"2019-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (contributionIndex \u003c contributions.size()","lastModifiedDate":"2019-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    \u0026\u0026 currentDate \u003d\u003d contributions.get(contributionIndex).getDate().getTime()) {","lastModifiedDate":"2019-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow((mean - contributions.get(contributionIndex).getTotalContribution()), 2);","lastModifiedDate":"2019-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                contributionIndex +\u003d 1;","lastModifiedDate":"2019-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2019-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow(mean, 2);","lastModifiedDate":"2019-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            currentDate +\u003d DAYS_IN_MS;","lastModifiedDate":"2019-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-12-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return variance / totalDays;","lastModifiedDate":"2019-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap(","lastModifiedDate":"2019-02-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Set\u003cAuthor\u003e authorSet, List\u003cCommitResult\u003e commitResults, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2019-02-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        authorSet.forEach(author -\u003e authorDailyContributionsMap.put(author, new ArrayList\u003c\u003e()));","lastModifiedDate":"2019-02-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Date commitStartDate \u003d null;","lastModifiedDate":"2019-04-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        for (CommitResult commitResult : commitResults) {","lastModifiedDate":"2019-02-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            commitStartDate \u003d getSystemStartOfDate(commitResult.getTime(), zoneId);","lastModifiedDate":"2020-11-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Author commitAuthor \u003d commitResult.getAuthor();","lastModifiedDate":"2019-04-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions \u003d authorDailyContributionsMap.get(commitAuthor);","lastModifiedDate":"2019-04-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (authorDailyContributions.isEmpty()","lastModifiedDate":"2019-04-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    || !authorDailyContributions.get(authorDailyContributions.size() - 1).getDate()","lastModifiedDate":"2019-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                            .equals(commitStartDate)) {","lastModifiedDate":"2019-04-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                addDailyContributionForNewDate(authorDailyContributions, commitStartDate);","lastModifiedDate":"2019-04-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            authorDailyContributions.get(authorDailyContributions.size() - 1).addCommitContribution(commitResult);","lastModifiedDate":"2019-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return authorDailyContributionsMap;","lastModifiedDate":"2019-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static void addDailyContributionForNewDate(","lastModifiedDate":"2019-02-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions, Date date) {","lastModifiedDate":"2019-04-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        authorDailyContributions.add(new AuthorDailyContribution(date));","lastModifiedDate":"2019-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Get the starting point of the {@code current} date with respect to the {@code zoneId} timezone.","lastModifiedDate":"2020-11-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static Date getStartOfDate(Date current, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (current.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE)) {","lastModifiedDate":"2020-11-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return current;","lastModifiedDate":"2020-11-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.of(zoneId));","lastModifiedDate":"2020-11-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar","lastModifiedDate":"2020-11-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .Builder()","lastModifiedDate":"2020-11-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .setInstant(current.getTime())","lastModifiedDate":"2020-11-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2018-01-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);","lastModifiedDate":"2018-01-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);","lastModifiedDate":"2018-01-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2018-01-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2020-11-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Get the starting point of the {@code current} date that was given in {@code zoneId} timezone and convert into the","lastModifiedDate":"2020-11-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * system\u0027s timezone.","lastModifiedDate":"2020-11-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static Date getSystemStartOfDate(Date current, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.of(zoneId));","lastModifiedDate":"2020-11-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar","lastModifiedDate":"2020-11-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .Builder()","lastModifiedDate":"2020-11-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .setInstant(getStartOfDate(current, zoneId).getTime())","lastModifiedDate":"2020-11-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, zoneRawOffset - systemRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2018-01-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private static Date getStartDate(List\u003cCommitResult\u003e commitInfos) {","lastModifiedDate":"2018-06-22"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Date min \u003d (commitInfos.isEmpty()) ? new Date(Long.MIN_VALUE) : commitInfos.get(0).getTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return min;","lastModifiedDate":"2018-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-10-05"}],"authorContributionMap":{"yhtMinceraft1010X":1,"-":171}},{"path":"src/main/java/reposense/git/GitCatFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains git cat file related functionalities.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Git cat file provides content or type and size information for repository objects.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GitCatFile {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(GitCatFile.class);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns parent commits for the commit associated with the input commit hash.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getParentCommits(String root, String commitHash) throws CommitNotFoundException {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String catFileCommand \u003d \"git cat-file -p \" + commitHash;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            String output \u003d runCommand(rootPath, catFileCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"chan-j-d"},"content":"            List\u003cString\u003e parentCommits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            for (String line : output.split(\"\\n\")) {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                if (line.startsWith(\"parent\")) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    parentCommits.add(line.substring(7).trim());","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return parentCommits;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new CommitNotFoundException(\"Commit not found: \" + commitHash);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Given the input list of commit hashes, return a list of commit hashes for the parent","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * commits of all the commits.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getParentsOfCommits(String root, List\u003cString\u003e commitHashes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"chan-j-d"},"content":"        List\u003cString\u003e parentCommits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (String commitHash : commitHashes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                parentCommits.addAll(getParentCommits(root, commitHash));","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } catch (CommitNotFoundException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                logger.warning(\"Invalid commit hash ignored: \" + commitHash);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return parentCommits;","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chan-j-d":2,"-":55}},{"path":"src/main/java/reposense/git/GitClone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2018-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;","lastModifiedDate":"2018-12-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuote;","lastModifiedDate":"2018-12-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2018-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","lastModifiedDate":"2019-05-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","lastModifiedDate":"2019-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunner;","lastModifiedDate":"2019-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcess;","lastModifiedDate":"2019-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","lastModifiedDate":"2021-06-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-12-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains git clone related functionalities.","lastModifiedDate":"2018-12-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Git clone is responsible for cloning a local/remote repository into a new directory.","lastModifiedDate":"2018-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class GitClone {","lastModifiedDate":"2018-12-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(GitClone.class);","lastModifiedDate":"2018-12-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously to clone a bare repo specified in the {@code config}","lastModifiedDate":"2019-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2019-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return an instance of {@code CommandRunnerProcess} to allow tracking the status of the cloning process.","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs during command execution.","lastModifiedDate":"2019-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static CommandRunnerProcess cloneBareAsync(RepoConfiguration config, Path rootPath,","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            String outputFolderName) throws GitCloneException {","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return CommandRunner.runCommandAsync(rootPath, getCloneBareCommand(config, outputFolderName));","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously to clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return an instance of {@code CommandRunnerProcess} to allow tracking the status of the cloning process.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static CommandRunnerProcess cloneShallowBareAsync(RepoConfiguration config, Path rootPath,","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                                  String outputFolderName, Date sinceDate) throws GitCloneException {","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return CommandRunner.runCommandAsync(rootPath,","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                                    getCloneShallowBareCommand(config, outputFolderName, sinceDate));","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously to clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void clonePartialBare(RepoConfiguration config, Path rootPath,","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                                      String outputFolderName) throws GitCloneException {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            CommandRunner.runCommand(rootPath, getClonePartialBareCommand(config, outputFolderName));","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously to clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void cloneShallowPartialBare(RepoConfiguration config, Path rootPath,","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                  String outputFolderName, Date sinceDate) throws GitCloneException {","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandRunner.runCommand(rootPath, getCloneShallowPartialBareCommand(config, outputFolderName, sinceDate));","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Clones repo specified in the {@code config} and updates it with the branch info.","lastModifiedDate":"2019-07-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void clone(RepoConfiguration config) throws GitCloneException {","lastModifiedDate":"2019-07-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-22"},{"lineNumber":100,"author":{"gitId":"chan-j-d"},"content":"            Path rootPath \u003d FileUtil.getRepoParentFolder(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(rootPath.toString(), config.getRepoName());","lastModifiedDate":"2021-06-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","lastModifiedDate":"2021-06-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(config.getRepoRoot());","lastModifiedDate":"2019-07-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            } else if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath)) {","lastModifiedDate":"2021-06-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation() + \" as it was cloned before.\");","lastModifiedDate":"2021-06-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-06-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                logger.info(\"Cloning from \" + config.getLocation() + \"...\");","lastModifiedDate":"2019-07-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Files.createDirectories(rootPath);","lastModifiedDate":"2019-07-30"},{"lineNumber":110,"author":{"gitId":"chan-j-d"},"content":"                String command \u003d getCloneCommand(config, repoPath.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"chan-j-d"},"content":"                runCommand(Paths.get(\".\"), command);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                logger.info(\"Cloning completed!\");","lastModifiedDate":"2018-12-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-06-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2018-12-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, \"Error encountered in Git Cloning, will attempt to continue analyzing\", rte);","lastModifiedDate":"2018-12-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2018-12-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            //Due to an unsolved bug on Windows Git, for some repository, Git Clone will return an error even","lastModifiedDate":"2018-12-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            // though the repo is cloned properly.","lastModifiedDate":"2018-12-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new GitCloneException(ioe);","lastModifiedDate":"2018-12-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            config.updateBranch();","lastModifiedDate":"2019-07-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            GitCheckout.checkout(config.getRepoRoot(), config.getBranch());","lastModifiedDate":"2019-07-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (GitBranchException gbe) {","lastModifiedDate":"2019-05-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE,","lastModifiedDate":"2019-05-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    \"Exception met while trying to get current branch of repo. Analysis terminated.\", gbe);","lastModifiedDate":"2019-05-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new GitCloneException(gbe);","lastModifiedDate":"2019-05-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2019-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, \"Branch does not exist! Analysis terminated.\", rte);","lastModifiedDate":"2019-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2019-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Clones a bare repo specified in {@code config} into the folder {@code outputFolderName}.","lastModifiedDate":"2019-07-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws IOException if it fails to delete a directory.","lastModifiedDate":"2019-07-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":141,"author":{"gitId":"chan-j-d"},"content":"    public static void cloneBare(RepoConfiguration config, Path rootPath,","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"chan-j-d"},"content":"            String outputFolderName) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"chan-j-d"},"content":"        Path outputFolderPath \u003d Paths.get(outputFolderName);","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!SystemUtil.isTestEnvironment()) {","lastModifiedDate":"2021-06-03"},{"lineNumber":145,"author":{"gitId":"chan-j-d"},"content":"            FileUtil.deleteDirectory(outputFolderName);","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"chan-j-d"},"content":"            FileUtil.createDirectory(outputFolderPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(outputFolderPath)) {","lastModifiedDate":"2021-06-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-06-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-06-03"},{"lineNumber":150,"author":{"gitId":"chan-j-d"},"content":"        String command \u003d getCloneBareCommand(config, addQuote(outputFolderName));","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        runCommand(rootPath, command);","lastModifiedDate":"2019-07-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Performs a full clone from {@code clonedBareRepoLocation} into the folder {@code outputFolderName} and","lastModifiedDate":"2019-07-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * directly branches out to {@code targetBranch}.","lastModifiedDate":"2019-07-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @throws IOException if it fails to delete a directory.","lastModifiedDate":"2019-07-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs during command execution.","lastModifiedDate":"2019-07-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void cloneFromBareAndUpdateBranch(Path rootPath, RepoConfiguration config)","lastModifiedDate":"2019-07-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throws GitCloneException, IOException {","lastModifiedDate":"2019-07-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Path relativePath \u003d rootPath.relativize(FileUtil.getBareRepoPath(config));","lastModifiedDate":"2019-07-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String outputFolderName \u003d Paths.get(config.getRepoFolderName(), config.getRepoName()).toString();","lastModifiedDate":"2019-07-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path outputFolderPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, outputFolderName);","lastModifiedDate":"2021-06-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!SystemUtil.isTestEnvironment()) {","lastModifiedDate":"2021-06-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(outputFolderPath.toString());","lastModifiedDate":"2021-06-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } else if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(outputFolderPath)) {","lastModifiedDate":"2021-06-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutBranch(outputFolderPath.toString(), config.getBranch());","lastModifiedDate":"2021-06-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-06-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-06-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String command \u003d String.format(","lastModifiedDate":"2019-07-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \"git clone %s --branch %s %s\", relativePath, config.getBranch(), outputFolderName);","lastModifiedDate":"2019-07-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-07-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            runCommand(rootPath, command);","lastModifiedDate":"2019-04-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2019-07-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.severe(\"Exception met while cloning or checking out \" + config.getDisplayName() + \".\"","lastModifiedDate":"2019-07-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    + \"Analysis terminated.\");","lastModifiedDate":"2019-07-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","lastModifiedDate":"2019-07-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":185,"author":{"gitId":"chan-j-d"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"chan-j-d"},"content":"     * Constructs the command to clone a repo specified in the {@code config}","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"chan-j-d"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"chan-j-d"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"chan-j-d"},"content":"    private static String getCloneCommand(RepoConfiguration config, String outputFolderName) {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"chan-j-d"},"content":"        return \"git clone \" + addQuote(config.getLocation().toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"chan-j-d"},"content":"                + outputFolderName;","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Constructs the command to clone a bare repo specified in the {@code config}","lastModifiedDate":"2019-07-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2019-07-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private static String getCloneBareCommand(RepoConfiguration config, String outputFolderName) {","lastModifiedDate":"2019-07-30"},{"lineNumber":199,"author":{"gitId":"chan-j-d"},"content":"        String output \u003d \"git clone --bare \"","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(config.getLocation().toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"chan-j-d"},"content":"                + outputFolderName;","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"chan-j-d"},"content":"        return output;","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Constructs the command to shallow clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private static String getCloneShallowBareCommand(RepoConfiguration config,","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                                                    String outputFolderName, Date shallowSinceDate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"chan-j-d"},"content":"        return \"git clone --bare --shallow-since\u003d\"","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(shallowSinceDate.toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(config.getLocation().toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"chan-j-d"},"content":"                + outputFolderName;","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Constructs the command to partial clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private static String getClonePartialBareCommand(RepoConfiguration config, String outputFolderName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"chan-j-d"},"content":"        return \"git clone --bare --filter\u003dblob:none \"","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(config.getLocation().toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"chan-j-d"},"content":"                + outputFolderName;","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Constructs the command to shallow partial clone a bare repo specified in the {@code config}","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private static String getCloneShallowPartialBareCommand(RepoConfiguration config,","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                                                            String outputFolderName, Date shallowSinceDate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"chan-j-d"},"content":"        return \"git clone --bare --filter\u003dblob:none --shallow-since\u003d\"","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(shallowSinceDate.toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"chan-j-d"},"content":"                + addQuote(config.getLocation().toString()) + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"chan-j-d"},"content":"                + outputFolderName;","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-22"}],"authorContributionMap":{"chan-j-d":33,"-":205}},{"path":"src/main/java/reposense/model/AuthorConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2019-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2019-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2019-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2019-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2019-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2019-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2019-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2019-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2019-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2019-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents author configuration information from CSV config file for a single repository.","lastModifiedDate":"2019-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AuthorConfiguration {","lastModifiedDate":"2019-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";","lastModifiedDate":"2019-02-05"},{"lineNumber":19,"author":{"gitId":"aidoxe-123"},"content":"    public static final boolean DEFAULT_HAS_AUTHOR_CONFIG_FILE \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(AuthorConfiguration.class);","lastModifiedDate":"2019-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern EMAIL_PLUS_OPERATOR_PATTERN \u003d","lastModifiedDate":"2019-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Pattern.compile(\"^(?\u003cprefix\u003e.+)\\\\+(?\u003csuffix\u003e.*)(?\u003cdomain\u003e@.+)$\");","lastModifiedDate":"2019-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":24,"author":{"gitId":"aidoxe-123"},"content":"    private static boolean hasAuthorConfigFile \u003d DEFAULT_HAS_AUTHOR_CONFIG_FILE;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private RepoLocation location;","lastModifiedDate":"2019-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String branch;","lastModifiedDate":"2019-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient List\u003cAuthor\u003e authorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-02-05"},{"lineNumber":30,"author":{"gitId":"FH-30"},"content":"    private transient Map\u003cString, Author\u003e authorDetailsToAuthorMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient Map\u003cAuthor, String\u003e authorDisplayNameMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2019-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location) {","lastModifiedDate":"2019-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);","lastModifiedDate":"2019-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location, String branch) {","lastModifiedDate":"2019-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2019-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;","lastModifiedDate":"2019-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Clears authors information and use the information provided from {@code standaloneConfig}.","lastModifiedDate":"2019-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig, List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2019-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e newAuthorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-02-05"},{"lineNumber":47,"author":{"gitId":"FH-30"},"content":"        Map\u003cString, Author\u003e newAuthorDetailsToAuthorMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, String\u003e newAuthorDisplayNameMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2019-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (StandaloneAuthor sa : standaloneConfig.getAuthors()) {","lastModifiedDate":"2019-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Author author \u003d new Author(sa);","lastModifiedDate":"2019-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            author.importIgnoreGlobList(ignoreGlobList);","lastModifiedDate":"2019-12-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            newAuthorList.add(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            newAuthorDisplayNameMap.put(author, author.getDisplayName());","lastModifiedDate":"2019-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            List\u003cString\u003e aliases \u003d new ArrayList\u003c\u003e(author.getAuthorAliases());","lastModifiedDate":"2019-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(author.getEmails());","lastModifiedDate":"2019-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            aliases.add(author.getGitId());","lastModifiedDate":"2019-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            aliases.forEach(alias -\u003e {","lastModifiedDate":"2020-12-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                checkDuplicateAliases(newAuthorDetailsToAuthorMap, alias, author.getGitId());","lastModifiedDate":"2020-12-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                newAuthorDetailsToAuthorMap.put(alias, author);","lastModifiedDate":"2020-12-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2020-12-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            emails.forEach(email -\u003e newAuthorDetailsToAuthorMap.put(email, author));","lastModifiedDate":"2020-12-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAuthorList(newAuthorList);","lastModifiedDate":"2019-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAuthorDetailsToAuthorMap(newAuthorDetailsToAuthorMap);","lastModifiedDate":"2020-12-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAuthorDisplayNameMap(newAuthorDisplayNameMap);","lastModifiedDate":"2019-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Checks for duplicate aliases in {@code authorDetailsToAuthorMap} and generates warnings","lastModifiedDate":"2020-12-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param authorDetailsToAuthorMap","lastModifiedDate":"2020-12-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param alias","lastModifiedDate":"2020-12-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void checkDuplicateAliases(Map\u003cString, Author\u003e authorDetailsToAuthorMap, String alias, String gitId) {","lastModifiedDate":"2020-12-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(alias)) {","lastModifiedDate":"2020-12-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            logger.warning(String.format(","lastModifiedDate":"2020-12-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    \"Duplicate alias %s found. The alias will belong to the last author - %s\", alias, gitId));","lastModifiedDate":"2020-12-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-12-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2019-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2019-02-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2019-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof AuthorConfiguration)) {","lastModifiedDate":"2019-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2019-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AuthorConfiguration otherAuthorConfig \u003d (AuthorConfiguration) other;","lastModifiedDate":"2019-02-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return location.equals(otherAuthorConfig.location)","lastModifiedDate":"2019-02-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherAuthorConfig.branch)","lastModifiedDate":"2019-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorList.equals(otherAuthorConfig.authorList)","lastModifiedDate":"2019-02-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorDetailsToAuthorMap.equals(otherAuthorConfig.authorDetailsToAuthorMap)","lastModifiedDate":"2020-12-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorDisplayNameMap.equals(otherAuthorConfig.authorDisplayNameMap);","lastModifiedDate":"2019-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {","lastModifiedDate":"2019-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return authorDisplayNameMap;","lastModifiedDate":"2019-02-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {","lastModifiedDate":"2019-02-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.authorDisplayNameMap \u003d authorDisplayNameMap;","lastModifiedDate":"2019-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String getBranch() {","lastModifiedDate":"2019-02-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return branch;","lastModifiedDate":"2019-02-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {","lastModifiedDate":"2019-02-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;","lastModifiedDate":"2019-02-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {","lastModifiedDate":"2019-02-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return authorList;","lastModifiedDate":"2019-02-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the details of {@code author} to {@code AuthorConfiguration} including the default alias, aliases","lastModifiedDate":"2019-02-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * and display name.","lastModifiedDate":"2019-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void setAuthorDetails(Author author) {","lastModifiedDate":"2019-02-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Set GitHub Id and its corresponding email as default","lastModifiedDate":"2019-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, Arrays.asList(author.getGitId()));","lastModifiedDate":"2020-12-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, author.getAuthorAliases());","lastModifiedDate":"2020-12-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, author.getEmails());","lastModifiedDate":"2020-12-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        setAuthorDisplayName(author, author.getDisplayName());","lastModifiedDate":"2019-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Propagates {@code ignoreGlobList} to {@code author}.","lastModifiedDate":"2019-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void propagateIgnoreGlobList(Author author, List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2019-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        author.importIgnoreGlobList(ignoreGlobList);","lastModifiedDate":"2019-12-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Adds author to the {@code AuthorList}.","lastModifiedDate":"2019-04-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {","lastModifiedDate":"2019-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        authorList.add(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        setAuthorDetails(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Adds {@code author} to the {@code AuthorList}, and propagates {@code ignoreGlobList} to the {@code author}.","lastModifiedDate":"2019-04-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author, List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2019-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        addAuthor(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        propagateIgnoreGlobList(author, ignoreGlobList);","lastModifiedDate":"2019-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-12-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Removes the authors provided in {@code ignoredAuthorsList} from the author list.","lastModifiedDate":"2019-12-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-12-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors(List\u003cString\u003e ignoredAuthorsList) {","lastModifiedDate":"2019-12-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (String author : ignoredAuthorsList) {","lastModifiedDate":"2019-12-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            if (authorDetailsToAuthorMap.containsKey(author)) {","lastModifiedDate":"2020-12-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                removeAuthorInformation(author);","lastModifiedDate":"2020-04-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-12-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-04-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Removes all information of the {@code author} from the configs","lastModifiedDate":"2020-04-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Precondition: {@code author} must be present in {@code authorDetailsToAuthorMap}","lastModifiedDate":"2020-12-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param author Can be an author\u0027s git ID, email, or alias","lastModifiedDate":"2020-04-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-04-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void removeAuthorInformation(String author) {","lastModifiedDate":"2020-04-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Author authorToRemove \u003d authorDetailsToAuthorMap.get(author);","lastModifiedDate":"2020-12-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        authorList.remove(authorToRemove);","lastModifiedDate":"2020-04-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.remove(authorToRemove);","lastModifiedDate":"2020-04-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        authorDetailsToAuthorMap.remove(authorToRemove.getGitId());","lastModifiedDate":"2020-12-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        List\u003cString\u003e aliases \u003d authorToRemove.getAuthorAliases();","lastModifiedDate":"2020-04-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        aliases.forEach(alias -\u003e authorDetailsToAuthorMap.remove(alias));","lastModifiedDate":"2020-12-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d authorToRemove.getEmails();","lastModifiedDate":"2020-04-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        emails.forEach(email -\u003e authorDetailsToAuthorMap.remove(email));","lastModifiedDate":"2020-12-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Adds new authors from {@code authorList} and sets the default alias, aliases, emails and display name","lastModifiedDate":"2019-02-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * of the new authors. Skips authors that have already been added previously.","lastModifiedDate":"2019-02-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList, List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2019-02-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (Author author : authorList) {","lastModifiedDate":"2019-02-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (containsAuthor(author)) {","lastModifiedDate":"2019-02-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","lastModifiedDate":"2019-02-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                        \"Skipping author as %s already in repository %s %s\", author.getGitId(), location, branch));","lastModifiedDate":"2019-02-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-02-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-02-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            addAuthor(author, ignoreGlobList);","lastModifiedDate":"2019-02-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {","lastModifiedDate":"2019-02-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return authorList.contains(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {","lastModifiedDate":"2019-02-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        this.authorList \u003d authorList;","lastModifiedDate":"2019-02-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Clears author mapping information.","lastModifiedDate":"2020-08-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void clear() {","lastModifiedDate":"2020-08-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        authorDetailsToAuthorMap.clear();","lastModifiedDate":"2020-12-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.clear();","lastModifiedDate":"2019-02-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-08-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Resets author mapping information with the details of current author list.","lastModifiedDate":"2020-08-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-08-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void buildFromAuthorList() {","lastModifiedDate":"2020-08-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        authorList.forEach(this::setAuthorDetails);","lastModifiedDate":"2019-12-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorDetailsToAuthorMap() {","lastModifiedDate":"2020-12-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return authorDetailsToAuthorMap;","lastModifiedDate":"2020-12-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void setAuthorDetailsToAuthorMap(Map\u003cString, Author\u003e authorDetailsToAuthorMap) {","lastModifiedDate":"2020-12-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        this.authorDetailsToAuthorMap \u003d authorDetailsToAuthorMap;","lastModifiedDate":"2020-12-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {","lastModifiedDate":"2019-02-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.put(author, displayName);","lastModifiedDate":"2019-02-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Adds {@code aliases} of {@code author} into the map","lastModifiedDate":"2020-12-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * @param author","lastModifiedDate":"2020-12-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * @param values","lastModifiedDate":"2020-12-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void addAuthorDetailsToAuthorMapEntry(Author author, List\u003cString\u003e values) {","lastModifiedDate":"2020-12-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        values.forEach(value -\u003e {","lastModifiedDate":"2020-12-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            checkDuplicateAliases(authorDetailsToAuthorMap, value, author.getGitId());","lastModifiedDate":"2020-12-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            authorDetailsToAuthorMap.put(value, author);","lastModifiedDate":"2020-12-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2020-12-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {","lastModifiedDate":"2019-02-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2019-02-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@code Author} given a name and an email.","lastModifiedDate":"2019-04-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned.","lastModifiedDate":"2019-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {","lastModifiedDate":"2019-04-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(name)) {","lastModifiedDate":"2020-12-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.get(name);","lastModifiedDate":"2020-12-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(email)) {","lastModifiedDate":"2020-12-14"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.get(email);","lastModifiedDate":"2020-12-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d EMAIL_PLUS_OPERATOR_PATTERN.matcher(email);","lastModifiedDate":"2019-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2019-04-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.getOrDefault(matcher.group(\"suffix\") + matcher.group(\"domain\"),","lastModifiedDate":"2020-12-14"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    Author.UNKNOWN_AUTHOR);","lastModifiedDate":"2019-04-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return Author.UNKNOWN_AUTHOR;","lastModifiedDate":"2019-04-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public boolean isDefaultBranch() {","lastModifiedDate":"2019-08-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return this.branch.equals(DEFAULT_BRANCH);","lastModifiedDate":"2019-08-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-24"},{"lineNumber":278,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"aidoxe-123"},"content":"    public static void setHasAuthorConfigFile(boolean hasAuthorConfigFile) {","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"aidoxe-123"},"content":"        AuthorConfiguration.hasAuthorConfigFile \u003d hasAuthorConfigFile;","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"aidoxe-123"},"content":"    public static boolean hasAuthorConfigFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"aidoxe-123"},"content":"        return hasAuthorConfigFile;","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-05"}],"authorContributionMap":{"FH-30":2,"-":273,"aidoxe-123":11}},{"path":"src/main/java/reposense/model/RepoConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2018-07-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-05-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-05-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-05-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2019-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;","lastModifiedDate":"2019-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","lastModifiedDate":"2019-05-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents configuration information from CSV config file for a single repository.","lastModifiedDate":"2019-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class RepoConfiguration {","lastModifiedDate":"2017-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";","lastModifiedDate":"2018-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);","lastModifiedDate":"2018-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private RepoLocation location;","lastModifiedDate":"2018-12-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String displayName;","lastModifiedDate":"2018-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient String zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient Date sinceDate;","lastModifiedDate":"2019-04-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private transient Date untilDate;","lastModifiedDate":"2019-04-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient String repoFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private transient FileTypeManager fileTypeManager;","lastModifiedDate":"2019-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-07-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoredAuthorsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-12-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private transient AuthorConfiguration authorConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private transient boolean isStandaloneConfigIgnored;","lastModifiedDate":"2018-08-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private transient List\u003cCommitHash\u003e ignoreCommitList;","lastModifiedDate":"2018-12-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private transient boolean isLastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private transient boolean isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private transient boolean isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredAuthorsListOverriding \u003d false;","lastModifiedDate":"2019-12-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location) {","lastModifiedDate":"2018-12-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);","lastModifiedDate":"2018-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch) {","lastModifiedDate":"2018-12-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(location, branch, Collections.emptyList(), Collections.emptyList(), false, Collections.emptyList(),","lastModifiedDate":"2019-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                false, false, false, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, List\u003cFileType\u003e formats, List\u003cString\u003e ignoreGlobList,","lastModifiedDate":"2019-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding,","lastModifiedDate":"2019-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            boolean isIgnoreGlobListOverriding, boolean isIgnoreCommitListOverriding,","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d new AuthorConfiguration(location, branch);","lastModifiedDate":"2019-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2018-07-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;","lastModifiedDate":"2019-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","lastModifiedDate":"2018-08-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","lastModifiedDate":"2018-08-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.fileTypeManager \u003d new FileTypeManager(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isFormatsOverriding \u003d isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String organization \u003d location.getOrganization();","lastModifiedDate":"2018-12-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String repoName \u003d location.getRepoName();","lastModifiedDate":"2018-12-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        displayName \u003d repoName + \"[\" + branch + \"]\";","lastModifiedDate":"2019-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        outputFolderName \u003d repoName + \"_\" + branch;","lastModifiedDate":"2019-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        repoFolderName \u003d repoName;","lastModifiedDate":"2019-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (organization !\u003d null) {","lastModifiedDate":"2018-12-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            repoFolderName \u003d organization + \"_\" + repoFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            displayName \u003d organization + \"/\" + displayName;","lastModifiedDate":"2019-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            outputFolderName \u003d organization + \"_\" + outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void setDatesToRepoConfigs(List\u003cRepoConfiguration\u003e configs, Date sinceDate, Date untilDate) {","lastModifiedDate":"2019-06-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2018-06-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            config.setSinceDate(sinceDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            config.setUntilDate(untilDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void setZoneIdToRepoConfigs(List\u003cRepoConfiguration\u003e configs, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2020-11-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            config.setZoneId(zoneId);","lastModifiedDate":"2020-11-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void setIsLastModifiedDateIncludedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","lastModifiedDate":"2020-11-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                                  boolean isLastModifiedDateIncluded) {","lastModifiedDate":"2020-11-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2020-11-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            config.setIsLastModifiedDateIncluded(isLastModifiedDateIncluded);","lastModifiedDate":"2020-11-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void setIsShallowCloningPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                                                 boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsShallowCloningPerformed(true));","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Merges a {@code RepoConfiguration} from {@code repoConfigs} with an {@code AuthorConfiguration} from","lastModifiedDate":"2019-02-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code authorConfigs} if their {@code RepoLocation} and branch matches","lastModifiedDate":"2019-02-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : authorConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().isEmpty()) {","lastModifiedDate":"2019-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                for (RepoConfiguration repoConfig : repoConfigs) {","lastModifiedDate":"2019-12-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    repoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-12-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-01-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-01-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e locationMatchingRepoConfigs \u003d","lastModifiedDate":"2019-12-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    getMatchingRepoConfigsByLocation(repoConfigs, authorConfig.getLocation());","lastModifiedDate":"2019-12-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (locationMatchingRepoConfigs.isEmpty()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","lastModifiedDate":"2018-08-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\",","lastModifiedDate":"2019-12-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                        authorConfig.getLocation()));","lastModifiedDate":"2019-12-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2018-08-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            if (authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                locationMatchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","lastModifiedDate":"2019-12-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    matchingRepoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2019-12-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-12-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            RepoConfiguration branchMatchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);","lastModifiedDate":"2019-12-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (branchMatchingRepoConfig \u003d\u003d null) {","lastModifiedDate":"2019-12-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (!authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(","lastModifiedDate":"2019-12-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                            \"Repository %s (branch %s) is not found in repo-config.csv.\",","lastModifiedDate":"2019-12-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                            authorConfig.getLocation(), authorConfig.getBranch()));","lastModifiedDate":"2019-12-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-08-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-12-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            branchMatchingRepoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the list of groups in {@code groupConfigs} to the respective {@code repoConfigs}.","lastModifiedDate":"2019-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void setGroupConfigsToRepos(List\u003cRepoConfiguration\u003e repoConfigs,","lastModifiedDate":"2019-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            List\u003cGroupConfiguration\u003e groupConfigs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (GroupConfiguration groupConfig : groupConfigs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e matchingRepoConfigs;","lastModifiedDate":"2019-12-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (groupConfig.getLocation().isEmpty()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d repoConfigs;","lastModifiedDate":"2019-12-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2019-12-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d getMatchingRepoConfigsByLocation(repoConfigs,","lastModifiedDate":"2019-12-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        groupConfig.getLocation());","lastModifiedDate":"2019-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-12-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (matchingRepoConfigs.isEmpty()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","lastModifiedDate":"2019-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\", groupConfig.getLocation()));","lastModifiedDate":"2019-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            matchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","lastModifiedDate":"2019-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                matchingRepoConfig.addGroups(groupConfig.getGroupsList());","lastModifiedDate":"2019-12-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2019-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Iterates through {@code repoConfigs} to find a {@code RepoConfiguration} with {@code RepoLocation} and branch","lastModifiedDate":"2019-02-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * that matches {@code authorConfig}. Returns {@code null} if no match is found.","lastModifiedDate":"2019-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private static RepoConfiguration getMatchingRepoConfig(","lastModifiedDate":"2019-02-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e repoConfigs, AuthorConfiguration authorConfig) {","lastModifiedDate":"2019-02-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2019-12-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        for (RepoConfiguration repoConfig : repoConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (repoConfig.getLocation().equals(authorConfig.getLocation())","lastModifiedDate":"2019-02-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {","lastModifiedDate":"2019-02-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                return repoConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-02-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2019-02-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns a list of {@link RepoConfiguration} where the {@link RepoLocation} matches {@code targetRepoLocation}.","lastModifiedDate":"2019-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private static List\u003cRepoConfiguration\u003e getMatchingRepoConfigsByLocation(","lastModifiedDate":"2019-12-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, RepoLocation targetRepoLocation) {","lastModifiedDate":"2019-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return configs.stream().filter(config -\u003e config.getLocation().equals(targetRepoLocation))","lastModifiedDate":"2019-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2019-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Sets {@code formats} to {@code RepoConfiguration} in {@code configs} if its format list is empty.","lastModifiedDate":"2018-08-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFileType\u003e formats) {","lastModifiedDate":"2019-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (!config.fileTypeManager.hasSpecifiedFormats()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                config.fileTypeManager.setFormats(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-01-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Sets each {@code RepoConfiguration} in {@code configs} to ignore its standalone config, if","lastModifiedDate":"2019-12-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * {@code ignoreAllStandaloneConfigs} is true.","lastModifiedDate":"2019-12-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-01-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public static void setStandaloneConfigIgnoredToRepoConfigs(","lastModifiedDate":"2019-01-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, boolean ignoreAllStandaloneConfigs) {","lastModifiedDate":"2019-12-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (ignoreAllStandaloneConfigs) {","lastModifiedDate":"2019-12-20"},{"lineNumber":224,"author":{"gitId":"litone01"},"content":"            configs.forEach(config -\u003e config.setStandaloneConfigIgnored(true));","lastModifiedDate":"2021-07-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Clears existing information related to this repository and its authors, and replaces it with information from the","lastModifiedDate":"2020-08-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * {@code standaloneConfig}.","lastModifiedDate":"2020-08-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig) {","lastModifiedDate":"2018-07-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations.","lastModifiedDate":"2019-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e replacementFileTypes \u003d FileType.convertFormatStringsToFileTypes(standaloneConfig.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());","lastModifiedDate":"2019-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (!isIgnoreGlobListOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();","lastModifiedDate":"2019-02-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (!isFormatsOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            fileTypeManager.setFormats(replacementFileTypes);","lastModifiedDate":"2019-08-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (!isIgnoreCommitListOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());","lastModifiedDate":"2018-12-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!isIgnoredAuthorsListOverriding) {","lastModifiedDate":"2019-12-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            ignoredAuthorsList \u003d standaloneConfig.getIgnoreAuthorList();","lastModifiedDate":"2019-12-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        authorConfig.update(standaloneConfig, ignoreGlobList);","lastModifiedDate":"2019-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@code Author} given a name and an email.","lastModifiedDate":"2019-04-03"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned.","lastModifiedDate":"2019-04-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {","lastModifiedDate":"2019-04-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthor(name, email);","lastModifiedDate":"2019-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Updates branch with {@code currentBranch} if default branch is specified.","lastModifiedDate":"2019-03-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void updateBranch(String currentBranch) {","lastModifiedDate":"2019-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","lastModifiedDate":"2019-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","lastModifiedDate":"2019-03-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Gets the current branch and updates branch with current branch if default branch is specified.","lastModifiedDate":"2019-03-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void updateBranch() throws GitBranchException {","lastModifiedDate":"2019-05-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","lastModifiedDate":"2019-03-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());","lastModifiedDate":"2019-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","lastModifiedDate":"2019-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-09-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Gets the path to the root folder of the repository.","lastModifiedDate":"2019-09-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-09-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public String getRepoRoot() {","lastModifiedDate":"2018-07-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;","lastModifiedDate":"2019-03-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (!getRepoName().isEmpty()) {","lastModifiedDate":"2018-12-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            path +\u003d getRepoName() + File.separator;","lastModifiedDate":"2018-12-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return path;","lastModifiedDate":"2018-07-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-09-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Gets the name of the folder containing the cloned repository; the parent directory of the repo\u0027s root folder.","lastModifiedDate":"2019-09-16"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-09-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public String getRepoFolderName() {","lastModifiedDate":"2019-03-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return repoFolderName;","lastModifiedDate":"2019-03-16"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-06-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-06-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-06-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-06-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoConfiguration)) {","lastModifiedDate":"2018-06-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-06-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;","lastModifiedDate":"2019-02-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return location.equals(otherRepoConfig.location)","lastModifiedDate":"2019-02-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherRepoConfig.branch)","lastModifiedDate":"2019-02-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)","lastModifiedDate":"2019-02-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)","lastModifiedDate":"2019-02-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoredAuthorsList.equals(otherRepoConfig.ignoredAuthorsList)","lastModifiedDate":"2019-12-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored","lastModifiedDate":"2019-02-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypeManager.equals(otherRepoConfig.fileTypeManager)","lastModifiedDate":"2019-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \u0026\u0026 isLastModifiedDateIncluded \u003d\u003d otherRepoConfig.isLastModifiedDateIncluded","lastModifiedDate":"2020-11-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding","lastModifiedDate":"2019-03-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u0026\u0026 isShallowCloningPerformed \u003d\u003d otherRepoConfig.isShallowCloningPerformed","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding","lastModifiedDate":"2019-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding","lastModifiedDate":"2019-12-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredAuthorsListOverriding \u003d\u003d otherRepoConfig.isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {","lastModifiedDate":"2018-01-03"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDisplayNameMap();","lastModifiedDate":"2019-02-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-03"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {","lastModifiedDate":"2018-01-03"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);","lastModifiedDate":"2019-02-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public String getBranch() {","lastModifiedDate":"2017-07-10"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {","lastModifiedDate":"2017-07-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        updateDisplayName(branch);","lastModifiedDate":"2018-10-21"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        updateOutputFolderName(branch);","lastModifiedDate":"2019-07-20"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        authorConfig.setBranch(branch);","lastModifiedDate":"2019-02-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-17"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code displayName} to the","lastModifiedDate":"2020-12-17"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * current {@code branch}.","lastModifiedDate":"2020-12-17"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-17"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public void updateDisplayName(String branch) {","lastModifiedDate":"2018-10-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027[\u0027) + 1) + branch + \"]\";","lastModifiedDate":"2019-07-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-20"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code outputFolderName} to the","lastModifiedDate":"2020-12-17"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * current {@code branch}.","lastModifiedDate":"2020-12-17"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-17"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public void updateOutputFolderName(String branch) {","lastModifiedDate":"2019-07-20"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        this.outputFolderName \u003d outputFolderName.substring(0, outputFolderName.lastIndexOf(\u0027_\u0027) + 1) + branch;","lastModifiedDate":"2019-07-20"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-21"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","lastModifiedDate":"2018-07-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return ignoreGlobList;","lastModifiedDate":"2018-07-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-20"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2018-07-24"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","lastModifiedDate":"2018-07-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-20"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-11"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e getIgnoreCommitList() {","lastModifiedDate":"2018-12-30"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        return ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {","lastModifiedDate":"2018-12-30"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoredAuthorsList() {","lastModifiedDate":"2019-12-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return this.ignoredAuthorsList;","lastModifiedDate":"2019-12-27"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    public void setIgnoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {","lastModifiedDate":"2019-12-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;","lastModifiedDate":"2019-12-27"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    public boolean isIgnoredAuthorsListOverriding() {","lastModifiedDate":"2019-12-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return this.isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    public void setIsLastModifiedDateIncluded(boolean lastModifiedDateIncluded) {","lastModifiedDate":"2020-11-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        this.isLastModifiedDateIncluded \u003d lastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    public void setIsShallowCloningPerformed(boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public boolean isLastModifiedDateIncluded() {","lastModifiedDate":"2020-11-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return this.isLastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        return this.isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void setIsIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {","lastModifiedDate":"2019-12-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors() {","lastModifiedDate":"2019-12-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        authorConfig.removeIgnoredAuthors(ignoredAuthorsList);","lastModifiedDate":"2019-12-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {","lastModifiedDate":"2017-09-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorList();","lastModifiedDate":"2019-02-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {","lastModifiedDate":"2018-08-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        authorConfig.addAuthor(author, this.getIgnoreGlobList());","lastModifiedDate":"2019-02-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList) {","lastModifiedDate":"2019-01-19"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());","lastModifiedDate":"2019-02-05"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {","lastModifiedDate":"2019-02-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d authorConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        for (Author author : authorConfig.getAuthorList()) {","lastModifiedDate":"2019-02-05"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);","lastModifiedDate":"2019-02-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-01-19"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {","lastModifiedDate":"2018-08-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        return authorConfig.containsAuthor(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-01-19"},{"lineNumber":438,"author":{"gitId":"-"},"content":"     * Clears authors information and sets the {@code authorList} to {@code RepoConfiguration}.","lastModifiedDate":"2019-01-19"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-01-19"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {","lastModifiedDate":"2017-09-11"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        authorConfig.clear();","lastModifiedDate":"2020-08-10"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorList(authorList);","lastModifiedDate":"2019-02-05"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        authorConfig.buildFromAuthorList();","lastModifiedDate":"2020-08-10"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        authorList.forEach(author -\u003e AuthorConfiguration.propagateIgnoreGlobList(author, this.getIgnoreGlobList()));","lastModifiedDate":"2019-12-27"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-11"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-17"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorDetailsToAuthorMap() {","lastModifiedDate":"2020-12-14"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDetailsToAuthorMap();","lastModifiedDate":"2020-12-14"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-17"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-17"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public void setAuthorDetailsToAuthorMap(Map\u003cString, Author\u003e authorDetailsToAuthorMap) {","lastModifiedDate":"2020-12-14"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDetailsToAuthorMap(authorDetailsToAuthorMap);","lastModifiedDate":"2020-12-14"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-17"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {","lastModifiedDate":"2019-08-18"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        fileTypeManager.setFormats(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    private void setGroups(List\u003cFileType\u003e groups) {","lastModifiedDate":"2019-08-18"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        fileTypeManager.setGroups(groups);","lastModifiedDate":"2019-08-18"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public void addGroups(List\u003cFileType\u003e groups) {","lastModifiedDate":"2019-12-25"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        fileTypeManager.addGroups(groups);","lastModifiedDate":"2019-12-25"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-25"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-25"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     * Returns all format or group types (depending on whether the user has specified a custom grouping).","lastModifiedDate":"2019-08-18"},{"lineNumber":469,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {","lastModifiedDate":"2019-08-18"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        return fileTypeManager.getAllFileTypes();","lastModifiedDate":"2019-08-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {","lastModifiedDate":"2019-08-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return fileTypeManager.getFileType(fileName);","lastModifiedDate":"2019-08-18"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public FileTypeManager getFileTypeManager() {","lastModifiedDate":"2019-08-18"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        return fileTypeManager;","lastModifiedDate":"2019-08-18"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    public Date getSinceDate() {","lastModifiedDate":"2018-06-18"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        return sinceDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    public void setSinceDate(Date sinceDate) {","lastModifiedDate":"2018-06-18"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    public Date getUntilDate() {","lastModifiedDate":"2018-06-18"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        return untilDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public void setUntilDate(Date untilDate) {","lastModifiedDate":"2018-06-18"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-25"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public String getZoneId() {","lastModifiedDate":"2020-11-16"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        return zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void setZoneId(String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {","lastModifiedDate":"2018-06-18"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayName(author, displayName);","lastModifiedDate":"2019-02-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void addAuthorDetailsToAuthorMapEntry(Author author, List\u003cString\u003e values) {","lastModifiedDate":"2020-12-14"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorDetailsToAuthorMapEntry(author, values);","lastModifiedDate":"2020-12-14"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    public String getDisplayName() {","lastModifiedDate":"2018-07-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        return displayName;","lastModifiedDate":"2018-07-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public String getRepoName() {","lastModifiedDate":"2018-07-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return location.getRepoName();","lastModifiedDate":"2018-12-30"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    public String getOutputFolderName() {","lastModifiedDate":"2019-07-20"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-20"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-20"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {","lastModifiedDate":"2019-01-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","lastModifiedDate":"2019-01-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {","lastModifiedDate":"2018-12-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2018-12-30"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    public String getOrganization() {","lastModifiedDate":"2018-12-30"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return location.getOrganization();","lastModifiedDate":"2018-12-30"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-29"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {","lastModifiedDate":"2018-12-30"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;","lastModifiedDate":"2018-12-30"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public boolean isFormatsOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        return isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public boolean isIgnoreGlobListOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        return isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    public boolean isIgnoreCommitListOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        return isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":553,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":554,"author":{"gitId":"aidoxe-123"},"content":"    public AuthorConfiguration getAuthorConfig() {","lastModifiedDate":"2021-08-22"},{"lineNumber":555,"author":{"gitId":"aidoxe-123"},"content":"        return authorConfig;","lastModifiedDate":"2021-08-22"},{"lineNumber":556,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":557,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-10"}],"authorContributionMap":{"-":552,"aidoxe-123":4,"litone01":1}},{"path":"src/main/java/reposense/model/RepoLocation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-12-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-12-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-12-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-12-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2018-12-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2018-12-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidLocationException;","lastModifiedDate":"2018-12-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;","lastModifiedDate":"2021-05-07"},{"lineNumber":12,"author":{"gitId":"chan-j-d"},"content":"import reposense.util.StringsUtil;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"chan-j-d"},"content":"import reposense.util.SystemUtil;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-12-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a repository location.","lastModifiedDate":"2018-12-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-12-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class RepoLocation {","lastModifiedDate":"2018-12-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String GIT_LINK_SUFFIX \u003d \".git\";","lastModifiedDate":"2018-12-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_LOCATION \u003d \"%s is an invalid location.\";","lastModifiedDate":"2021-05-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern GIT_REPOSITORY_LOCATION_PATTERN \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":22,"author":{"gitId":"aidoxe-123"},"content":"            Pattern.compile(\"^https?://github.com/(?\u003corg\u003e.+?)/(?\u003crepoName\u003e.+?)\\\\.git$\");","lastModifiedDate":"2021-07-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String location;","lastModifiedDate":"2018-12-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String repoName;","lastModifiedDate":"2018-12-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String organization;","lastModifiedDate":"2018-12-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if {@code location} cannot be represented by a {@code URL} or {@code Path}.","lastModifiedDate":"2018-12-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public RepoLocation(String location) throws InvalidLocationException {","lastModifiedDate":"2018-12-30"},{"lineNumber":32,"author":{"gitId":"chan-j-d"},"content":"        if (SystemUtil.isWindows()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"chan-j-d"},"content":"            location \u003d StringsUtil.removeTrailingBackslash(location);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        verifyLocation(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2018-12-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d GIT_REPOSITORY_LOCATION_PATTERN.matcher(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2018-12-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            organization \u003d matcher.group(\"org\");","lastModifiedDate":"2018-12-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            repoName \u003d matcher.group(\"repoName\");","lastModifiedDate":"2018-12-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-12-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            repoName \u003d Paths.get(location).getFileName().toString().replace(GIT_LINK_SUFFIX, \"\");","lastModifiedDate":"2018-12-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2019-01-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return location.isEmpty();","lastModifiedDate":"2019-01-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getRepoName() {","lastModifiedDate":"2018-12-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return repoName;","lastModifiedDate":"2018-12-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String getOrganization() {","lastModifiedDate":"2018-12-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return organization;","lastModifiedDate":"2018-12-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Verifies {@code location} can be presented as a {@code URL} or {@code Path}.","lastModifiedDate":"2018-12-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if otherwise.","lastModifiedDate":"2018-12-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void verifyLocation(String location) throws InvalidLocationException {","lastModifiedDate":"2018-12-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        boolean isValidPathLocation \u003d false;","lastModifiedDate":"2018-12-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        boolean isValidGitUrl \u003d false;","lastModifiedDate":"2018-12-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Path pathLocation \u003d Paths.get(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            isValidPathLocation \u003d Files.exists(pathLocation);","lastModifiedDate":"2018-12-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-12-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            // Ignore exception","lastModifiedDate":"2018-12-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d GIT_REPOSITORY_LOCATION_PATTERN.matcher(location);","lastModifiedDate":"2020-12-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        isValidGitUrl \u003d matcher.matches();","lastModifiedDate":"2020-12-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!isValidPathLocation \u0026\u0026 !isValidGitUrl) {","lastModifiedDate":"2018-12-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            ErrorSummary.getInstance().addErrorMessage(location, String.format(MESSAGE_INVALID_LOCATION, location));","lastModifiedDate":"2021-05-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new InvalidLocationException(String.format(MESSAGE_INVALID_LOCATION, location));","lastModifiedDate":"2021-05-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":83,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2018-12-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2018-12-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2018-12-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2018-12-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles null","lastModifiedDate":"2018-12-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoLocation)) {","lastModifiedDate":"2018-12-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        RepoLocation otherLocation \u003d (RepoLocation) other;","lastModifiedDate":"2018-12-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this.location.equals(otherLocation.location);","lastModifiedDate":"2018-12-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return location.hashCode();","lastModifiedDate":"2018-12-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-30"}],"authorContributionMap":{"chan-j-d":6,"-":102,"aidoxe-123":1}},{"path":"src/main/java/reposense/model/ReportConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2020-11-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-11-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents configuration information from JSON config file for generated report.","lastModifiedDate":"2020-11-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-11-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ReportConfiguration {","lastModifiedDate":"2020-11-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TITLE \u003d \"RepoSense Report\";","lastModifiedDate":"2020-11-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String title;","lastModifiedDate":"2020-11-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public String getTitle() {","lastModifiedDate":"2020-11-15"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (title \u003d\u003d null) ? DEFAULT_TITLE : title;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-11-15"}],"authorContributionMap":{"yhtMinceraft1010X":1,"-":12}},{"path":"src/main/java/reposense/model/StandaloneAuthor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-07-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-07-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents an author in {@code StandaloneConfig}.","lastModifiedDate":"2018-07-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-07-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class StandaloneAuthor {","lastModifiedDate":"2018-07-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private String githubId;","lastModifiedDate":"2018-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e emails;","lastModifiedDate":"2019-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String displayName;","lastModifiedDate":"2018-07-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e authorNames;","lastModifiedDate":"2018-08-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e ignoreGlobList;","lastModifiedDate":"2018-08-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public String getGithubId() {","lastModifiedDate":"2018-07-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return githubId;","lastModifiedDate":"2018-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getEmails() {","lastModifiedDate":"2019-01-22"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (emails \u003d\u003d null) ? Collections.emptyList() : emails;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getDisplayName() {","lastModifiedDate":"2018-07-26"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (displayName \u003d\u003d null) ? \"\" : displayName;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAuthorNames() {","lastModifiedDate":"2018-08-02"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (authorNames \u003d\u003d null) ? Collections.emptyList() : authorNames;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","lastModifiedDate":"2018-08-02"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (ignoreGlobList \u003d\u003d null) ? Collections.emptyList() : ignoreGlobList;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2018-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof StandaloneAuthor)) {","lastModifiedDate":"2018-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StandaloneAuthor otherStandaloneAuthor \u003d (StandaloneAuthor) other;","lastModifiedDate":"2018-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return githubId.equals(otherStandaloneAuthor.githubId)","lastModifiedDate":"2018-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmails().equals(otherStandaloneAuthor.getEmails())","lastModifiedDate":"2019-01-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 getDisplayName().equals(otherStandaloneAuthor.getDisplayName())","lastModifiedDate":"2018-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAuthorNames().equals(otherStandaloneAuthor.getAuthorNames())","lastModifiedDate":"2018-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreGlobList().equals(otherStandaloneAuthor.getIgnoreGlobList());","lastModifiedDate":"2018-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-07-26"}],"authorContributionMap":{"yhtMinceraft1010X":4,"-":49}},{"path":"src/main/java/reposense/model/StandaloneConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-07-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-07-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-07-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the structure of a config.json in _reposense folder.","lastModifiedDate":"2018-07-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-07-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class StandaloneConfig {","lastModifiedDate":"2018-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private List\u003cStandaloneAuthor\u003e authors;","lastModifiedDate":"2018-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e ignoreGlobList;","lastModifiedDate":"2018-08-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e formats;","lastModifiedDate":"2018-08-29"},{"lineNumber":14,"author":{"gitId":"FH-30"},"content":"    private List\u003cString\u003e ignoreCommitsList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"FH-30"},"content":"    private List\u003cString\u003e ignoreAuthorsList;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public List\u003cStandaloneAuthor\u003e getAuthors() {","lastModifiedDate":"2018-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if (authors \u003d\u003d null) {","lastModifiedDate":"2018-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2018-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        authors.removeIf(Objects::isNull);","lastModifiedDate":"2018-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return authors;","lastModifiedDate":"2018-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","lastModifiedDate":"2018-08-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (ignoreGlobList \u003d\u003d null) {","lastModifiedDate":"2018-08-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2018-08-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ignoreGlobList.removeIf(Objects::isNull);","lastModifiedDate":"2018-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return ignoreGlobList;","lastModifiedDate":"2018-08-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getFormats() {","lastModifiedDate":"2018-08-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (formats \u003d\u003d null) {","lastModifiedDate":"2018-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2019-07-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        formats.removeIf(Objects::isNull);","lastModifiedDate":"2018-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return formats;","lastModifiedDate":"2018-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreCommitList() {","lastModifiedDate":"2018-08-19"},{"lineNumber":45,"author":{"gitId":"FH-30"},"content":"        if (ignoreCommitsList \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2018-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":49,"author":{"gitId":"FH-30"},"content":"        ignoreCommitsList.removeIf(Objects::isNull);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"FH-30"},"content":"        return ignoreCommitsList;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreAuthorList() {","lastModifiedDate":"2019-12-27"},{"lineNumber":54,"author":{"gitId":"FH-30"},"content":"        if (ignoreAuthorsList \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2019-12-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-27"},{"lineNumber":57,"author":{"gitId":"FH-30"},"content":"        ignoreAuthorsList.removeIf(Objects::isNull);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"FH-30"},"content":"        return ignoreAuthorsList;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2018-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof StandaloneConfig)) {","lastModifiedDate":"2018-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StandaloneConfig otherStandaloneConfig \u003d (StandaloneConfig) other;","lastModifiedDate":"2018-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return authors.equals(otherStandaloneConfig.authors)","lastModifiedDate":"2018-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreGlobList().equals(otherStandaloneConfig.getIgnoreGlobList())","lastModifiedDate":"2018-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 getFormats().equals(otherStandaloneConfig.getFormats())","lastModifiedDate":"2018-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreCommitList().equals(otherStandaloneConfig.getIgnoreCommitList())","lastModifiedDate":"2019-12-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreAuthorList().equals(otherStandaloneConfig.getIgnoreAuthorList());","lastModifiedDate":"2019-12-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-07-26"}],"authorContributionMap":{"FH-30":8,"-":70}},{"path":"src/main/java/reposense/parser/CsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","lastModifiedDate":"2018-06-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2019-12-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2020-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileReader;","lastModifiedDate":"2018-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-06-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-06-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-07-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-06-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2019-12-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2019-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2018-07-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-06-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-06-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVFormat;","lastModifiedDate":"2019-07-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;","lastModifiedDate":"2019-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-06-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains CSV parsing related functionalities.","lastModifiedDate":"2019-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public abstract class CsvParser\u003cT\u003e {","lastModifiedDate":"2018-08-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected static final String COLUMN_VALUES_SEPARATOR \u003d \";\";","lastModifiedDate":"2018-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    protected static final Logger logger \u003d LogsManager.getLogger(CsvParser.class);","lastModifiedDate":"2018-08-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String OVERRIDE_KEYWORD \u003d \"override:\";","lastModifiedDate":"2019-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_LINE \u003d \"[EMPTY LINE]\";","lastModifiedDate":"2019-12-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNABLE_TO_READ_CSV_FILE \u003d \"Unable to read the supplied CSV file.\";","lastModifiedDate":"2018-06-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_LINE_FORMAT \u003d \"Line %d in CSV file, %s, is malformed.\\n\"","lastModifiedDate":"2019-07-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Content: %s\";","lastModifiedDate":"2019-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_PARSE_EXCEPTION_FORMAT \u003d \"Error parsing line %d in CSV file, %s.\\n\"","lastModifiedDate":"2019-07-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Content: %s\\n\"","lastModifiedDate":"2019-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Error: %s\";","lastModifiedDate":"2019-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_CSV_FORMAT \u003d \"The CSV file, %s, is empty.\";","lastModifiedDate":"2019-12-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MANDATORY_HEADER_MISSING \u003d \"Required column header, %s, not found in \"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"CSV file, %s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_DUPLICATE_COLUMN_HEADER \u003d \"Duplicate columns are present in CSV file, %s.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COLUMNS_RECOGNIZED \u003d \"Parsed header of CSV file, %s, and recognized columns: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"%s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ZERO_VALID_CONFIGS \u003d \"No valid configurations in the %s.\";","lastModifiedDate":"2020-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Path csvFilePath;","lastModifiedDate":"2018-08-02"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"    private Map\u003cString, Integer\u003e headerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private int numOfLinesBeforeFirstRecord \u003d 0;","lastModifiedDate":"2019-12-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code csvFilePath} is an invalid path.","lastModifiedDate":"2018-08-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CsvParser(Path csvFilePath) throws IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (csvFilePath \u003d\u003d null || !Files.exists(csvFilePath)) {","lastModifiedDate":"2018-08-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new FileNotFoundException(\"Csv file does not exist at the given path.\\n\"","lastModifiedDate":"2020-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    + \"Use \u0027-help\u0027 to list all the available subcommands and some concept guides.\");","lastModifiedDate":"2018-09-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.csvFilePath \u003d csvFilePath;","lastModifiedDate":"2018-08-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the csv file associated with this instance of the {@code CsvParser} and returns a {@code List}","lastModifiedDate":"2020-02-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * containing the records in this file.","lastModifiedDate":"2020-02-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-02-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors accessing the given csv file.","lastModifiedDate":"2020-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the csv is malformed.","lastModifiedDate":"2020-02-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public List\u003cT\u003e parse() throws IOException, InvalidCsvException {","lastModifiedDate":"2020-02-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cT\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Iterable\u003cCSVRecord\u003e records;","lastModifiedDate":"2019-07-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try (BufferedReader csvReader \u003d new BufferedReader(new FileReader(csvFilePath.toFile()))) {","lastModifiedDate":"2019-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            String[] header \u003d getHeader(csvReader);","lastModifiedDate":"2019-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                records \u003d CSVFormat.DEFAULT.withIgnoreEmptyLines(false).withHeader(header).withTrim()","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        .withIgnoreHeaderCase().parse(csvReader);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException(","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_DUPLICATE_COLUMN_HEADER, csvFilePath.getFileName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            for (CSVRecord record : records) {","lastModifiedDate":"2019-07-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                if (isLineMalformed(record)) {","lastModifiedDate":"2019-07-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    continue;","lastModifiedDate":"2018-08-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-08-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2019-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    processLine(results, record);","lastModifiedDate":"2019-07-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2019-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_LINE_PARSE_EXCEPTION_FORMAT, getLineNumber(record),","lastModifiedDate":"2019-07-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                            csvFilePath.getFileName(), getRowContentAsRawString(record), pe.getMessage()));","lastModifiedDate":"2019-07-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                } catch (IllegalArgumentException iae) {","lastModifiedDate":"2019-07-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, iae.getMessage(), iae);","lastModifiedDate":"2019-07-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-06-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-06-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IOException(MESSAGE_UNABLE_TO_READ_CSV_FILE, ioe);","lastModifiedDate":"2018-06-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-02-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (results.isEmpty()) {","lastModifiedDate":"2020-02-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new InvalidCsvException(String.format(MESSAGE_ZERO_VALID_CONFIGS, csvFilePath.getFileName()));","lastModifiedDate":"2020-02-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return results;","lastModifiedDate":"2018-08-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-12-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns the header of a CSV file, which is assumed to be the first non-empty / non-whitespace line in the file.","lastModifiedDate":"2019-12-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The line is split into an array of Strings, using the comma symbol as delimiter.","lastModifiedDate":"2019-12-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-12-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws IOException if there is an error accessing the file.","lastModifiedDate":"2019-12-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the file has only empty or blank lines.","lastModifiedDate":"2019-12-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-12-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private String[] getHeader(BufferedReader reader) throws IOException, InvalidCsvException {","lastModifiedDate":"2019-12-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String currentLine \u003d \"\";","lastModifiedDate":"2019-12-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // read from file until we encounter a line that is neither blank nor empty","lastModifiedDate":"2019-12-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        while (currentLine.isEmpty()) {","lastModifiedDate":"2019-12-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            currentLine \u003d Optional.ofNullable(reader.readLine())","lastModifiedDate":"2019-12-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    .map(String::trim)","lastModifiedDate":"2019-12-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    .orElseThrow(() -\u003e new InvalidCsvException(String.format(","lastModifiedDate":"2019-12-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                            MESSAGE_EMPTY_CSV_FORMAT, csvFilePath.getFileName())));","lastModifiedDate":"2019-12-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            numOfLinesBeforeFirstRecord++;","lastModifiedDate":"2019-12-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String[] header \u003d currentLine.split(\",\");","lastModifiedDate":"2020-01-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        validateHeader(header);","lastModifiedDate":"2020-01-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return header;","lastModifiedDate":"2020-01-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if {@code record} does not contain the same number of columns as the header or contains missing","lastModifiedDate":"2019-07-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * values at the mandatory columns in CSV format.","lastModifiedDate":"2019-07-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean isLineMalformed(CSVRecord record) {","lastModifiedDate":"2019-07-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!record.isConsistent()) {","lastModifiedDate":"2019-07-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),","lastModifiedDate":"2019-07-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    csvFilePath.getFileName(), getRowContentAsRawString(record)));","lastModifiedDate":"2019-07-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2019-07-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String header : mandatoryHeaders()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (get(record, header).isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),","lastModifiedDate":"2019-07-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName(), getRowContentAsRawString(record)));","lastModifiedDate":"2019-07-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2018-08-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-06-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2018-08-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header}.","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String header) {","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return headerMap.containsKey(header) ? record.get(headerMap.get(header)).trim() : EMPTY_STRING;","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header} if present, or","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * returns {@code defaultValue} otherwise.","lastModifiedDate":"2019-07-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    protected String getOrDefault(final CSVRecord record, String header, String defaultValue) {","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return get(record, header).isEmpty() ? defaultValue : get(record, header);","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header} as a {@code List},","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * delimited by {@code COLUMN_VALUES_SEPARATOR} if it is in {@code record} and not empty, or","lastModifiedDate":"2019-07-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * returns an empty {@code List} otherwise.","lastModifiedDate":"2019-07-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsList(final CSVRecord record, String header) {","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (get(record, header).isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2019-07-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return Arrays.stream(get(record, header).split(COLUMN_VALUES_SEPARATOR))","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .map(String::trim)","lastModifiedDate":"2019-07-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2019-07-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-10-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Returns the values in {@code record} as a list with the {@link CsvParser#OVERRIDE_KEYWORD} prefix removed.","lastModifiedDate":"2019-07-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns an empty list if {@code record} at the column with the header {@code header} is empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-10-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsListWithoutOverridePrefix(final CSVRecord record, String header) {","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        List\u003cString\u003e data \u003d getAsList(record, header);","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (isElementOverridingStandaloneConfig(record, header)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            data.set(0, data.get(0).replaceFirst(OVERRIDE_KEYWORD, \"\"));","lastModifiedDate":"2019-07-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            data.removeIf(String::isEmpty);","lastModifiedDate":"2019-07-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return data;","lastModifiedDate":"2019-07-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private long getLineNumber(final CSVRecord record) {","lastModifiedDate":"2019-07-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return  record.getRecordNumber() + numOfLinesBeforeFirstRecord;","lastModifiedDate":"2019-12-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns true if the {@code record} at the column with the header {@code header} is prefixed with","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * the override keyword.","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    protected boolean isElementOverridingStandaloneConfig(final CSVRecord record, String header) {","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return get(record, header).startsWith(OVERRIDE_KEYWORD);","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Returns the contents of {@code record} as a raw string.","lastModifiedDate":"2019-07-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private String getRowContentAsRawString(final CSVRecord record) {","lastModifiedDate":"2019-07-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        StringJoiner inputRowString \u003d new StringJoiner(\",\");","lastModifiedDate":"2019-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (String value : record) {","lastModifiedDate":"2019-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            inputRowString.add(value);","lastModifiedDate":"2019-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        String contentAsString \u003d inputRowString.toString();","lastModifiedDate":"2019-12-08"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (contentAsString.trim().isEmpty()) ? MESSAGE_EMPTY_LINE : contentAsString;","lastModifiedDate":"2021-08-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Generates map of column header to position number for input {@code possibleHeader}.","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if {@code possibleHeader} does not contain all the mandatory headers.","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void validateHeader(String[] possibleHeader) throws InvalidCsvException {","lastModifiedDate":"2020-01-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        int headerSize \u003d possibleHeader.length;","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c headerSize; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            String possible \u003d possibleHeader[i].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            for (String parsedHeader : mandatoryAndOptionalHeaders()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                if (possible.equalsIgnoreCase(parsedHeader)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    headerMap.put(parsedHeader, i);","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        for (String mandatory : mandatoryHeaders()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            if (!headerMap.containsKey(mandatory)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException(String.format(","lastModifiedDate":"2020-01-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                        MESSAGE_MANDATORY_HEADER_MISSING, mandatory, csvFilePath.getFileName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-01-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COLUMNS_RECOGNIZED, csvFilePath.getFileName(),","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                String.join(\",  \", headerMap.keySet())));","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification.","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    protected abstract String[] mandatoryHeaders();","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed.","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    protected abstract String[] optionalHeaders();","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * Gets the list of all mandatory and optional headers that can be parsed.","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e mandatoryAndOptionalHeaders() {","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return Stream.concat(Arrays.stream(mandatoryHeaders()), Arrays.stream(optionalHeaders()))","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Processes the csv file line by line.","lastModifiedDate":"2018-08-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * All CsvParsers must use {@link CsvParser#get}, {@link CsvParser#getOrDefault},","lastModifiedDate":"2019-07-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * {@link CsvParser#getAsList} or {@link CsvParser#getAsListWithoutOverridePrefix} to read contents in","lastModifiedDate":"2019-07-17"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * {@code record} and add created objects into {@code results}.","lastModifiedDate":"2019-07-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    protected abstract void processLine(List\u003cT\u003e results, final CSVRecord record) throws ParseException;","lastModifiedDate":"2019-07-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-18"}],"authorContributionMap":{"chan-j-d":1,"yhtMinceraft1010X":2,"-":269}},{"path":"src/main/java/reposense/parser/RepoConfigCsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","lastModifiedDate":"2018-08-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;","lastModifiedDate":"2019-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","lastModifiedDate":"2018-12-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","lastModifiedDate":"2019-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-08-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2018-12-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for the values parsed from {@code repo-config.csv} file.","lastModifiedDate":"2019-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RepoConfigCsvParser extends CsvParser\u003cRepoConfiguration\u003e {","lastModifiedDate":"2018-08-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String REPO_CONFIG_FILENAME \u003d \"repo-config.csv\";","lastModifiedDate":"2018-08-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String IGNORE_STANDALONE_CONFIG_KEYWORD \u003d \"yes\";","lastModifiedDate":"2018-08-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_CLONING_CONFIG_KEYWORD \u003d \"yes\";","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Positions of the elements of a line in repo-config.csv config file","lastModifiedDate":"2018-08-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCATION_HEADER \u003d \"Repository\u0027s Location\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String BRANCH_HEADER \u003d \"Branch\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FILE_FORMATS_HEADER \u003d \"File formats\";","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String IGNORE_GLOB_LIST_HEADER \u003d \"Ignore Glob List\";","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String IGNORE_STANDALONE_CONFIG_HEADER \u003d \"Ignore standalone config\";","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"FH-30"},"content":"    private static final String IGNORE_COMMIT_LIST_CONFIG_HEADER \u003d \"Ignore Commits List\";","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String IGNORE_AUTHOR_LIST_CONFIG_HEADER \u003d \"Ignore Authors List\";","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_CLONING_CONFIG_HEADER \u003d \"Shallow Cloning\";","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public RepoConfigCsvParser(Path csvFilePath) throws IOException {","lastModifiedDate":"2018-08-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(csvFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected String[] mandatoryHeaders() {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new String[] {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                LOCATION_HEADER,","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed.","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected String[] optionalHeaders() {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new String[] {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                BRANCH_HEADER, FILE_FORMATS_HEADER, IGNORE_GLOB_LIST_HEADER, IGNORE_STANDALONE_CONFIG_HEADER,","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                IGNORE_COMMIT_LIST_CONFIG_HEADER, IGNORE_AUTHOR_LIST_CONFIG_HEADER, SHALLOW_CLONING_CONFIG_HEADER,","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2018-08-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Processes the csv file line by line and add created {@code RepoConfiguration} into {@code results} but","lastModifiedDate":"2018-08-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * ignores duplicated {@code RepoConfiguration} if there exists one that has same {@code location} and","lastModifiedDate":"2018-08-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code branch}.","lastModifiedDate":"2018-08-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    protected void processLine(List\u003cRepoConfiguration\u003e results, CSVRecord record) throws InvalidLocationException {","lastModifiedDate":"2019-07-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d new RepoLocation(get(record, LOCATION_HEADER));","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String branch \u003d getOrDefault(record, BRANCH_HEADER, RepoConfiguration.DEFAULT_BRANCH);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        boolean isFormatsOverriding \u003d isElementOverridingStandaloneConfig(record, FILE_FORMATS_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                getAsListWithoutOverridePrefix(record, FILE_FORMATS_HEADER));","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        boolean isIgnoreGlobListOverriding \u003d isElementOverridingStandaloneConfig(record, IGNORE_GLOB_LIST_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d getAsListWithoutOverridePrefix(record, IGNORE_GLOB_LIST_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        boolean isIgnoreCommitListOverriding \u003d","lastModifiedDate":"2019-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                isElementOverridingStandaloneConfig(record, IGNORE_COMMIT_LIST_CONFIG_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e ignoreCommitList \u003d CommitHash.convertStringsToCommits(","lastModifiedDate":"2018-12-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                getAsListWithoutOverridePrefix(record, IGNORE_COMMIT_LIST_CONFIG_HEADER));","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        boolean isIgnoredAuthorsListOverriding \u003d","lastModifiedDate":"2019-12-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                isElementOverridingStandaloneConfig(record, IGNORE_AUTHOR_LIST_CONFIG_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoredAuthorsList \u003d getAsListWithoutOverridePrefix(record, IGNORE_AUTHOR_LIST_CONFIG_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String ignoreStandaloneConfig \u003d get(record, IGNORE_STANDALONE_CONFIG_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        boolean isStandaloneConfigIgnored \u003d ignoreStandaloneConfig.equalsIgnoreCase(IGNORE_STANDALONE_CONFIG_KEYWORD);","lastModifiedDate":"2018-08-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!isStandaloneConfigIgnored \u0026\u0026 !ignoreStandaloneConfig.isEmpty()) {","lastModifiedDate":"2018-08-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(","lastModifiedDate":"2018-08-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    \"Ignoring unknown value \" + ignoreStandaloneConfig + \" in ignore standalone config column.\");","lastModifiedDate":"2018-08-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String shallowCloningConfig \u003d get(record, SHALLOW_CLONING_CONFIG_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        boolean isShallowCloningPerformed \u003d shallowCloningConfig.equalsIgnoreCase(SHALLOW_CLONING_CONFIG_KEYWORD);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!isShallowCloningPerformed \u0026\u0026 !shallowCloningConfig.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    \"Ignoring unknown value \" + shallowCloningConfig + \" in shallow cloning column.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d new RepoConfiguration(","lastModifiedDate":"2018-08-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                location, branch, formats, ignoreGlobList, isStandaloneConfigIgnored, ignoreCommitList,","lastModifiedDate":"2019-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                isFormatsOverriding, isIgnoreGlobListOverriding, isIgnoreCommitListOverriding,","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                isShallowCloningPerformed);","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        config.setIgnoredAuthorsList(ignoredAuthorsList);","lastModifiedDate":"2019-12-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        config.setIsIgnoredAuthorsListOverriding(isIgnoredAuthorsListOverriding);","lastModifiedDate":"2019-12-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (results.contains(config)) {","lastModifiedDate":"2018-08-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.warning(\"Ignoring duplicated repository \" + location + \" \" + branch);","lastModifiedDate":"2018-08-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-08-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        results.add(config);","lastModifiedDate":"2018-08-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-02"}],"authorContributionMap":{"FH-30":1,"-":114}},{"path":"src/main/java/reposense/report/RepoCloner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;","lastModifiedDate":"2019-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":3,"author":{"gitId":"chan-j-d"},"content":"import static reposense.util.FileUtil.getRepoParentFolder;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2019-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2019-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2019-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2019-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2019-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;","lastModifiedDate":"2019-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.git.GitCatFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;","lastModifiedDate":"2019-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitRevList;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","lastModifiedDate":"2019-05-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","lastModifiedDate":"2019-07-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2019-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2019-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcess;","lastModifiedDate":"2019-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcessException;","lastModifiedDate":"2019-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2019-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2019-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","lastModifiedDate":"2021-06-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Handles asynchronous cloning of repos to allow multiple repos to be cloned and analyzed concurrently.","lastModifiedDate":"2019-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class RepoCloner {","lastModifiedDate":"2019-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING \u003d \"Cloning in parallel from %s...\";","lastModifiedDate":"2019-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_SHALLOW \u003d \"Shallow cloning in parallel from %s...\";","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_SHALLOW \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"Exception met while running shallow clone of repo \\\"%s\\\".\";","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_PARTIAL \u003d \"Partial cloning from %s...\";","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_PARTIAL \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"Exception met while running partial clone of repo \\\"%s\\\".\";","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_SHALLOW_PARTIAL \u003d \"Shallow partial cloning from %s...\";","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_SHALLOW_PARTIAL \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \"Exception met while running shallow partial clone of repo \\\"%s\\\".\";","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_WAITING_FOR_CLONING \u003d \"Waiting for cloning of %s to complete...\";","lastModifiedDate":"2019-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_CLONING \u003d \"Cloning of %s completed!\";","lastModifiedDate":"2019-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_DELETING_DIRECTORY \u003d \"Error deleting report directory.\";","lastModifiedDate":"2019-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING \u003d","lastModifiedDate":"2019-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"Exception met while trying to clone the repo \\\"%s\\\", will skip this repo.\";","lastModifiedDate":"2019-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_GETTING_BRANCH \u003d","lastModifiedDate":"2019-05-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"Exception met while trying to get current branch of %s (%s), will skip this repo.\";","lastModifiedDate":"2019-05-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final int MAX_NO_OF_REPOS \u003d 2;","lastModifiedDate":"2019-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoCloner.class);","lastModifiedDate":"2019-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private RepoConfiguration[] configs \u003d new RepoConfiguration[MAX_NO_OF_REPOS];","lastModifiedDate":"2019-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private int currentIndex \u003d 0;","lastModifiedDate":"2019-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private int previousIndex \u003d 0;","lastModifiedDate":"2019-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private boolean isCurrentRepoCloned \u003d false;","lastModifiedDate":"2019-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private String currentRepoDefaultBranch;","lastModifiedDate":"2019-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private CommandRunnerProcess crp;","lastModifiedDate":"2019-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Spawns a process to clone the bare repository specified by {@code config}.","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","lastModifiedDate":"2019-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void cloneBare(RepoConfiguration config) {","lastModifiedDate":"2019-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        configs[currentIndex] \u003d config;","lastModifiedDate":"2019-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!config.isShallowCloningPerformed()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            isCurrentRepoCloned \u003d spawnCloneProcess(config);","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            boolean didShallowPartialCloneSucceed \u003d spawnShallowPartialCloneProcess(config);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            String shallowPartialBareRoot \u003d FileUtil.getShallowPartialBareRepoPath(config).toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            if (!didShallowPartialCloneSucceed || GitRevList.checkIsEmptyRepo(shallowPartialBareRoot)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                isCurrentRepoCloned \u003d spawnCloneProcess(config);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            List\u003cString\u003e graftedCommits \u003d GitRevList.getRootCommits(shallowPartialBareRoot);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            List\u003cString\u003e graftedCommitParents \u003d GitCatFile.getParentsOfCommits(shallowPartialBareRoot, graftedCommits);","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            boolean didPartialCloneSucceed \u003d spawnPartialCloneProcess(config);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!didPartialCloneSucceed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                isCurrentRepoCloned \u003d spawnCloneProcess(config);","lastModifiedDate":"2019-08-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            String partialBareRoot \u003d FileUtil.getPartialBareRepoPath(config).toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Date sinceDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                List\u003cString\u003e distinctParents \u003d graftedCommitParents.stream().distinct().collect(Collectors.toList());","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                sinceDate \u003d GitShow.getEarliestCommitDate(partialBareRoot, distinctParents);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } catch (CommitNotFoundException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                sinceDate \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010X"},"content":"            isCurrentRepoCloned \u003d (sinceDate !\u003d null)","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    ? spawnShallowCloneProcess(config, sinceDate)","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    : spawnCloneProcess(config);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Waits for current clone process to finish executing and returns the {@code RepoLocation} of the corresponding","lastModifiedDate":"2019-04-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code RepoConfiguration}.","lastModifiedDate":"2019-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public RepoLocation getClonedRepoLocation() {","lastModifiedDate":"2019-08-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (isCurrentRepoCloned) {","lastModifiedDate":"2019-04-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            isCurrentRepoCloned \u003d waitForCloneProcess(configs[currentIndex]);","lastModifiedDate":"2019-08-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!isCurrentRepoCloned) {","lastModifiedDate":"2019-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            deleteDirectory(configs[currentIndex].getRepoRoot());","lastModifiedDate":"2019-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2019-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-05-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            String bareRepoPath \u003d FileUtil.getBareRepoPath(configs[currentIndex]).toString();","lastModifiedDate":"2019-07-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            currentRepoDefaultBranch \u003d GitBranch.getCurrentBranch(bareRepoPath);","lastModifiedDate":"2019-07-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (GitBranchException gbe) {","lastModifiedDate":"2019-05-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            // GitBranch will throw this exception when repository is empty","lastModifiedDate":"2019-05-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_GETTING_BRANCH,","lastModifiedDate":"2019-05-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    configs[currentIndex].getLocation(), configs[currentIndex].getBranch()), gbe);","lastModifiedDate":"2019-05-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2019-05-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-05-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        cleanupPrevRepoFolder();","lastModifiedDate":"2019-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        previousIndex \u003d currentIndex;","lastModifiedDate":"2019-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        currentIndex \u003d (currentIndex + 1) % configs.length;","lastModifiedDate":"2019-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return configs[previousIndex].getLocation();","lastModifiedDate":"2019-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Cleans up data associated with a particular repo.","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void cleanupRepo(RepoConfiguration config) {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"chan-j-d"},"content":"        deleteDirectory(getRepoParentFolder(config).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Cleans up after all repos have been cloned and analyzed.","lastModifiedDate":"2019-04-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void cleanup() {","lastModifiedDate":"2019-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        deleteDirectory(FileUtil.REPOS_ADDRESS);","lastModifiedDate":"2019-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Spawns a process to clone repo specified in {@code config}. Does not wait for process to finish executing.","lastModifiedDate":"2019-07-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Should only handle a maximum of one spawned process at any time.","lastModifiedDate":"2019-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private boolean spawnCloneProcess(RepoConfiguration config) {","lastModifiedDate":"2019-08-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","lastModifiedDate":"2019-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","lastModifiedDate":"2021-06-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(FileUtil.getBareRepoPath(config).toString());","lastModifiedDate":"2019-07-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-06-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":160,"author":{"gitId":"chan-j-d"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"chan-j-d"},"content":"            Path repoPath \u003d Paths.get(repoDirectoryPath.toString(), config.getRepoName());","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath)) {","lastModifiedDate":"2021-06-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation() + \" as it was cloned before.\");","lastModifiedDate":"2021-06-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-06-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-06-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":168,"author":{"gitId":"chan-j-d"},"content":"            Files.createDirectories(repoDirectoryPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING, config.getLocation()));","lastModifiedDate":"2019-07-30"},{"lineNumber":171,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"chan-j-d"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"chan-j-d"},"content":"                    FileUtil.getBareRepoFolderName(config));","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"chan-j-d"},"content":"            crp \u003d GitClone.cloneBareAsync(config, Paths.get(\".\"), outputDirectory.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","lastModifiedDate":"2019-07-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING, config.getDisplayName()), e);","lastModifiedDate":"2019-07-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2019-04-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2019-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Spawns a process to shallow clone repo specified in {@code config}.","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Should only handle a maximum of one spawned process at any time.","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private boolean spawnShallowCloneProcess(RepoConfiguration config, Date shallowSinceDate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(FileUtil.getBareRepoPath(config).toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"chan-j-d"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"chan-j-d"},"content":"            Files.createDirectories(repoDirectoryPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"chan-j-d"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"chan-j-d"},"content":"                    FileUtil.getBareRepoFolderName(config));","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_SHALLOW, config.getLocation()));","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"chan-j-d"},"content":"            crp \u003d GitClone.cloneShallowBareAsync(config, Paths.get(\".\"), outputDirectory.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    shallowSinceDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_SHALLOW, config.getDisplayName()), e);","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Spawns a process to create partial clone of repo specified in {@code config}.","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Waits for process to finish executing.","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private boolean spawnPartialCloneProcess(RepoConfiguration config) {","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(FileUtil.getPartialBareRepoPath(config).toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"chan-j-d"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"chan-j-d"},"content":"            Files.createDirectories(repoDirectoryPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"chan-j-d"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"chan-j-d"},"content":"                    FileUtil.getPartialBareRepoFolderName(config));","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_PARTIAL, config.getLocation()));","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"chan-j-d"},"content":"            GitClone.clonePartialBare(config, Paths.get(\".\"), outputDirectory.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_PARTIAL, config.getDisplayName()), e);","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Spawns a process to create shallow partial clone of repo specified in {@code config}.","lastModifiedDate":"2021-03-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Waits for process to finish executing.","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private boolean spawnShallowPartialCloneProcess(RepoConfiguration config) {","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(FileUtil.getShallowPartialBareRepoPath(config).toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"chan-j-d"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"chan-j-d"},"content":"            Files.createDirectories(repoDirectoryPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"chan-j-d"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"chan-j-d"},"content":"                    FileUtil.getShallowPartialBareRepoFolderName(config));","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_SHALLOW_PARTIAL, config.getLocation()));","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"chan-j-d"},"content":"            GitClone.cloneShallowPartialBare(config, Paths.get(\".\"), outputDirectory.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    config.getSinceDate());","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_SHALLOW_PARTIAL, config.getDisplayName()), e);","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Waits for previously spawned clone process to finish executing.","lastModifiedDate":"2019-03-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Should only be called after {@code spawnCloneProcess} has been called.","lastModifiedDate":"2019-03-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    private boolean waitForCloneProcess(RepoConfiguration config) {","lastModifiedDate":"2019-08-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName(), config.getRepoName());","lastModifiedDate":"2021-06-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath)) {","lastModifiedDate":"2021-06-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-06-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-06-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_WAITING_FOR_CLONING, config.getLocation()));","lastModifiedDate":"2019-03-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            crp.waitForProcess();","lastModifiedDate":"2019-03-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_COMPLETE_CLONING, config.getLocation()));","lastModifiedDate":"2019-03-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        } catch (RuntimeException | CommandRunnerProcessException e) {","lastModifiedDate":"2019-03-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            crp \u003d null;","lastModifiedDate":"2019-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING, config.getDisplayName()), e);","lastModifiedDate":"2019-07-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2019-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        crp \u003d null;","lastModifiedDate":"2019-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2019-03-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * Deletes previously cloned repo directories that are not in use anymore.","lastModifiedDate":"2019-03-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    private void cleanupPrevRepoFolder() {","lastModifiedDate":"2019-03-16"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        if (previousIndex !\u003d currentIndex) {","lastModifiedDate":"2019-04-03"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            deleteDirectory(configs[previousIndex].getRepoRoot());","lastModifiedDate":"2019-03-16"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * Deletes the {@code root} directory, unless RepoSense is currently being tested.","lastModifiedDate":"2021-06-03"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    private void deleteDirectory(String root) {","lastModifiedDate":"2019-03-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        if (SystemUtil.isTestEnvironment()) {","lastModifiedDate":"2021-06-03"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-06-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-06-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-06-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-03-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(root);","lastModifiedDate":"2019-03-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2019-03-16"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, MESSAGE_ERROR_DELETING_DIRECTORY, ioe);","lastModifiedDate":"2019-03-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public String getCurrentRepoDefaultBranch() {","lastModifiedDate":"2019-04-03"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        return currentRepoDefaultBranch;","lastModifiedDate":"2019-04-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-03-16"}],"authorContributionMap":{"chan-j-d":29,"yhtMinceraft1010X":3,"-":277}},{"path":"src/main/java/reposense/report/ReportGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.commons.text.StringEscapeUtils.escapeHtml4;","lastModifiedDate":"2020-11-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.InputStream;","lastModifiedDate":"2018-07-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2019-11-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2019-11-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-07-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-06-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2019-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2020-11-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2019-04-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2019-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2019-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-06-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2019-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2019-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.concurrent.ExecutorService;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2020-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2018-06-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-06-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2019-08-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2018-07-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.RepoSense;","lastModifiedDate":"2018-07-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.authorship.AuthorshipReporter;","lastModifiedDate":"2018-06-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.authorship.model.AuthorshipSummary;","lastModifiedDate":"2018-06-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.commits.CommitsReporter;","lastModifiedDate":"2018-06-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;","lastModifiedDate":"2018-06-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.git.GitLsTree;","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.git.GitRevParse;","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import reposense.git.GitShortlog;","lastModifiedDate":"2018-12-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import reposense.git.exception.InvalidFilePathException;","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","lastModifiedDate":"2020-11-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2019-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","lastModifiedDate":"2020-11-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;","lastModifiedDate":"2018-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;","lastModifiedDate":"2019-06-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import reposense.parser.StandaloneConfigJsonParser;","lastModifiedDate":"2018-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import reposense.report.exception.NoAuthorsWithCommitsFoundException;","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import reposense.util.ProgressTracker;","lastModifiedDate":"2019-08-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2020-11-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":" * Contains report generation related functionalities.","lastModifiedDate":"2019-04-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class ReportGenerator {","lastModifiedDate":"2018-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FOLDER \u003d \"_reposense\";","lastModifiedDate":"2018-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FILE \u003d \"config.json\";","lastModifiedDate":"2018-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ReportGenerator.class);","lastModifiedDate":"2018-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // zip file which contains all the report template files","lastModifiedDate":"2019-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String TEMPLATE_FILE \u003d \"/templateZip.zip\";","lastModifiedDate":"2018-07-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String INDEX_PAGE_TEMPLATE \u003d \"index.html\";","lastModifiedDate":"2020-11-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String INDEX_PAGE_DEFAULT_TITLE \u003d \"\u003ctitle\u003eRepoSense Report\u003c/title\u003e\";","lastModifiedDate":"2020-11-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the config provided by %s (%s).\";","lastModifiedDate":"2019-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CREATING_DIRECTORY \u003d","lastModifiedDate":"2019-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \"Error has occurred while creating repo directory for %s (%s), will skip this repo.\";","lastModifiedDate":"2019-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_STANDALONE_CONFIG \u003d \"%s (%s) does not contain a standalone config file.\";","lastModifiedDate":"2019-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_STANDALONE_CONFIG \u003d \"Ignoring standalone config file in %s (%s).\";","lastModifiedDate":"2019-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_STANDALONE_CONFIG \u003d \"%s/%s/%s is malformed for %s (%s).\";","lastModifiedDate":"2019-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_SPECIFIED \u003d","lastModifiedDate":"2019-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \"%s (%s) has no authors specified, using all authors by default.\";","lastModifiedDate":"2019-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND \u003d","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"No authors found with commits for %s (%s).\";","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYSIS \u003d \"Analyzing %s (%s)...\";","lastModifiedDate":"2019-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_ANALYSIS \u003d \"Analysis of %s (%s) completed!\";","lastModifiedDate":"2019-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_REPORT_GENERATED \u003d \"The report is generated at %s\";","lastModifiedDate":"2019-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_BRANCH_DOES_NOT_EXIST \u003d \"Branch %s does not exist in %s! Analysis terminated.\";","lastModifiedDate":"2019-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING \u003d \"Failed to clone from %s\";","lastModifiedDate":"2019-08-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_DOES_NOT_EXIST \u003d \"Branch \\\"%s\\\" does not exist.\";","lastModifiedDate":"2019-08-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH \u003d","lastModifiedDate":"2019-08-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \"Branch contains file paths with illegal characters and not analyzable.\";","lastModifiedDate":"2019-08-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING_OR_BRANCHING \u003d \"Exception met while cloning or checking out.\";","lastModifiedDate":"2019-08-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final String LOG_UNEXPECTED_ERROR \u003d \"Unexpected error stack trace for %s:\\n\u003e%s\";","lastModifiedDate":"2019-11-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Date earliestSinceDate \u003d null;","lastModifiedDate":"2019-04-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static ProgressTracker progressTracker \u003d null;","lastModifiedDate":"2019-08-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e assetsFilesWhiteList \u003d","lastModifiedDate":"2020-11-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList(Arrays.asList(new String[] {\"favicon.ico\"}));","lastModifiedDate":"2020-11-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Generates the authorship and commits JSON file for each repo in {@code configs} at {@code outputPath}, as","lastModifiedDate":"2018-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * well as the summary JSON file of all the repos.","lastModifiedDate":"2018-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-07-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return the list of file paths that were generated.","lastModifiedDate":"2019-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if templateZip.zip does not exists in jar file.","lastModifiedDate":"2018-07-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static List\u003cPath\u003e generateReposReport(List\u003cRepoConfiguration\u003e configs, String outputPath, String assetsPath,","lastModifiedDate":"2020-11-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig, String generationDate, Date cliSinceDate, Date untilDate,","lastModifiedDate":"2020-11-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads, int numAnalysisThreads,","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Supplier\u003cString\u003e reportGenerationTimeProvider, ZoneId zoneId) throws IOException {","lastModifiedDate":"2020-11-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prepareTemplateFile(reportConfig, outputPath);","lastModifiedDate":"2020-11-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (Files.exists(Paths.get(assetsPath))) {","lastModifiedDate":"2020-11-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            FileUtil.copyDirectoryContents(assetsPath, outputPath, assetsFilesWhiteList);","lastModifiedDate":"2020-11-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        earliestSinceDate \u003d null;","lastModifiedDate":"2019-04-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        progressTracker \u003d new ProgressTracker(configs.size());","lastModifiedDate":"2019-08-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e reportFoldersAndFiles \u003d cloneAndAnalyzeRepos(configs, outputPath,","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                numCloningThreads, numAnalysisThreads);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Date reportSinceDate \u003d (cliSinceDate.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE))","lastModifiedDate":"2019-06-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                ? earliestSinceDate : cliSinceDate;","lastModifiedDate":"2019-06-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Optional\u003cPath\u003e summaryPath \u003d FileUtil.writeJsonFile(","lastModifiedDate":"2019-12-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new SummaryJson(configs, reportConfig, generationDate,","lastModifiedDate":"2020-11-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        TimeUtil.getZonedDateFromSystemDate(reportSinceDate, zoneId),","lastModifiedDate":"2020-11-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        TimeUtil.getZonedDateFromSystemDate(untilDate, zoneId), isSinceDateProvided,","lastModifiedDate":"2020-11-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        isUntilDateProvided, RepoSense.getVersion(), ErrorSummary.getInstance().getErrorList(),","lastModifiedDate":"2020-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        reportGenerationTimeProvider.get(), zoneId.toString()),","lastModifiedDate":"2020-11-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                getSummaryResultPath(outputPath));","lastModifiedDate":"2019-04-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        summaryPath.ifPresent(reportFoldersAndFiles::add);","lastModifiedDate":"2019-12-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_REPORT_GENERATED, outputPath));","lastModifiedDate":"2019-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return reportFoldersAndFiles;","lastModifiedDate":"2019-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Copies the template file to the specified {@code outputPath} for the repo report to be generated.","lastModifiedDate":"2020-01-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws IOException if template resource is not found.","lastModifiedDate":"2020-01-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-01-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static void prepareTemplateFile(ReportConfiguration config, String outputPath) throws IOException {","lastModifiedDate":"2020-11-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        InputStream is \u003d RepoSense.class.getResourceAsStream(TEMPLATE_FILE);","lastModifiedDate":"2020-01-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        FileUtil.copyTemplate(is, outputPath);","lastModifiedDate":"2020-01-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        setReportConfiguration(config, outputPath);","lastModifiedDate":"2020-11-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static void setReportConfiguration(ReportConfiguration config, String outputPath) throws IOException {","lastModifiedDate":"2020-11-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        setLandingPageTitle(outputPath, config.getTitle());","lastModifiedDate":"2020-11-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Set title of template file located at {@code filePath} to {@code pageTitle}","lastModifiedDate":"2020-11-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static void setLandingPageTitle(String filePath, String pageTitle) throws IOException {","lastModifiedDate":"2020-11-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path indexPagePath \u003d Paths.get(filePath, INDEX_PAGE_TEMPLATE);","lastModifiedDate":"2020-11-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String line \u003d new String(Files.readAllBytes(indexPagePath));","lastModifiedDate":"2020-11-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String newLine \u003d line.replaceAll(INDEX_PAGE_DEFAULT_TITLE, \"\u003ctitle\u003e\" + escapeHtml4(pageTitle) + \"\u003c/title\u003e\");","lastModifiedDate":"2020-11-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Files.write(indexPagePath, newLine.getBytes());","lastModifiedDate":"2020-11-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Groups {@code RepoConfiguration} with the same {@code RepoLocation} together so that they are only cloned once.","lastModifiedDate":"2019-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e groupConfigsByRepoLocation(","lastModifiedDate":"2019-04-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs) {","lastModifiedDate":"2019-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2019-04-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2019-04-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            RepoLocation location \u003d config.getLocation();","lastModifiedDate":"2019-04-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!repoLocationMap.containsKey(location)) {","lastModifiedDate":"2019-04-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                repoLocationMap.put(location, new ArrayList\u003c\u003e());","lastModifiedDate":"2019-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-04-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            repoLocationMap.get(location).add(config);","lastModifiedDate":"2019-04-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return repoLocationMap;","lastModifiedDate":"2019-04-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Clone, analyze and generate the report for repositories in {@code repoLocationMap}.","lastModifiedDate":"2019-04-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Performs cloning and analysis of each repository in parallel, and generates the report.","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Also removes any configs that failed to clone or analyze from {@code configs}.","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * By default, runs in multi-threaded mode with {@code numCloningThreads} threads for cloning","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * and {@code numAnalysisThreads} threads for analysis.","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * To turn off multi-threading, run the program with the flags","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code --cloning-threads 1 --analysis-threads 1}.","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-12-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for each repository.","lastModifiedDate":"2019-12-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e cloneAndAnalyzeRepos(List\u003cRepoConfiguration\u003e configs, String outputPath,","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            int numCloningThreads, int numAnalysisThreads) {","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d groupConfigsByRepoLocation(configs);","lastModifiedDate":"2019-08-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e repoLocationList \u003d new ArrayList\u003c\u003e(repoLocationMap.keySet());","lastModifiedDate":"2019-08-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // Fixed thread pools are used to limit the number of threads used by cloning and analysis jobs at any one time","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ExecutorService cloneExecutor \u003d Executors.newFixedThreadPool(numCloningThreads);","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ExecutorService analyzeExecutor \u003d Executors.newFixedThreadPool(numAnalysisThreads);","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        List\u003cCompletableFuture\u003cAnalyzeJobOutput\u003e\u003e analyzeJobFutures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (RepoLocation location : repoLocationList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configsToAnalyze \u003d repoLocationMap.get(location);","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // The `CompletableFuture.supplyAsync` method is used to clone the repo in parallel.","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // Note that the `cloneExecutor` is passed as a parameter to ensure that the number of threads used","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // for cloning is no more than `numCloningThreads`.","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cCloneJobOutput\u003e cloneFuture \u003d CompletableFuture.supplyAsync(() -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    cloneRepo(configsToAnalyze.get(0), location), cloneExecutor);","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // The `thenApplyAsync` method is used to analyze the cloned repo in parallel.","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // This ensures that the analysis job for each repo will only be run after the repo has been cloned.","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // Note that the `analyzeExecutor` is passed as a parameter to ensure that the number of threads used","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // for analysis is no more than `numAnalysisThreads`.","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cAnalyzeJobOutput\u003e analyzeFuture \u003d cloneFuture.thenApplyAsync(","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    cloneJobOutput -\u003e analyzeRepos(outputPath, configsToAnalyze, cloneJobOutput), analyzeExecutor);","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            analyzeJobFutures.add(analyzeFuture);","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // Next, we collect the list of outputs from all the analyze jobs","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        List\u003cAnalyzeJobOutput\u003e jobOutputs \u003d analyzeJobFutures.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .map(CompletableFuture::join)","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // Finally, the ExecutorService objects are shut down to prevent memory leaks","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        cloneExecutor.shutdown();","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        analyzeExecutor.shutdown();","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d jobOutputs.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getFiles().stream())","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e cloneFailLocations \u003d jobOutputs","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .filter(jobOutput -\u003e !jobOutput.isCloneSuccessful())","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .map(jobOutput -\u003e jobOutput.getLocation())","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        cloneFailLocations.forEach(location -\u003e handleCloningFailed(configs, location));","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d jobOutputs","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getAnalyseErrors().stream())","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        analysisErrors.forEach(errorInfo -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                handleAnalysisFailed(configs, errorInfo.getFailedConfig(), errorInfo.getErrorMessage()));","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        repoCloner.cleanup();","lastModifiedDate":"2019-03-16"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return generatedFiles;","lastModifiedDate":"2019-12-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Clones repo at {@code location}.","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @return A {@code CloneJobOutput} object comprising the {@code location} of the repo, whether the cloning was","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * successful, and the {@code defaultBranch} of the repo.","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    private static CloneJobOutput cloneRepo(RepoConfiguration config, RepoLocation location) {","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(config);","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (clonedRepoLocation !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            String defaultBranch \u003d repoCloner.getCurrentRepoDefaultBranch();","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location, defaultBranch);","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location);","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Analyzes all repos in {@code configsToAnalyze} and generates their report.","lastModifiedDate":"2019-08-01"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-12-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @return An {@code AnalyzeJobOutput} object comprising the {@code location} of the repo, whether the cloning was","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * successful, the list of {@code filesGenerated} by the analysis and a list of {@code analysisErrors} encountered.","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    private static AnalyzeJobOutput analyzeRepos(String outputPath, List\u003cRepoConfiguration\u003e configsToAnalyze,","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            CloneJobOutput cloneJobOutput) {","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d cloneJobOutput.getLocation();","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        boolean cloneSuccessful \u003d cloneJobOutput.isCloneSuccessful();","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-12-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        if (!cloneSuccessful) {","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            repoCloner.cleanupRepo(configsToAnalyze.get(0));","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configsToAnalyze.iterator();","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {","lastModifiedDate":"2019-08-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            progressTracker.incrementProgress();","lastModifiedDate":"2019-08-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            RepoConfiguration configToAnalyze \u003d itr.next();","lastModifiedDate":"2019-08-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            configToAnalyze.updateBranch(cloneJobOutput.getDefaultBranch());","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            Path repoReportDirectory \u003d Paths.get(outputPath, configToAnalyze.getOutputFolderName());","lastModifiedDate":"2019-08-01"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            logger.info(","lastModifiedDate":"2019-08-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    String.format(progressTracker.getProgress() + \" \"","lastModifiedDate":"2019-08-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                            + MESSAGE_START_ANALYSIS, configToAnalyze.getLocation(), configToAnalyze.getBranch()));","lastModifiedDate":"2019-08-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2018-06-22"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                GitRevParse.assertBranchExists(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));","lastModifiedDate":"2019-08-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                GitLsTree.validateFilePaths(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));","lastModifiedDate":"2019-08-01"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                GitClone.cloneFromBareAndUpdateBranch(Paths.get(FileUtil.REPOS_ADDRESS), configToAnalyze);","lastModifiedDate":"2019-08-01"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                FileUtil.createDirectory(repoReportDirectory);","lastModifiedDate":"2019-08-01"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(analyzeRepo(configToAnalyze, repoReportDirectory.toString()));","lastModifiedDate":"2019-12-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2018-06-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                String logMessage \u003d String.format(MESSAGE_ERROR_CREATING_DIRECTORY,","lastModifiedDate":"2019-08-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch());","lastModifiedDate":"2019-08-01"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, logMessage, ioe);","lastModifiedDate":"2019-08-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            } catch (GitBranchException gbe) {","lastModifiedDate":"2019-07-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, String.format(MESSAGE_BRANCH_DOES_NOT_EXIST,","lastModifiedDate":"2019-04-03"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                        configToAnalyze.getBranch(), configToAnalyze.getLocation()), gbe);","lastModifiedDate":"2019-08-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        String.format(LOG_BRANCH_DOES_NOT_EXIST, configToAnalyze.getBranch())));","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            } catch (InvalidFilePathException ipe) {","lastModifiedDate":"2019-08-01"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH));","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            } catch (GitCloneException gce) {","lastModifiedDate":"2019-08-01"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_ERROR_CLONING_OR_BRANCHING));","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            } catch (NoAuthorsWithCommitsFoundException nafe) {","lastModifiedDate":"2019-07-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND,","lastModifiedDate":"2019-07-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch()));","lastModifiedDate":"2019-08-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(generateEmptyRepoReport(repoReportDirectory.toString(),","lastModifiedDate":"2019-12-01"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                        Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND));","lastModifiedDate":"2019-12-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                generateEmptyRepoReport(repoReportDirectory.toString(), Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND);","lastModifiedDate":"2019-07-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2019-11-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2019-11-24"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                e.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2019-11-24"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, sw.toString());","lastModifiedDate":"2019-11-24"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                        String.format(LOG_UNEXPECTED_ERROR, configToAnalyze.getLocation(), sw.toString())));","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-04-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        repoCloner.cleanupRepo(configsToAnalyze.get(0));","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);","lastModifiedDate":"2021-03-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-03"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Analyzes repo specified by {@code config} and generates the report.","lastModifiedDate":"2019-04-03"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for the repo specified by {@code config}.","lastModifiedDate":"2019-12-01"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-03"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e analyzeRepo(","lastModifiedDate":"2019-12-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            RepoConfiguration config, String repoReportDirectory) throws NoAuthorsWithCommitsFoundException {","lastModifiedDate":"2019-07-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        // preprocess the config and repo","lastModifiedDate":"2018-08-19"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        updateRepoConfig(config);","lastModifiedDate":"2018-07-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        updateAuthorList(config);","lastModifiedDate":"2018-08-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        updateIgnoreCommitList(config);","lastModifiedDate":"2020-11-16"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        AuthorshipSummary authorshipSummary \u003d AuthorshipReporter.generateAuthorshipSummary(config);","lastModifiedDate":"2018-06-22"},{"lineNumber":347,"author":{"gitId":"aidoxe-123"},"content":"        CommitContributionSummary commitSummary \u003d CommitsReporter.generateCommitSummary(config);","lastModifiedDate":"2021-08-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d generateIndividualRepoReport(repoReportDirectory, commitSummary, authorshipSummary);","lastModifiedDate":"2019-12-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COMPLETE_ANALYSIS, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return generatedFiles;","lastModifiedDate":"2019-12-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Updates {@code config} with configuration provided by repository if exists.","lastModifiedDate":"2018-08-14"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    public static void updateRepoConfig(RepoConfiguration config) {","lastModifiedDate":"2018-07-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Path configJsonPath \u003d","lastModifiedDate":"2018-07-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                Paths.get(config.getRepoRoot(), REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE).toAbsolutePath();","lastModifiedDate":"2018-07-26"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        if (!Files.exists(configJsonPath)) {","lastModifiedDate":"2019-01-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2019-01-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-01-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        if (config.isStandaloneConfigIgnored()) {","lastModifiedDate":"2019-01-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_IGNORING_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-07-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-07-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(configJsonPath);","lastModifiedDate":"2018-07-26"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            config.update(standaloneConfig);","lastModifiedDate":"2018-07-26"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        } catch (JsonSyntaxException jse) {","lastModifiedDate":"2018-07-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_STANDALONE_CONFIG, config.getDisplayName(),","lastModifiedDate":"2019-03-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                    REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2018-11-10"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON,","lastModifiedDate":"2019-03-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                    iae.getMessage(), config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-11"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            throw new AssertionError(","lastModifiedDate":"2018-07-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                    \"This exception should not happen as we have performed the file existence check.\");","lastModifiedDate":"2018-07-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-14"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * Find and update {@code config} with all the author identities if author list is empty.","lastModifiedDate":"2018-08-14"},{"lineNumber":387,"author":{"gitId":"-"},"content":"     * Also removes ignored authors from author list.","lastModifiedDate":"2019-12-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-14"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    private static void updateAuthorList(RepoConfiguration config) throws NoAuthorsWithCommitsFoundException {","lastModifiedDate":"2019-07-03"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (config.getAuthorList().isEmpty()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_AUTHORS_SPECIFIED, config.getLocation(), config.getBranch()));","lastModifiedDate":"2019-03-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            List\u003cAuthor\u003e authorList \u003d GitShortlog.getAuthors(config);","lastModifiedDate":"2018-12-22"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            if (authorList.isEmpty()) {","lastModifiedDate":"2019-07-03"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                throw new NoAuthorsWithCommitsFoundException();","lastModifiedDate":"2019-07-03"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            config.setAuthorList(authorList);","lastModifiedDate":"2018-08-14"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-14"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        config.removeIgnoredAuthors();","lastModifiedDate":"2019-12-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-14"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-16"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * Updates {@code config} with the exact list of commits if commit ranges are provided.","lastModifiedDate":"2020-11-16"},{"lineNumber":405,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-16"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    private static void updateIgnoreCommitList(RepoConfiguration config) {","lastModifiedDate":"2020-11-16"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e updatedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()","lastModifiedDate":"2020-11-16"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .flatMap(x -\u003e CommitHash.getHashes(config.getRepoRoot(), config.getBranch(), x))","lastModifiedDate":"2020-11-16"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2020-11-16"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(updatedIgnoreCommitList);","lastModifiedDate":"2020-11-16"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-01"},{"lineNumber":414,"author":{"gitId":"-"},"content":"     * Adds {@code configs} that were not successfully cloned from {@code failedRepoLocation}","lastModifiedDate":"2019-08-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"     * into the list of errors in the summary report and removes them from the list of {@code configs}.","lastModifiedDate":"2019-08-01"},{"lineNumber":416,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-01"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    private static void handleCloningFailed(List\u003cRepoConfiguration\u003e configs, RepoLocation failedRepoLocation) {","lastModifiedDate":"2019-08-01"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e failedConfigs \u003d configs.stream()","lastModifiedDate":"2019-08-01"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                .filter(config -\u003e config.getLocation().equals(failedRepoLocation))","lastModifiedDate":"2019-08-01"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2019-08-01"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, failedConfigs, String.format(LOG_ERROR_CLONING, failedRepoLocation));","lastModifiedDate":"2019-08-01"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-01"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-01"},{"lineNumber":425,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfig} that failed analysis into the list of errors in the summary report and","lastModifiedDate":"2019-08-01"},{"lineNumber":426,"author":{"gitId":"-"},"content":"     * removes {@code failedConfig} from the list of {@code configs}.","lastModifiedDate":"2019-08-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-01"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    private static void handleAnalysisFailed(List\u003cRepoConfiguration\u003e configs, RepoConfiguration failedConfig,","lastModifiedDate":"2019-08-01"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            String errorMessage) {","lastModifiedDate":"2019-08-01"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, Collections.singletonList(failedConfig), errorMessage);","lastModifiedDate":"2019-08-01"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-01"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-01"},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfigs} that failed cloning/analysis into the list of errors in the summary report and","lastModifiedDate":"2019-08-01"},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * removes {@code failedConfigs} from the list of {@code configs}.","lastModifiedDate":"2019-08-01"},{"lineNumber":436,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-01"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    private static void handleFailedConfigs(","lastModifiedDate":"2019-08-01"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, List\u003cRepoConfiguration\u003e failedConfigs, String errorMessage) {","lastModifiedDate":"2019-08-01"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configs.iterator();","lastModifiedDate":"2019-08-01"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {","lastModifiedDate":"2019-08-01"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            RepoConfiguration config \u003d itr.next();","lastModifiedDate":"2019-08-01"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            if (failedConfigs.contains(config)) {","lastModifiedDate":"2019-08-01"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), errorMessage);","lastModifiedDate":"2019-08-01"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                itr.remove();","lastModifiedDate":"2019-08-01"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-08-01"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-01"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * Generates a report at the {@code repoReportDirectory}.","lastModifiedDate":"2019-04-11"},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this empty report.","lastModifiedDate":"2019-12-01"},{"lineNumber":452,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e generateEmptyRepoReport(String repoReportDirectory, String displayName) {","lastModifiedDate":"2019-12-01"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        CommitReportJson emptyCommitReportJson \u003d new CommitReportJson(displayName);","lastModifiedDate":"2019-07-03"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-01"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-12-01"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(emptyCommitReportJson, getIndividualCommitsPath(repoReportDirectory))","lastModifiedDate":"2019-12-01"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","lastModifiedDate":"2019-12-01"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(Collections.emptyList(), getIndividualAuthorshipPath(repoReportDirectory))","lastModifiedDate":"2019-12-01"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","lastModifiedDate":"2019-12-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-01"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        return generatedFiles;","lastModifiedDate":"2019-12-01"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-16"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-12-01"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * Generates a report for a single repository at {@code repoReportDirectory}.","lastModifiedDate":"2019-12-01"},{"lineNumber":467,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this report.","lastModifiedDate":"2019-12-01"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-12-01"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e generateIndividualRepoReport(","lastModifiedDate":"2019-12-01"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            String repoReportDirectory, CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {","lastModifiedDate":"2019-08-01"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        CommitReportJson commitReportJson \u003d new CommitReportJson(commitSummary, authorshipSummary);","lastModifiedDate":"2019-08-01"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-01"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-12-01"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(commitReportJson, getIndividualCommitsPath(repoReportDirectory))","lastModifiedDate":"2019-12-01"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","lastModifiedDate":"2019-12-01"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(authorshipSummary.getFileResults(), getIndividualAuthorshipPath(repoReportDirectory))","lastModifiedDate":"2019-12-01"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","lastModifiedDate":"2019-12-01"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        return generatedFiles;","lastModifiedDate":"2019-12-01"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-01"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-01"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    private static String getSummaryResultPath(String targetFileLocation) {","lastModifiedDate":"2018-07-02"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        return targetFileLocation + \"/\" + SummaryJson.SUMMARY_JSON_FILE_NAME;","lastModifiedDate":"2019-07-13"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    private static String getIndividualAuthorshipPath(String repoReportDirectory) {","lastModifiedDate":"2018-06-22"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/authorship.json\";","lastModifiedDate":"2018-06-22"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    private static String getIndividualCommitsPath(String repoReportDirectory) {","lastModifiedDate":"2018-06-22"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/commits.json\";","lastModifiedDate":"2018-06-22"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-16"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    public static void setEarliestSinceDate(Date newEarliestSinceDate) {","lastModifiedDate":"2019-04-16"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        if (earliestSinceDate \u003d\u003d null || newEarliestSinceDate.before(earliestSinceDate)) {","lastModifiedDate":"2019-04-16"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            earliestSinceDate \u003d newEarliestSinceDate;","lastModifiedDate":"2019-04-16"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-16"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-16"},{"lineNumber":498,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-22"}],"authorContributionMap":{"-":497,"aidoxe-123":1}},{"path":"src/main/java/reposense/util/StringsUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2018-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2018-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Contains strings related utilities.","lastModifiedDate":"2018-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class StringsUtil {","lastModifiedDate":"2018-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final Pattern SPECIAL_SYMBOLS \u003d Pattern.compile(\"[@;:\u0026/\\\\\\\\!\u003c\u003e{}%#\\\"\\\\-\u003d\u0027()\\\\[\\\\].+*?^$|]\");","lastModifiedDate":"2018-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Filters the {@code text}, returning only the lines that matches the given {@code regex}.","lastModifiedDate":"2018-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static String filterText(String text, String regex) {","lastModifiedDate":"2018-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String[] split \u003d text.split(\"\\n\");","lastModifiedDate":"2018-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        for (String line: split) {","lastModifiedDate":"2018-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            if (line.matches(regex)) {","lastModifiedDate":"2018-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                sb.append(line + \"\\n\");","lastModifiedDate":"2018-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Converts all special symbol characters inside {@code regexString} to the {@code replacementCharacter}.","lastModifiedDate":"2018-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String replaceSpecialSymbols(String regexString, String replacementCharacter) {","lastModifiedDate":"2018-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return SPECIAL_SYMBOLS.matcher(regexString).replaceAll(replacementCharacter);","lastModifiedDate":"2018-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String addQuote(String original) {","lastModifiedDate":"2018-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return \"\\\"\" + original + \"\\\"\";","lastModifiedDate":"2018-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Removes quotes at the start and end of {@code original}, if exists.","lastModifiedDate":"2019-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String removeQuote(String original) {","lastModifiedDate":"2019-04-04"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (original.startsWith(\"\\\"\") \u0026\u0026 original.endsWith(\"\\\"\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"                ? original.substring(1, original.length() - 1)","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"                : original;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"chan-j-d"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"chan-j-d"},"content":"     * Removes trailing backslashes from a {@code string}, if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"chan-j-d"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"chan-j-d"},"content":"    public static String removeTrailingBackslash(String string) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"chan-j-d"},"content":"        if (string.isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"            return string;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"chan-j-d"},"content":"        int lastCharIndex \u003d string.length() - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"chan-j-d"},"content":"        String editedString \u003d string;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"chan-j-d"},"content":"        boolean isLastCharBackslash \u003d string.charAt(lastCharIndex) \u003d\u003d \u0027\\\\\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"chan-j-d"},"content":"        while (isLastCharBackslash) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"chan-j-d"},"content":"            editedString \u003d editedString.substring(0, lastCharIndex--);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"chan-j-d"},"content":"            boolean isStringEmpty \u003d editedString.length() \u003d\u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"chan-j-d"},"content":"            isLastCharBackslash \u003d !isStringEmpty \u0026\u0026 editedString.charAt(lastCharIndex) \u003d\u003d \u0027\\\\\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"chan-j-d"},"content":"        return editedString;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-09-01"}],"authorContributionMap":{"chan-j-d":16,"yhtMinceraft1010X":3,"-":45}},{"path":"src/systemtest/java/reposense/ConfigSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;","lastModifiedDate":"2018-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","lastModifiedDate":"2018-06-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2020-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-05-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-05-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-07-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2018-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.After;","lastModifiedDate":"2020-01-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2018-07-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;","lastModifiedDate":"2019-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;","lastModifiedDate":"2018-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.GroupConfiguration;","lastModifiedDate":"2019-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","lastModifiedDate":"2020-11-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","lastModifiedDate":"2018-06-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;","lastModifiedDate":"2018-08-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;","lastModifiedDate":"2019-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;","lastModifiedDate":"2018-08-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.parser.ReportConfigJsonParser;","lastModifiedDate":"2020-11-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;","lastModifiedDate":"2019-08-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;","lastModifiedDate":"2018-06-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","lastModifiedDate":"2019-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ConfigSystemTest {","lastModifiedDate":"2018-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String FT_TEMP_DIR \u003d \"ft_temp\";","lastModifiedDate":"2018-05-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String DUMMY_ASSETS_DIR \u003d \"dummy\";","lastModifiedDate":"2020-11-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String EXPECTED_FOLDER \u003d \"expected\";","lastModifiedDate":"2018-05-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e TESTING_FILE_FORMATS \u003d Arrays.asList(\"java\", \"adoc\");","lastModifiedDate":"2018-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TEST_REPORT_GENERATED_TIME \u003d \"Tue Jul 24 17:45:15 SGT 2018\";","lastModifiedDate":"2018-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String TEST_REPORT_GENERATION_TIME \u003d \"15 second(s)\";","lastModifiedDate":"2020-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TEST_TIME_ZONE \u003d \"Asia/Singapore\";","lastModifiedDate":"2020-11-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2018-07-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FT_TEMP_DIR);","lastModifiedDate":"2018-05-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ErrorSummary.getInstance().clearErrorList();","lastModifiedDate":"2019-08-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-05-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @After","lastModifiedDate":"2020-01-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void tearDown() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FT_TEMP_DIR);","lastModifiedDate":"2020-01-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit.","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-06-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRange() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND, \"2/3/2019\"), false, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"sinceBeginningDateRange/expected\");","lastModifiedDate":"2020-08-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);","lastModifiedDate":"2019-06-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDate() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        generateReport(getInputWithUntilDate(\"1/11/2017\"), false, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"30daysFromUntilDate/expected\");","lastModifiedDate":"2020-08-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);","lastModifiedDate":"2018-07-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * System test with a specified since date and until date, with the last modified date time in each","lastModifiedDate":"2020-11-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * line of code.","lastModifiedDate":"2020-11-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void testDateRangeWithModifiedDateTimeInLines() throws Exception {","lastModifiedDate":"2020-11-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(\"1/9/2017\", \"30/10/2017\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                true, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"dateRangeWithModifiedDateTimeInLines/expected\");","lastModifiedDate":"2020-11-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);","lastModifiedDate":"2018-07-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit, using shallow cloning.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRangeWithShallowCloning() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND, \"2/3/2019\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                false, true);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"sinceBeginningDateRange/expected\");","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDateWithShallowCloning() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        generateReport(getInputWithUntilDate(\"1/11/2017\"), false, true);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"30daysFromUntilDate/expected\");","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private String getInputWithUntilDate(String untilDate) {","lastModifiedDate":"2019-06-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return String.format(\"--until %s\", untilDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private String getInputWithDates(String sinceDate, String untilDate) {","lastModifiedDate":"2019-06-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return String.format(\"--since %s --until %s\", sinceDate, untilDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Generates the testing report to be compared with expected report.","lastModifiedDate":"2019-04-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void generateReport(String inputDates, boolean shouldIncludeModifiedDateInLines, boolean shallowCloning)","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Path configFolder \u003d loadResource(getClass(), \"repo-config.csv\").getParent();","lastModifiedDate":"2020-08-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", TESTING_FILE_FORMATS);","lastModifiedDate":"2018-08-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder().addConfig(configFolder)","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .addFormats(formats)","lastModifiedDate":"2019-02-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .addTimezone(TEST_TIME_ZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(inputDates);","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (shallowCloning) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            inputBuilder \u003d inputBuilder.addShallowCloning();","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String input \u003d inputBuilder.build();","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d","lastModifiedDate":"2018-08-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();","lastModifiedDate":"2018-08-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d","lastModifiedDate":"2019-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();","lastModifiedDate":"2018-08-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d","lastModifiedDate":"2019-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new GroupConfigCsvParser(((ConfigCliArguments) cliArguments).getGroupConfigFilePath()).parse();","lastModifiedDate":"2019-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ReportConfiguration reportConfig \u003d new ReportConfigJsonParser().parse((","lastModifiedDate":"2020-11-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getReportConfigFilePath());","lastModifiedDate":"2020-11-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(repoConfigs, authorConfigs);","lastModifiedDate":"2018-08-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);","lastModifiedDate":"2019-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(repoConfigs, cliArguments.getFormats());","lastModifiedDate":"2018-08-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        RepoConfiguration.setDatesToRepoConfigs(","lastModifiedDate":"2018-08-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                repoConfigs, cliArguments.getSinceDate(), cliArguments.getUntilDate());","lastModifiedDate":"2018-08-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        RepoConfiguration.setZoneIdToRepoConfigs(repoConfigs, cliArguments.getZoneId().toString());","lastModifiedDate":"2020-11-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(repoConfigs, shouldIncludeModifiedDateInLines);","lastModifiedDate":"2020-11-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        ReportGenerator.generateReposReport(repoConfigs, FT_TEMP_DIR, DUMMY_ASSETS_DIR, reportConfig,","lastModifiedDate":"2020-11-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                TEST_REPORT_GENERATED_TIME, cliArguments.getSinceDate(), cliArguments.getUntilDate(),","lastModifiedDate":"2020-11-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(), () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                TEST_REPORT_GENERATION_TIME, cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Verifies all JSON files in {@code actualDirectory} with {@code expectedDirectory}","lastModifiedDate":"2019-04-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void verifyAllJson(Path expectedDirectory, String actualRelative) {","lastModifiedDate":"2018-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try (Stream\u003cPath\u003e pathStream \u003d Files.list(expectedDirectory)) {","lastModifiedDate":"2018-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            for (Path filePath : pathStream.collect(Collectors.toList())) {","lastModifiedDate":"2018-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                if (Files.isDirectory(filePath)) {","lastModifiedDate":"2018-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    verifyAllJson(filePath, actualRelative);","lastModifiedDate":"2018-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (filePath.toString().endsWith(\".json\")) {","lastModifiedDate":"2018-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    String relativeDirectory \u003d filePath.toAbsolutePath().toString().split(EXPECTED_FOLDER)[1];","lastModifiedDate":"2018-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    assertJson(filePath, relativeDirectory, actualRelative);","lastModifiedDate":"2018-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-05-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            ioe.printStackTrace();","lastModifiedDate":"2018-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Asserts the correctness of given JSON file.","lastModifiedDate":"2019-04-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void assertJson(Path expectedJson, String expectedPosition, String actualRelative) {","lastModifiedDate":"2018-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Path actualJson \u003d Paths.get(actualRelative, expectedPosition);","lastModifiedDate":"2018-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(actualJson));","lastModifiedDate":"2018-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-03-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            Assert.assertTrue(TestUtil.compareFileContents(expectedJson, actualJson));","lastModifiedDate":"2018-05-24"},{"lineNumber":188,"author":{"gitId":"FH-30"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            Assert.fail(e.getMessage());","lastModifiedDate":"2018-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-04"}],"authorContributionMap":{"FH-30":1,"-":191}},{"path":"src/test/java/reposense/authorship/AnnotatorAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;","lastModifiedDate":"2020-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.model.Author.UNKNOWN_AUTHOR;","lastModifiedDate":"2020-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":5,"author":{"gitId":"aidoxe-123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2020-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2020-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2020-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":10,"author":{"gitId":"aidoxe-123"},"content":"import org.junit.After;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2020-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2020-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2020-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;","lastModifiedDate":"2020-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2020-03-21"},{"lineNumber":17,"author":{"gitId":"aidoxe-123"},"content":"import reposense.model.AuthorConfiguration;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2020-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2020-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzerTest extends GitTestTemplate {","lastModifiedDate":"2020-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Date SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 8);","lastModifiedDate":"2020-03-21"},{"lineNumber":23,"author":{"gitId":"aidoxe-123"},"content":"    private static final Date UNTIL_DATE \u003d TestUtil.getUntilDate(2021, Calendar.AUGUST, 3);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String TIME_ZONE_ID_STRING \u003d \"Asia/Singapore\";","lastModifiedDate":"2020-11-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST \u003d {","lastModifiedDate":"2020-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2020-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR,","lastModifiedDate":"2020-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR","lastModifiedDate":"2021-05-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2020-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST \u003d {","lastModifiedDate":"2020-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2020-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,","lastModifiedDate":"2020-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,","lastModifiedDate":"2021-05-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR","lastModifiedDate":"2021-05-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2020-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2020-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super.before();","lastModifiedDate":"2020-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        config.setSinceDate(SINCE_DATE);","lastModifiedDate":"2020-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        config.setUntilDate(UNTIL_DATE);","lastModifiedDate":"2020-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID_STRING);","lastModifiedDate":"2020-11-16"},{"lineNumber":49,"author":{"gitId":"aidoxe-123"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"aidoxe-123"},"content":"    @After","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"aidoxe-123"},"content":"    public void after() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"aidoxe-123"},"content":"        super.after();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"aidoxe-123"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNamePresentInConfig_overrideAuthorship() {","lastModifiedDate":"2020-03-21"},{"lineNumber":60,"author":{"gitId":"aidoxe-123"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"aidoxe-123"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"aidoxe-123"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"aidoxe-123"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndNoAuthorConfigFile_acceptTaggedAuthor() {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"aidoxe-123"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");","lastModifiedDate":"2020-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));","lastModifiedDate":"2021-04-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-03-21"},{"lineNumber":73,"author":{"gitId":"aidoxe-123"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndHaveAuthorConfigFile_disownCode() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"aidoxe-123"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"aidoxe-123"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");","lastModifiedDate":"2020-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST));","lastModifiedDate":"2021-04-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {","lastModifiedDate":"2020-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), relativePath);","lastModifiedDate":"2020-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return FileInfoAnalyzer.analyzeTextFile(config, fileInfo);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-03-21"}],"authorContributionMap":{"-":62,"aidoxe-123":22}},{"path":"src/test/java/reposense/authorship/FileInfoExtractorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-05-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-05-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2019-06-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-07-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2019-06-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-05-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-05-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;","lastModifiedDate":"2018-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-06-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","lastModifiedDate":"2019-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2018-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FileInfoExtractorTest extends GitTestTemplate {","lastModifiedDate":"2018-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"resources\", \"FileInfoExtractorTest\");","lastModifiedDate":"2018-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path FILE_WITH_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER.resolve(\"fileWithSpecialCharacters.txt\");","lastModifiedDate":"2018-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path FILE_WITHOUT_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER","lastModifiedDate":"2018-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .resolve(\"fileWithoutSpecialCharacters.txt\");","lastModifiedDate":"2018-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String EDITED_FILE_INFO_BRANCH \u003d \"getEditedFileInfos-test\";","lastModifiedDate":"2018-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH \u003d \"directory-with-valid-whitelisted-name\";","lastModifiedDate":"2019-01-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH \u003d","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"535-FileInfoExtractorTest-branchWithValidWhitelistedFileName.txt\";","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_BINARY_FILES \u003d","lastModifiedDate":"2019-06-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\";","lastModifiedDate":"2019-06-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_RARE_FILE_FORMATS \u003d","lastModifiedDate":"2019-07-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"708-FileInfoExtractorTest-extractFileInfos_withoutSpecifiedFormats_success\";","lastModifiedDate":"2019-07-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FEBRUARY_EIGHT_COMMIT_HASH \u003d \"768015345e70f06add2a8b7d1f901dc07bf70582\";","lastModifiedDate":"2018-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void extractFileInfosTest() {","lastModifiedDate":"2018-06-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);","lastModifiedDate":"2018-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assert.assertEquals(6, files.size());","lastModifiedDate":"2018-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","lastModifiedDate":"2018-05-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));","lastModifiedDate":"2018-05-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","lastModifiedDate":"2018-05-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","lastModifiedDate":"2018-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void extractFileInfos_sinceDateFebrauaryNineToLatestCommit_success() {","lastModifiedDate":"2018-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Date date \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 9);","lastModifiedDate":"2019-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);","lastModifiedDate":"2018-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(5, files.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // files edited within commit range","lastModifiedDate":"2018-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // files not edited within commit range","lastModifiedDate":"2018-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assert.assertFalse(isFileExistence(Paths.get(\"blameTest.java\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Assert.assertFalse(isFileExistence(Paths.get(\"newFile.java\"), files));","lastModifiedDate":"2018-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void extractFileInfos_directoryWithValidWhitelistedName_success() {","lastModifiedDate":"2019-01-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH);","lastModifiedDate":"2019-01-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Assert.assertEquals(7, files.size());","lastModifiedDate":"2019-01-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\".gradle/anything.txt\"), files));","lastModifiedDate":"2019-01-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void extractFileInfos_branchWithValidWhitelistedFileName_success() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"whitelisted-format.txt\"), files));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void extractFileInfos_sinceDateAfterLatestCommit_emptyResult() {","lastModifiedDate":"2018-07-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Date date \u003d TestUtil.getSinceDate(2050, 12, 31);","lastModifiedDate":"2019-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);","lastModifiedDate":"2018-07-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Assert.assertTrue(files.isEmpty());","lastModifiedDate":"2018-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void extractFileInfos_untilDateBeforeFirstCommit_emptyResult() {","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Date date \u003d TestUtil.getUntilDate(2015, 12, 31);","lastModifiedDate":"2019-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Assert.assertTrue(files.isEmpty());","lastModifiedDate":"2018-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEight_success() {","lastModifiedDate":"2018-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);","lastModifiedDate":"2018-12-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);","lastModifiedDate":"2018-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Assert.assertEquals(3, files.size());","lastModifiedDate":"2018-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // file renamed without changing content, not included","lastModifiedDate":"2018-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Assert.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFirstCommit_success() {","lastModifiedDate":"2018-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);","lastModifiedDate":"2018-12-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FIRST_COMMIT_HASH);","lastModifiedDate":"2018-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assert.assertEquals(5, files.size());","lastModifiedDate":"2018-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // empty file created, not included","lastModifiedDate":"2018-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","lastModifiedDate":"2018-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileWithSpecialCharacters_correctFileInfoGenerated() {","lastModifiedDate":"2018-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITH_SPECIAL_CHARACTER.toString());","lastModifiedDate":"2018-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assert.assertEquals(5, fileInfo.getLines().size());","lastModifiedDate":"2018-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileWithoutSpecialCharacters_correctFileInfoGenerated() {","lastModifiedDate":"2018-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITHOUT_SPECIAL_CHARACTER.toString());","lastModifiedDate":"2018-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assert.assertEquals(5, fileInfo.getLines().size());","lastModifiedDate":"2018-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-06-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void getFilesList_getTextFilesFromRepoWithBinaryFiles_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\",","lastModifiedDate":"2019-06-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\",","lastModifiedDate":"2019-06-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");","lastModifiedDate":"2019-06-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","lastModifiedDate":"2019-06-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\",","lastModifiedDate":"2019-06-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","lastModifiedDate":"2019-06-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);","lastModifiedDate":"2019-06-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFiles \u003d FileInfoExtractor.getFiles(config, false);","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assert.assertEquals(6, textFiles.size());","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Non binary files should be captured","lastModifiedDate":"2019-06-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assert.assertTrue(textFiles.contains(Paths.get(textFile))));","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Binary files should be ignored","lastModifiedDate":"2019-06-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assert.assertFalse(textFiles.contains(Paths.get(binFile))));","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void getFilesList_getBinaryFilesFromRepoWithTextFiles_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\",","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\",","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\",","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e binaryFiles \u003d FileInfoExtractor.getFiles(config, true);","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assert.assertEquals(5, binaryFiles.size());","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Binary files should be captured","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assert.assertTrue(binaryFiles.contains(Paths.get(binFile))));","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Non binary files should be ignored","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assert.assertFalse(binaryFiles.contains(Paths.get(textFile))));","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void extractFileInfos_withoutSpecifiedFormats_success() {","lastModifiedDate":"2019-07-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.ARBIFORMAT\", \"My Documents/wordToHtml.htm\",","lastModifiedDate":"2019-07-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \"My Pictures/notPngPicture.png\", \"My Documents/wordToHtml_files/colorschememapping.xml\",","lastModifiedDate":"2019-07-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/filelist.xml\", \"My Documents/notPdfDocument.fdp\");","lastModifiedDate":"2019-07-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","lastModifiedDate":"2019-07-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.ARBIFORMAT\", \"My Documents/word.docx\", \"My Documents/pdfDocument.fdp\",","lastModifiedDate":"2019-07-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","lastModifiedDate":"2019-07-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","lastModifiedDate":"2019-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_RARE_FILE_FORMATS);","lastModifiedDate":"2019-07-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractTextFileInfos(config);","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertEquals(textFilesList.size(), files.size());","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // Non binary files should be captured","lastModifiedDate":"2019-07-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assert.assertTrue(isFileExistence(Paths.get(textFile), files)));","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // Binary files should be ignored","lastModifiedDate":"2019-07-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assert.assertFalse(isFileExistence(Paths.get(binFile), files)));","lastModifiedDate":"2019-07-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-17"},{"lineNumber":203,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"chan-j-d"},"content":"    public void getEditedFileInfos_repoWithFilesWithSpaces_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"chan-j-d"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d FileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertTrue(isFileExistence(Paths.get(\"space test.txt\"), fileInfos));","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private boolean isFileExistence(Path filePath, List\u003cFileInfo\u003e files) {","lastModifiedDate":"2018-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return files.stream().anyMatch(file -\u003e Paths.get(file.getPath()).equals(filePath));","lastModifiedDate":"2018-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-02-25"}],"authorContributionMap":{"chan-j-d":8,"-":205}},{"path":"src/test/java/reposense/commits/CommitInfoAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;","lastModifiedDate":"2018-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2019-07-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2019-07-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2019-07-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2019-07-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2020-04-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2020-04-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Assume;","lastModifiedDate":"2020-05-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2019-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;","lastModifiedDate":"2018-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;","lastModifiedDate":"2018-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.commits.model.ContributionPair;","lastModifiedDate":"2020-04-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","lastModifiedDate":"2018-12-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","lastModifiedDate":"2020-04-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","lastModifiedDate":"2020-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2018-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","lastModifiedDate":"2020-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommitInfoAnalyzerTest extends GitTestTemplate {","lastModifiedDate":"2018-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EUGENE_COMMIT \u003d 1;","lastModifiedDate":"2018-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final int NUMBER_MINGYI_COMMIT \u003d 1;","lastModifiedDate":"2019-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EMPTY_MESSAGE_COMMIT \u003d 1;","lastModifiedDate":"2019-01-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_JAVA \u003d new FileType(\"java\", Collections.singletonList(\"**java\"));","lastModifiedDate":"2020-04-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_MD \u003d new FileType(\"md\", Collections.singletonList(\"**md\"));","lastModifiedDate":"2020-04-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_JSON \u003d new FileType(\"json\", Collections.singletonList(\"**json\"));","lastModifiedDate":"2020-04-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_TXT \u003d new FileType(\"txt\", Collections.singletonList(\"**txt\"));","lastModifiedDate":"2020-05-08"},{"lineNumber":36,"author":{"gitId":"chan-j-d"},"content":"    private static final String DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH \u003d \"f34c20ec2c3be63e0764d4079a575dd75269ffeb\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2019-01-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super.before();","lastModifiedDate":"2019-01-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().clear();","lastModifiedDate":"2020-12-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorNoIgnoredCommitsNoDateRange_success() {","lastModifiedDate":"2018-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2018-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size(), commitResults.size());","lastModifiedDate":"2018-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void analyzeCommits_fakeMainAuthorNoIgnoredCommitsNoDateRange_success() {","lastModifiedDate":"2018-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2018-08-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - NUMBER_EUGENE_COMMIT, commitResults.size());","lastModifiedDate":"2018-08-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void analyzeCommits_eugeneAuthorNoIgnoredCommitsNoDateRange_success() {","lastModifiedDate":"2018-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2018-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_EUGENE_COMMIT, commitResults.size());","lastModifiedDate":"2018-08-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorSingleCommitIgnoredNoDateRange_success() {","lastModifiedDate":"2018-08-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2018-08-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));","lastModifiedDate":"2018-08-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(","lastModifiedDate":"2018-08-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Collections.singletonList(","lastModifiedDate":"2018-12-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));","lastModifiedDate":"2018-12-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitResultsShort, commitResultsFull);","lastModifiedDate":"2018-08-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - 1, commitResultsFull.size());","lastModifiedDate":"2018-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorMultipleCommitIgnoredNoDateRange_success() {","lastModifiedDate":"2018-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2018-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(","lastModifiedDate":"2018-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018, EUGENE_AUTHOR_README_FILE_COMMIT_07052018));","lastModifiedDate":"2018-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(Arrays.asList(","lastModifiedDate":"2018-12-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),","lastModifiedDate":"2018-12-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING.substring(0, 8))));","lastModifiedDate":"2018-12-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2018-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitResultsShort, commitResultsFull);","lastModifiedDate":"2018-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - 2, commitResultsFull.size());","lastModifiedDate":"2018-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void analyzeCommits_noCommitMessage_success() {","lastModifiedDate":"2019-01-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        config.setBranch(\"empty-commit-message\");","lastModifiedDate":"2019-01-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().clear();","lastModifiedDate":"2020-12-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(YONG_AUTHOR_NAME, new Author(YONG_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2019-01-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2019-01-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        commitResults.removeIf(s -\u003e !s.getMessageTitle().isEmpty());","lastModifiedDate":"2019-07-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_EMPTY_MESSAGE_COMMIT, commitResults.size());","lastModifiedDate":"2019-01-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emailWithAdditionOperator_success() {","lastModifiedDate":"2019-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");","lastModifiedDate":"2019-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);","lastModifiedDate":"2019-04-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2019-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2019-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);","lastModifiedDate":"2019-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_MINGYI_COMMIT, commitResults.size());","lastModifiedDate":"2019-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-04-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void analyzeCommits_duplicateAuthorsDuplicateCommits_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FAKE_AUTHOR_NAME);","lastModifiedDate":"2021-05-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":142,"author":{"gitId":"aidoxe-123"},"content":"        fileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(3, 3));","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"chan-j-d"},"content":"        expectedCommitResults.add(new CommitResult(author, DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH,","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"aidoxe-123"},"content":"                parseGitStrictIsoDate(\"2021-08-03T12:53:39+08:00\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"aidoxe-123"},"content":"                \"Update annotationTest.java\",","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \"\", null, fileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        config.setAuthorList(Arrays.asList(author, author));","lastModifiedDate":"2020-04-17"},{"lineNumber":149,"author":{"gitId":"aidoxe-123"},"content":"        config.setSinceDate(new GregorianCalendar(2021, Calendar.AUGUST, 3).getTime());","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"aidoxe-123"},"content":"        config.setUntilDate(new GregorianCalendar(2021, Calendar.AUGUST, 4).getTime());","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2020-04-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2020-04-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Assert.assertEquals(actualCommitInfos.size(), 2);","lastModifiedDate":"2020-04-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2020-04-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBody_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);","lastModifiedDate":"2019-07-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-07-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));","lastModifiedDate":"2020-04-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));","lastModifiedDate":"2020-04-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\",","lastModifiedDate":"2019-07-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\",","lastModifiedDate":"2019-07-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,","lastModifiedDate":"2020-04-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                firstFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\",","lastModifiedDate":"2019-07-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\",","lastModifiedDate":"2019-07-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \"","lastModifiedDate":"2019-07-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,","lastModifiedDate":"2020-04-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");","lastModifiedDate":"2019-07-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2019-07-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.JUNE, 19).getTime());","lastModifiedDate":"2019-07-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.JUNE, 20).getTime());","lastModifiedDate":"2019-07-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2019-07-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2019-07-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2019-07-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);","lastModifiedDate":"2019-07-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-07-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));","lastModifiedDate":"2020-04-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));","lastModifiedDate":"2020-04-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // 1st test: Contains commit message title but no commit message body.","lastModifiedDate":"2019-07-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"e54ae8fdb77c6c7d2c39131b816bfc03e6a6dd44\",","lastModifiedDate":"2019-07-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:35:46+08:00\"), \"Test 1: With message title but no body\",","lastModifiedDate":"2019-07-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \"\", null, firstFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // 2nd test: Contains no commit message title and no commit message body.","lastModifiedDate":"2019-07-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"57fa22fc2550210203c2941692f69ccb0cf18252\",","lastModifiedDate":"2019-07-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:36:14+08:00\"), \"\", \"\", null,","lastModifiedDate":"2020-04-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success\");","lastModifiedDate":"2019-07-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2019-07-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.JULY, 2).getTime());","lastModifiedDate":"2019-07-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.JULY, 3).getTime());","lastModifiedDate":"2019-07-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2019-07-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2019-07-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2019-07-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithMultipleTags_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","lastModifiedDate":"2020-01-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2020-01-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));","lastModifiedDate":"2020-04-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));","lastModifiedDate":"2020-04-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\",","lastModifiedDate":"2020-01-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\",","lastModifiedDate":"2020-01-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\",","lastModifiedDate":"2020-01-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\",","lastModifiedDate":"2020-01-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));","lastModifiedDate":"2020-04-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");","lastModifiedDate":"2020-01-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2020-01-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.DECEMBER, 20).getTime());","lastModifiedDate":"2020-01-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.DECEMBER, 21).getTime());","lastModifiedDate":"2020-01-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2020-01-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2020-01-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2020-01-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-02-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emptyCommits_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","lastModifiedDate":"2020-02-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2020-02-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\",","lastModifiedDate":"2020-02-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));","lastModifiedDate":"2020-04-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");","lastModifiedDate":"2020-02-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2020-02-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","lastModifiedDate":"2020-02-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.JANUARY, 27).getTime());","lastModifiedDate":"2020-02-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.JANUARY, 28).getTime());","lastModifiedDate":"2020-02-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2020-02-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2020-02-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2020-02-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-02-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-04-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithBinaryFileContribution_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","lastModifiedDate":"2020-04-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2020-04-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // binary file contribution will have 0 contribution and won\u0027t be added to fileTypesAndContributionMap","lastModifiedDate":"2020-04-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"a00c51138cbf5ab7d14f52b52abb182c8a369169\",","lastModifiedDate":"2020-04-17"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-06T16:41:10+08:00\"), \"Add binary file\", \"\", null));","lastModifiedDate":"2020-04-17"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        config.setBranch(\"1192-CommitInfoAnalyzerTest-analyzeCommits_commitsWithBinaryContribution_success\");","lastModifiedDate":"2020-04-17"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2020-04-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","lastModifiedDate":"2020-04-17"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.APRIL, 6).getTime());","lastModifiedDate":"2020-04-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.APRIL, 7).getTime());","lastModifiedDate":"2020-04-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2020-04-17"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2020-04-17"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2020-04-17"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-04-17"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-04-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void analyzeCommits_fileNameWithSpecialChars_success() throws Exception {","lastModifiedDate":"2020-05-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // Runs test only on non Windows (Unix) operating systems as the file names are invalid in windows","lastModifiedDate":"2020-05-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(!SystemUtil.isWindows());","lastModifiedDate":"2020-05-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_ALTERNATIVE_AUTHOR_NAME);","lastModifiedDate":"2020-05-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2020-05-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-05-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(1, 0));","lastModifiedDate":"2020-05-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"cfb3c8dc477cb0af19fce8bead4d278f35afa396\",","lastModifiedDate":"2020-05-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:09:39+08:00\"),","lastModifiedDate":"2020-05-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                \"Create file name without special chars\",","lastModifiedDate":"2020-05-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                \"\", null, firstFileTypeAndContributionMap));","lastModifiedDate":"2020-05-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2020-05-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(0, 0));","lastModifiedDate":"2020-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"17bde492e9a80d8699ad193cf87e677341f936cc\",","lastModifiedDate":"2020-05-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:17:40+08:00\"),","lastModifiedDate":"2020-05-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                \"Rename to file name with special chars\",","lastModifiedDate":"2020-05-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                \"\", null, secondFileTypeAndContributionMap));","lastModifiedDate":"2020-05-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        config.setBranch(\"1244-CommitInfoAnalyzerTest-analyzeCommits_fileNameWithSpecialChars_success\");","lastModifiedDate":"2020-05-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2020-05-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.APRIL, 20).getTime());","lastModifiedDate":"2020-05-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.APRIL, 21).getTime());","lastModifiedDate":"2020-05-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);","lastModifiedDate":"2020-05-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","lastModifiedDate":"2020-05-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualCommitInfos.size());","lastModifiedDate":"2020-05-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);","lastModifiedDate":"2020-05-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} from a string {@code gitStrictIsoDate}.","lastModifiedDate":"2019-07-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    private Date parseGitStrictIsoDate(String gitStrictIsoDate) throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return CommitInfoAnalyzer.GIT_STRICT_ISO_DATE_FORMAT.parse(gitStrictIsoDate);","lastModifiedDate":"2019-07-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-19"}],"authorContributionMap":{"chan-j-d":2,"-":323,"aidoxe-123":5}},{"path":"src/test/java/reposense/git/GitCloneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2018-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-12-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2018-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class GitCloneTest extends GitTestTemplate {","lastModifiedDate":"2018-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":15,"author":{"gitId":"FH-30"},"content":"    public void cloneTest_validRepo_success() {","lastModifiedDate":"2021-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // As the clone has been performed in the {@code GitTestTemplate},","lastModifiedDate":"2018-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // this checks whether the clone has been executed successfully by performing a file system check.","lastModifiedDate":"2018-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Path dir \u003d Paths.get(config.getRepoRoot());","lastModifiedDate":"2018-12-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(dir));","lastModifiedDate":"2018-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-22"}],"authorContributionMap":{"FH-30":1,"-":20}},{"path":"src/test/java/reposense/git/GitLogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2018-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-12-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-12-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","lastModifiedDate":"2019-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2018-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class GitLogTest extends GitTestTemplate {","lastModifiedDate":"2018-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void gitLog_existingFormats_hasContent() {","lastModifiedDate":"2018-12-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","lastModifiedDate":"2018-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Assert.assertFalse(content.isEmpty());","lastModifiedDate":"2018-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void gitLog_nonExistingFormats_noContent() {","lastModifiedDate":"2018-12-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"py\")));","lastModifiedDate":"2019-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","lastModifiedDate":"2018-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Assert.assertTrue(content.isEmpty());","lastModifiedDate":"2018-12-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFiles_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","lastModifiedDate":"2019-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","lastModifiedDate":"2018-12-22"},{"lineNumber":34,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(10, content));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameOnly_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME);","lastModifiedDate":"2018-12-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);","lastModifiedDate":"2018-12-22"},{"lineNumber":42,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(6, content));","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void gitLog_authorNameIncorrectCase_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME.toUpperCase());","lastModifiedDate":"2018-12-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);","lastModifiedDate":"2018-12-22"},{"lineNumber":50,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(6, content));","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameWithSpecialCharacter_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Author fakeAuthorWithSpecialCharacter \u003d new Author(FAKE_AUTHOR_NAME.replace(\"fake\", \"#()!\"));","lastModifiedDate":"2018-12-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorWithSpecialCharacter);","lastModifiedDate":"2018-12-22"},{"lineNumber":58,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(6, content));","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFilesAuthorIgnoreMovedFile_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","lastModifiedDate":"2019-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Author ignoreMovedFileAuthor \u003d getAlphaAllAliasAuthor();","lastModifiedDate":"2018-12-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ignoreMovedFileAuthor.setIgnoreGlobList(Collections.singletonList(\"**movedFile.java\"));","lastModifiedDate":"2018-12-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreMovedFileAuthor);","lastModifiedDate":"2019-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(4, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void gitLog_authorIgnoreAllJavaFiles_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","lastModifiedDate":"2019-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Author ignoreAllJavaFilesAuthor \u003d getAlphaAllAliasAuthor();","lastModifiedDate":"2018-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ignoreAllJavaFilesAuthor.setIgnoreGlobList(Collections.singletonList(\"*.java\"));","lastModifiedDate":"2018-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreAllJavaFilesAuthor);","lastModifiedDate":"2019-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(0, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void gitLog_validIgnoreGlobs_success() {","lastModifiedDate":"2019-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();","lastModifiedDate":"2019-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"annotationTest.java\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**Test**\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(5, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"README.md\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**.java\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(1, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"./newPos\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void gitLog_invalidIgnoreGlobs_filtered() {","lastModifiedDate":"2019-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();","lastModifiedDate":"2019-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../testrepo-Alpha\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../*.java\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"/newPos\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"..\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","lastModifiedDate":"2019-04-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","lastModifiedDate":"2019-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void gitLog_authorWithAllCharactersRegexAlias_emptyResult() {","lastModifiedDate":"2018-12-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Author authorWithAllCharactersRegexAlias \u003d new Author(\"none\");","lastModifiedDate":"2018-12-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        authorWithAllCharactersRegexAlias.setAuthorAliases(Collections.singletonList(\".*\"));","lastModifiedDate":"2018-12-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, authorWithAllCharactersRegexAlias);","lastModifiedDate":"2018-12-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assert.assertTrue(content.isEmpty());","lastModifiedDate":"2018-12-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void gitLog_sinceDateInFuture_noContent() {","lastModifiedDate":"2018-12-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Date date \u003d TestUtil.getSinceDate(2050, Calendar.JANUARY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);","lastModifiedDate":"2018-12-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","lastModifiedDate":"2018-12-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assert.assertTrue(content.isEmpty());","lastModifiedDate":"2018-12-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void gitLog_untilDateBeforeAnyCommit_noContent() {","lastModifiedDate":"2019-01-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Date date \u003d TestUtil.getUntilDate(2010, Calendar.JANUARY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);","lastModifiedDate":"2018-12-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        config.setSinceDate(null);","lastModifiedDate":"2018-12-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","lastModifiedDate":"2019-01-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Assert.assertTrue(content.isEmpty());","lastModifiedDate":"2018-12-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void gitLog_emailWithAdditionOperator_success() {","lastModifiedDate":"2019-04-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");","lastModifiedDate":"2019-04-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","lastModifiedDate":"2019-04-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);","lastModifiedDate":"2019-04-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","lastModifiedDate":"2019-04-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, author);","lastModifiedDate":"2019-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(1, content));","lastModifiedDate":"2019-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-22"}],"authorContributionMap":{"-":159,"aidoxe-123":4}},{"path":"src/test/java/reposense/git/GitLsTreeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2019-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2019-07-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2020-02-22"},{"lineNumber":5,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2020-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2020-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.After;","lastModifiedDate":"2019-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2020-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Assume;","lastModifiedDate":"2019-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;","lastModifiedDate":"2020-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2019-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.exception.InvalidFilePathException;","lastModifiedDate":"2019-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2019-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2019-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2019-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","lastModifiedDate":"2019-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class GitLsTreeTest extends GitTestTemplate {","lastModifiedDate":"2019-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Method isValidWindowsFilenameMethod;","lastModifiedDate":"2020-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeClass","lastModifiedDate":"2020-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {","lastModifiedDate":"2020-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        GitTestTemplate.beforeClass();","lastModifiedDate":"2020-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        isValidWindowsFilenameMethod \u003d GitLsTree.class.getDeclaredMethod(\"isValidWindowsFilename\", String.class);","lastModifiedDate":"2020-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        isValidWindowsFilenameMethod.setAccessible(true);","lastModifiedDate":"2020-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @After","lastModifiedDate":"2019-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void after() {","lastModifiedDate":"2019-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"       // Overrides checkout master behaviour in GitTestTemplate as it throws error when run on a bare clone.","lastModifiedDate":"2019-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void isValidWindowsFilename_validFilenames_success() throws Exception {","lastModifiedDate":"2020-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems","lastModifiedDate":"2020-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());","lastModifiedDate":"2020-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e validDirectoryNames \u003d Arrays.asList(\"com10.txt\", \"folder name/file name.txt\", \".txt\");","lastModifiedDate":"2020-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (String fileName : validDirectoryNames) {","lastModifiedDate":"2020-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Assert.assertTrue((boolean) isValidWindowsFilenameMethod.invoke(null, fileName));","lastModifiedDate":"2020-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void isValidWindowsFilename_illegalFileNames_fail() throws Exception {","lastModifiedDate":"2020-02-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems","lastModifiedDate":"2020-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());","lastModifiedDate":"2020-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cString\u003e windowsReservedFilenames \u003d Arrays.asList(\"com1.txt\", \"folder/com1.txt\", \"folder/com1/file.txt\",","lastModifiedDate":"2020-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \"nul\", \"fi\\\\le.txt\", \"\\\"file\\\".txt\", \"file.txt.\", \"folder./file.txt\", \"file.txt \", \"folder /file.txt\");","lastModifiedDate":"2020-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (String fileName : windowsReservedFilenames) {","lastModifiedDate":"2020-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Assert.assertFalse((boolean) isValidWindowsFilenameMethod.invoke(null, fileName));","lastModifiedDate":"2020-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-02-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void repo_validFilePaths_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        validateFilePaths(config);","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test(expected \u003d InvalidFilePathException.class)","lastModifiedDate":"2019-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void windows_cloneInvalidWindowsFilePaths_throwsInvalidFilePathException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems","lastModifiedDate":"2019-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());","lastModifiedDate":"2019-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        config.setBranch(\"391-invalid-filepaths\");","lastModifiedDate":"2019-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        validateFilePaths(config);","lastModifiedDate":"2019-07-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void unix_cloneInvalidWindowsFilePaths_success() throws Exception {","lastModifiedDate":"2020-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Runs test only on non Windows (Unix) operating systems","lastModifiedDate":"2019-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(!SystemUtil.isWindows());","lastModifiedDate":"2019-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        config.setBranch(\"391-invalid-filepaths\");","lastModifiedDate":"2019-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        validateFilePaths(config);","lastModifiedDate":"2020-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Clones a bare repo in {@code config} and verifies that the repo contains only file paths that are","lastModifiedDate":"2019-07-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * compatible in Windows.","lastModifiedDate":"2019-07-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if it fails to create/delete the folders.","lastModifiedDate":"2019-07-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws InvalidFilePathException if the repository contains invalid file paths that are not compatible with","lastModifiedDate":"2019-07-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Windows.","lastModifiedDate":"2019-07-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-30"},{"lineNumber":89,"author":{"gitId":"FH-30"},"content":"    private void validateFilePaths(RepoConfiguration config) throws Exception {","lastModifiedDate":"2021-08-06"},{"lineNumber":90,"author":{"gitId":"chan-j-d"},"content":"        GitClone.cloneBare(config, Paths.get(\".\"), FileUtil.getBareRepoPath(config).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        GitLsTree.validateFilePaths(config, FileUtil.getBareRepoPath(config));","lastModifiedDate":"2019-07-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-04-04"}],"authorContributionMap":{"chan-j-d":2,"FH-30":1,"-":90}},{"path":"src/test/java/reposense/git/GitShortlogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2018-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-08-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2018-08-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class GitShortlogTest extends GitTestTemplate {","lastModifiedDate":"2018-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoNoDateRange_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"Eugene Peh\"));","lastModifiedDate":"2018-10-07"},{"lineNumber":20,"author":{"gitId":"FH-30"},"content":"        expectedAuthorList.add(new Author(\"FH-30\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"WANG CHAO\"));","lastModifiedDate":"2021-05-21"},{"lineNumber":22,"author":{"gitId":"chan-j-d"},"content":"        expectedAuthorList.add(new Author(\"chan-j-d\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));","lastModifiedDate":"2018-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"fakeAuthor\"));","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"harryggg\"));","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","lastModifiedDate":"2018-12-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthorList.size(), actualAuthorList.size());","lastModifiedDate":"2018-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthorList, actualAuthorList);","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateRange_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));","lastModifiedDate":"2018-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Calendar.MAY, 5));","lastModifiedDate":"2019-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Calendar.MAY, 10));","lastModifiedDate":"2019-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","lastModifiedDate":"2018-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthorList.size(), actualAuthorList.size());","lastModifiedDate":"2018-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthorList, actualAuthorList);","lastModifiedDate":"2018-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateOutOfRange_success() {","lastModifiedDate":"2018-12-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Calendar.JUNE, 1));","lastModifiedDate":"2019-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Calendar.JUNE, 20));","lastModifiedDate":"2019-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","lastModifiedDate":"2018-12-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualAuthorList.isEmpty());","lastModifiedDate":"2018-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-14"}],"authorContributionMap":{"chan-j-d":1,"FH-30":1,"-":54}},{"path":"src/test/java/reposense/git/GitUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;","lastModifiedDate":"2019-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.git.GitUtil.convertToGitExcludeGlobArgs;","lastModifiedDate":"2019-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuote;","lastModifiedDate":"2019-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2019-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2019-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2019-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2019-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;","lastModifiedDate":"2019-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class GitUtilTest extends GitTestTemplate {","lastModifiedDate":"2019-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void gitUtil_convertToGitExcludeGlobArgs_success() {","lastModifiedDate":"2019-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        File repoRoot \u003d new File(config.getRepoRoot());","lastModifiedDate":"2019-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        final String cmdFormat \u003d \" \" + addQuote(\":(exclude)%s\");","lastModifiedDate":"2019-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        final String emptyResult \u003d \"\";","lastModifiedDate":"2019-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":22,"author":{"gitId":"chan-j-d"},"content":"        String result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.emptyList());","lastModifiedDate":"2021-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyResult, result);","lastModifiedDate":"2019-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"**.js\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Assert.assertEquals(String.format(cmdFormat, \"**.js\"), result);","lastModifiedDate":"2019-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"movedFile**\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertEquals(String.format(cmdFormat, \"movedFile**\"), result);","lastModifiedDate":"2019-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"*\\\\newPos\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assert.assertEquals(String.format(cmdFormat, \"*\\\\newPos\"), result);","lastModifiedDate":"2019-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"newPos/*\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Assert.assertEquals(String.format(cmdFormat, \"newPos/*\"), result);","lastModifiedDate":"2019-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"../**\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyResult, result);","lastModifiedDate":"2019-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"\\\\**\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyResult, result);","lastModifiedDate":"2019-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        result \u003d convertToGitExcludeGlobArgs(repoRoot, Collections.singletonList(\"/newPos/*\"));","lastModifiedDate":"2019-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyResult, result);","lastModifiedDate":"2019-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-04-04"}],"authorContributionMap":{"chan-j-d":1,"-":45}},{"path":"src/test/java/reposense/model/RepoLocationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aidoxe-123"},"content":"package reposense.model;","lastModifiedDate":"2021-07-09"},{"lineNumber":2,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":3,"author":{"gitId":"aidoxe-123"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-07-09"},{"lineNumber":4,"author":{"gitId":"aidoxe-123"},"content":"import org.junit.Test;","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":6,"author":{"gitId":"aidoxe-123"},"content":"import reposense.parser.InvalidLocationException;","lastModifiedDate":"2021-07-09"},{"lineNumber":7,"author":{"gitId":"aidoxe-123"},"content":"import reposense.util.AssertUtil;","lastModifiedDate":"2021-07-09"},{"lineNumber":8,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":9,"author":{"gitId":"aidoxe-123"},"content":"public class RepoLocationTest {","lastModifiedDate":"2021-07-09"},{"lineNumber":10,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":11,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_validRepoUrl_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":12,"author":{"gitId":"aidoxe-123"},"content":"        // valid url without specifying branch","lastModifiedDate":"2021-07-09"},{"lineNumber":13,"author":{"gitId":"aidoxe-123"},"content":"        assertValidLocation(\"https://github.com/reposense/testrepo-Beta.git\",","lastModifiedDate":"2021-07-09"},{"lineNumber":14,"author":{"gitId":"aidoxe-123"},"content":"                \"testrepo-Beta\", \"reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":15,"author":{"gitId":"aidoxe-123"},"content":"        assertValidLocation(\"https://github.com/reposense/testrepo-Delta.git\",","lastModifiedDate":"2021-07-09"},{"lineNumber":16,"author":{"gitId":"aidoxe-123"},"content":"                \"testrepo-Delta\", \"reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":17,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":18,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":19,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":20,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_invalidRepoUrl_throwsInvalidLocationException() {","lastModifiedDate":"2021-07-09"},{"lineNumber":21,"author":{"gitId":"aidoxe-123"},"content":"        // ftp url should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":22,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"ftp://github.com/reposense/testrepo-Delta.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":23,"author":{"gitId":"aidoxe-123"},"content":"        // non GitHub url should rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":24,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://gitlab.com/reposense/RepoSense.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":25,"author":{"gitId":"aidoxe-123"},"content":"        // url without organisation name should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":26,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":27,"author":{"gitId":"aidoxe-123"},"content":"        // url without repo name should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":28,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":29,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":30,"author":{"gitId":"aidoxe-123"},"content":"        // url without a .git suffix should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":31,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSensegit\");","lastModifiedDate":"2021-07-09"},{"lineNumber":32,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense-git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":33,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense.gi\");","lastModifiedDate":"2021-07-09"},{"lineNumber":34,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":35,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":36,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":37,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":38,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_repoUrlWithASpecifiedBranch_throwsInvalidLocationException() {","lastModifiedDate":"2021-07-09"},{"lineNumber":39,"author":{"gitId":"aidoxe-123"},"content":"        // reject both repos with and without .git","lastModifiedDate":"2021-07-09"},{"lineNumber":40,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/testrepo-Beta/tree/add-config-json\");","lastModifiedDate":"2021-07-09"},{"lineNumber":41,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/testrepo-Beta.git/tree/add-config-json\");","lastModifiedDate":"2021-07-09"},{"lineNumber":42,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":43,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":44,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocationParser_parseEmptyString_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":46,"author":{"gitId":"aidoxe-123"},"content":"        RepoLocation repoLocation \u003d new RepoLocation(\"\");","lastModifiedDate":"2021-07-09"},{"lineNumber":47,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":48,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":49,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":50,"author":{"gitId":"aidoxe-123"},"content":"    /**","lastModifiedDate":"2021-07-09"},{"lineNumber":51,"author":{"gitId":"aidoxe-123"},"content":"     * Compares the information parsed by the RepoLocation model with the expected information","lastModifiedDate":"2021-07-09"},{"lineNumber":52,"author":{"gitId":"aidoxe-123"},"content":"     */","lastModifiedDate":"2021-07-09"},{"lineNumber":53,"author":{"gitId":"aidoxe-123"},"content":"    public void assertValidLocation(String rawLocation, String expectedRepoName,","lastModifiedDate":"2021-07-09"},{"lineNumber":54,"author":{"gitId":"aidoxe-123"},"content":"            String expectedOrganization) throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":55,"author":{"gitId":"aidoxe-123"},"content":"        RepoLocation repoLocation \u003d new RepoLocation(rawLocation);","lastModifiedDate":"2021-07-09"},{"lineNumber":56,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertEquals(repoLocation.getRepoName(), expectedRepoName);","lastModifiedDate":"2021-07-09"},{"lineNumber":57,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertEquals(repoLocation.getOrganization(), expectedOrganization);","lastModifiedDate":"2021-07-09"},{"lineNumber":58,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":59,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":60,"author":{"gitId":"aidoxe-123"},"content":"    private void assertInvalidLocation(String rawLocation) {","lastModifiedDate":"2021-07-09"},{"lineNumber":61,"author":{"gitId":"aidoxe-123"},"content":"        AssertUtil.assertThrows(InvalidLocationException.class, () -\u003e new RepoLocation(rawLocation));","lastModifiedDate":"2021-07-09"},{"lineNumber":62,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":63,"author":{"gitId":"aidoxe-123"},"content":"}","lastModifiedDate":"2021-07-09"}],"authorContributionMap":{"aidoxe-123":63}},{"path":"src/test/java/reposense/parser/ArgsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","lastModifiedDate":"2018-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","lastModifiedDate":"2018-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2020-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2018-06-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2019-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-07-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-07-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.After;","lastModifiedDate":"2019-04-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2019-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","lastModifiedDate":"2019-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.RepoSense;","lastModifiedDate":"2018-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;","lastModifiedDate":"2018-06-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","lastModifiedDate":"2019-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","lastModifiedDate":"2019-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2019-04-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","lastModifiedDate":"2019-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2020-11-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ArgsParserTest {","lastModifiedDate":"2018-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));","lastModifiedDate":"2018-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\")","lastModifiedDate":"2020-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);","lastModifiedDate":"2020-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");","lastModifiedDate":"2020-08-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"output\");","lastModifiedDate":"2020-08-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);","lastModifiedDate":"2018-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);","lastModifiedDate":"2018-06-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_CSV_FILE \u003d","lastModifiedDate":"2018-08-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);","lastModifiedDate":"2018-08-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d","lastModifiedDate":"2018-08-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);","lastModifiedDate":"2018-08-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";","lastModifiedDate":"2019-04-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TIMEZONE \u003d \"Asia/Singapore\";","lastModifiedDate":"2020-11-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d TestUtil.getZoneId(DEFAULT_TIMEZONE);","lastModifiedDate":"2020-11-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void before() {","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @After","lastModifiedDate":"2019-04-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void after() {","lastModifiedDate":"2019-04-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-04-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());","lastModifiedDate":"2019-04-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2019-04-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2019-04-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputs_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .addFormats(\"java adoc html css js\")","lastModifiedDate":"2019-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","lastModifiedDate":"2019-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2019-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2019-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2019-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test(expected \u003d HelpScreenException.class)","lastModifiedDate":"2019-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_help_throwsHelpScreenException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String input \u003d \"--help\";","lastModifiedDate":"2019-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputsAlias_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":118,"author":{"gitId":"chan-j-d"},"content":"        String input \u003d String.format(","lastModifiedDate":"2021-07-09"},{"lineNumber":119,"author":{"gitId":"chan-j-d"},"content":"                \"-c \\\"%s\\\" -o \\\"%s\\\" -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -v -t %s\",","lastModifiedDate":"2021-07-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIMEZONE);","lastModifiedDate":"2019-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2018-12-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_withExtraWhitespaces_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)","lastModifiedDate":"2019-02-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)","lastModifiedDate":"2019-02-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)","lastModifiedDate":"2019-02-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)","lastModifiedDate":"2019-02-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .addFormats(\"java   adoc  html      css js   \")","lastModifiedDate":"2019-02-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig().addWhiteSpace(1)","lastModifiedDate":"2019-02-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .addView().addWhiteSpace(4)","lastModifiedDate":"2019-02-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE).addWhiteSpace(5)","lastModifiedDate":"2019-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList(","lastModifiedDate":"2019-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2018-12-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_configFolderOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // Optional arguments have default values","lastModifiedDate":"2018-06-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());","lastModifiedDate":"2018-07-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // Optional arguments have default values","lastModifiedDate":"2018-06-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());","lastModifiedDate":"2018-07-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_viewOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE, ((ViewCliArguments) cliArguments).getReportDirectoryPath()));","lastModifiedDate":"2018-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_withIgnore_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","lastModifiedDate":"2019-02-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .add(\"-i\")","lastModifiedDate":"2019-02-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));","lastModifiedDate":"2019-01-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsWithAlias instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArgumentsWithAlias).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assert.assertEquals(cliArguments, cliArgumentsWithAlias);","lastModifiedDate":"2019-01-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parse_withoutIgnore_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Assert.assertFalse(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView().build();","lastModifiedDate":"2019-02-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), (","lastModifiedDate":"2020-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());","lastModifiedDate":"2019-01-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndOutputDirectory_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2018-07-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2018-07-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-02-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-02-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-02-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void sinceDate_correctFormat_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public void untilDate_correctFormat_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-07-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void sinceDate_withExtraDate_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\")","lastModifiedDate":"2020-11-16"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-07-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-07-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public void untilDate_withExtraTime_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\")","lastModifiedDate":"2020-11-16"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-07-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-07-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-08-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void period_inDaysWithSinceDate_success() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-08-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                .addPeriod(\"2d\")","lastModifiedDate":"2020-08-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-08-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.JULY, 2);","lastModifiedDate":"2020-08-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-08-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-08-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    public void period_inWeeksWithUntilDate_success() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-08-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                .addUntilDate(\"14/07/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .addPeriod(\"2w\")","lastModifiedDate":"2020-08-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-08-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2020-08-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-08-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    public void formats_inAlphanumeric_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-18"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));","lastModifiedDate":"2019-08-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public void numCloningThreads_default_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","lastModifiedDate":"2021-03-31"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_CLONING_THREADS;","lastModifiedDate":"2021-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public void numCloningThreads_isNumeric_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2021-03-31"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                .addNumCloningThreads(2)","lastModifiedDate":"2021-03-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        System.out.println(input);","lastModifiedDate":"2021-03-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_default_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","lastModifiedDate":"2021-03-31"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_ANALYSIS_THREADS;","lastModifiedDate":"2021-03-31"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_isNumeric_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2021-03-31"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                .addNumAnalysisThreads(2)","lastModifiedDate":"2021-03-31"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-31"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, repoConfigs.size());","lastModifiedDate":"2018-07-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-01-05"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-01-05"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-01-05"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-01-05"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-02-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-12"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-02-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-02-12"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void parse_viewWithArgCwd_returnsViewCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(new File(\".\").toPath()).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-31"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void parse_configOrLocationsSimilar_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        Assert.assertTrue(configCliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d","lastModifiedDate":"2018-07-31"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((ConfigCliArguments) configCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        Assert.assertTrue(locationCliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d","lastModifiedDate":"2018-07-31"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((LocationsCliArguments) locationCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        Assert.assertEquals(actualRepoConfigs, expectedRepoConfigs);","lastModifiedDate":"2018-07-31"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    public void emptyArgs_defaultConfigFolderPath() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});","lastModifiedDate":"2018-09-06"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-09-06"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), (","lastModifiedDate":"2020-03-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());","lastModifiedDate":"2018-09-06"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-06"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-06"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public void parse_repoAliases_sameResult() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-02"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        Assert.assertEquals(repoAliasCliArguments, reposAliasCliArguments);","lastModifiedDate":"2018-09-02"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    @Test (expected \u003d ParseException.class)","lastModifiedDate":"2020-08-12"},{"lineNumber":546,"author":{"gitId":"FH-30"},"content":"    public void parse_noValidRepoLocation_throwsParseException() throws Exception {","lastModifiedDate":"2021-08-06"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(\"https://githubaaaa.com/asdasdasdasd/RepoSense\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);","lastModifiedDate":"2020-08-12"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();","lastModifiedDate":"2019-02-19"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();","lastModifiedDate":"2019-02-19"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(relDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    public void parse_notExistsConfigFolder_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");","lastModifiedDate":"2019-02-19"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-30"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-30"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-30"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-30"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    public void parse_configCsvFileAsConfigFolder_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    public void parse_missingConfigValue_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-29"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    public void outputPath_nonExistentDirectory_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);","lastModifiedDate":"2019-04-20"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2019-02-19"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-29"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-09-29"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-09-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-09-29"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    public void sinceDate_unsupportedFormats_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    public void untilDate_unsupportedFormats_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    public void sinceDate_laterThanUntilDate_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    public void period_withBothSinceDateAndUntilDate_throwsParseException() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"18d\")","lastModifiedDate":"2020-08-02"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                .addSinceDate(\"30/11/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .addUntilDate(\"01/12/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    public void period_notNumeric_throwsParseExcpetion() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"abcd\").build();","lastModifiedDate":"2020-08-02"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    public void period_isZero_throwsParseExcpetion() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"0w\").build();","lastModifiedDate":"2020-08-02"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-18"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    public void formats_notInAlphanumeric_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-18"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-18"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-31"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                .addRepos(TEST_REPO_REPOSENSE)","lastModifiedDate":"2019-02-19"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-01-07"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    public void parse_extraArgumentForIgnore_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-03-21"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    public void parse_withTimezone_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        String zoneId \u003d \"UTC+11\";","lastModifiedDate":"2019-03-21"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2019-03-21"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC-1030\";","lastModifiedDate":"2019-03-21"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2019-03-21"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC\";","lastModifiedDate":"2020-11-16"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2020-11-16"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-03-21"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    public void parse_incorrectTimezone_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();","lastModifiedDate":"2019-03-21"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-03-21"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    public void parse_timezoneWithoutArgument_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();","lastModifiedDate":"2019-03-21"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-30"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-11-16"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    public void parse_withDatesAndTimezone_success() throws Exception {","lastModifiedDate":"2020-11-16"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC+11\")","lastModifiedDate":"2020-11-16"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        int[] expectedSinceTime \u003d {21, 0, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JUNE, 30, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        int[] expectedUntilTime \u003d {20, 59, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.NOVEMBER, 30, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":712,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC-0930\")","lastModifiedDate":"2020-11-16"},{"lineNumber":713,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":714,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{17, 30, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{17, 29, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":722,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC\")","lastModifiedDate":"2020-11-16"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{8, 0, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{7, 59, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    public void parse_shallowCloning_success() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-27"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        Assert.assertEquals(false, cliArguments.isShallowCloningPerformed());","lastModifiedDate":"2021-03-27"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        String inputShallow \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                .addShallowCloning()","lastModifiedDate":"2021-03-27"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsShallow \u003d ArgsParser.parse(translateCommandline(inputShallow));","lastModifiedDate":"2021-03-27"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsShallow instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        Assert.assertEquals(true, cliArgumentsShallow.isShallowCloningPerformed());","lastModifiedDate":"2021-03-27"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":761,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}.","lastModifiedDate":"2019-06-30"},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}.","lastModifiedDate":"2019-06-30"},{"lineNumber":763,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    private void assertDateDiffOneMonth(Date actualSinceDate, Date untilDate, ZoneId zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);","lastModifiedDate":"2020-11-21"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar","lastModifiedDate":"2020-11-16"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                .Builder()","lastModifiedDate":"2020-11-16"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                .setInstant(untilDate.getTime())","lastModifiedDate":"2020-11-16"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MONTH, -1);","lastModifiedDate":"2019-06-30"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualSinceDate.equals(cal.getTime()));","lastModifiedDate":"2020-11-16"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-30"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-30"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":782,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59 for the given","lastModifiedDate":"2020-11-16"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * {@code zoneId} time zone.","lastModifiedDate":"2020-11-16"},{"lineNumber":784,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation","lastModifiedDate":"2019-06-30"},{"lineNumber":785,"author":{"gitId":"-"},"content":"     * with time at 23:59:59.","lastModifiedDate":"2019-06-30"},{"lineNumber":786,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    private void assertDateDiffEndOfDay(Date actualUntilDate, ZoneId zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);","lastModifiedDate":"2020-11-21"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2019-06-30"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 23);","lastModifiedDate":"2019-06-30"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 59);","lastModifiedDate":"2019-06-30"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 59);","lastModifiedDate":"2019-06-30"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualUntilDate.equals(cal.getTime()));","lastModifiedDate":"2020-11-16"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":799,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-09"}],"authorContributionMap":{"chan-j-d":2,"FH-30":1,"-":796}},{"path":"src/test/java/reposense/parser/AuthorConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","lastModifiedDate":"2020-01-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2020-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2020-01-18"},{"lineNumber":6,"author":{"gitId":"chan-j-d"},"content":"import java.util.AbstractMap.SimpleEntry;","lastModifiedDate":"2021-08-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2020-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2020-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2020-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2020-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2020-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2020-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2020-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2020-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2020-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;","lastModifiedDate":"2020-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2020-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AuthorConfigParserTest {","lastModifiedDate":"2020-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_LOCATION_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_emptyLocation_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_CONFIG_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/require_trailing_whitespaces/authorconfig_emptyConfig_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_noSpecialCharacter_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_specialCharacter_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_commasAndDoubleQuotes_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleEmails_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_INVALID_LOCATION \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2020-08-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_invalidLocation_test.csv\");","lastModifiedDate":"2020-08-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_differentColumnOrder_test.csv\");","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingOptionalHeader_test.csv\");","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_MANDATORY_HEADER \u003d loadResource(AuthorConfigParserTest.class,","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingMandatoryHeader_test.csv\");","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";","lastModifiedDate":"2020-01-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_MASTER_BRANCH \u003d \"master\";","lastModifiedDate":"2020-01-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"nbriannl\");","lastModifiedDate":"2020-01-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"zacharytang\");","lastModifiedDate":"2020-01-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Arrays.asList(FIRST_AUTHOR, SECOND_AUTHOR);","lastModifiedDate":"2020-01-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Author FIRST_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"‘Processed�‘Cooked�\");","lastModifiedDate":"2020-01-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final Author SECOND_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"(codeeong)\");","lastModifiedDate":"2020-01-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Author THIRD_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"^:jordancjq;$\");","lastModifiedDate":"2020-01-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS \u003d Arrays.asList(","lastModifiedDate":"2020-01-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            FIRST_SPECIAL_CHARACTER_AUTHOR, SECOND_SPECIAL_CHARACTER_AUTHOR, THIRD_SPECIAL_CHARACTER_AUTHOR);","lastModifiedDate":"2020-01-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Author FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"ProcessedCooked\");","lastModifiedDate":"2020-01-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Author SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"codeeong\");","lastModifiedDate":"2020-01-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final Author THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"jordancjq\");","lastModifiedDate":"2020-01-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"Tay Fan Gao, Douya\";","lastModifiedDate":"2020-01-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"\\\"\\\"Tora, S/O,\\\" Doyua, T.\\\"\";","lastModifiedDate":"2020-01-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"jordancjq\";","lastModifiedDate":"2020-01-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Collections.singletonList(\"Tay Fan Gao, Douya \\\"SOC, Y2S1\\\"\");","lastModifiedDate":"2020-01-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d Collections.emptyList();","lastModifiedDate":"2020-01-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Arrays.asList(\"Borex T\\\"ony Tong\");","lastModifiedDate":"2020-01-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, List\u003cString\u003e\u003e AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":69,"author":{"gitId":"chan-j-d"},"content":"            Stream.of(new SimpleEntry\u003c\u003e(FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR, FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS),","lastModifiedDate":"2021-08-06"},{"lineNumber":70,"author":{"gitId":"chan-j-d"},"content":"                    new SimpleEntry\u003c\u003e(SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR, SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS),","lastModifiedDate":"2021-08-06"},{"lineNumber":71,"author":{"gitId":"chan-j-d"},"content":"                    new SimpleEntry\u003c\u003e(THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS))","lastModifiedDate":"2021-08-06"},{"lineNumber":72,"author":{"gitId":"chan-j-d"},"content":"                    .collect(Collectors.toMap(entry -\u003e entry.getKey(), entry -\u003e entry.getValue()));","lastModifiedDate":"2021-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, String\u003e AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":74,"author":{"gitId":"chan-j-d"},"content":"            Stream.of(new SimpleEntry\u003c\u003e(FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR,","lastModifiedDate":"2021-08-06"},{"lineNumber":75,"author":{"gitId":"chan-j-d"},"content":"                            FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME),","lastModifiedDate":"2021-08-06"},{"lineNumber":76,"author":{"gitId":"chan-j-d"},"content":"                    new SimpleEntry\u003c\u003e(SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR,","lastModifiedDate":"2021-08-06"},{"lineNumber":77,"author":{"gitId":"chan-j-d"},"content":"                            SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME),","lastModifiedDate":"2021-08-06"},{"lineNumber":78,"author":{"gitId":"chan-j-d"},"content":"                    new SimpleEntry\u003c\u003e(THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME))","lastModifiedDate":"2021-08-06"},{"lineNumber":79,"author":{"gitId":"chan-j-d"},"content":"                    .collect(Collectors.toMap(entry -\u003e entry.getKey(), entry -\u003e entry.getValue()));","lastModifiedDate":"2021-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_EMAIL_LIST \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Arrays.asList(\"nbr@example.com\", \"nbriannl@test.net\", \"nbriannl@users.noreply.github.com\");","lastModifiedDate":"2020-01-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void authorConfig_noSpecialCharacter_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());","lastModifiedDate":"2020-01-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());","lastModifiedDate":"2020-01-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());","lastModifiedDate":"2020-01-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void authorConfig_emptyLocation_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AuthorConfiguration expectedConfig \u003d new AuthorConfiguration(new RepoLocation(\"\"));","lastModifiedDate":"2020-01-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_LOCATION_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AuthorConfiguration authorConfig \u003d authorConfigs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, authorConfigs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getLocation(), authorConfig.getLocation());","lastModifiedDate":"2020-01-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getBranch(), authorConfig.getBranch());","lastModifiedDate":"2020-01-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, authorConfig.getAuthorList());","lastModifiedDate":"2020-01-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test (expected \u003d InvalidCsvException.class)","lastModifiedDate":"2020-02-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void authorConfig_emptyConfig_throwsInvalidCsvException() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_CONFIG_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void authorConfig_specialCharacter_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());","lastModifiedDate":"2020-01-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());","lastModifiedDate":"2020-01-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());","lastModifiedDate":"2020-01-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void authorConfig_multipleEmails_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Author actualAuthor \u003d config.getAuthorList().get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FIRST_AUTHOR_EMAIL_LIST.size(), actualAuthor.getEmails().size());","lastModifiedDate":"2020-01-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualAuthor.getEmails().containsAll(FIRST_AUTHOR_EMAIL_LIST));","lastModifiedDate":"2020-01-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void authorConfig_invalidLocation_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_INVALID_LOCATION);","lastModifiedDate":"2020-01-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Assert.assertEquals(3, config.getAuthorList().size());","lastModifiedDate":"2020-01-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void authorConfig_differentColumnOrder_success() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER);","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void authorConfig_missingOptionalHeader_success() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Assert.assertEquals(4, config.getAuthorList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test (expected \u003d InvalidCsvException.class)","lastModifiedDate":"2020-02-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void authorConfig_missingMandatoryHeader_throwsInvalidCsvException() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_MANDATORY_HEADER);","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-01-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parse_multipleColumnsWithCommasAndDoubleQuotes_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d","lastModifiedDate":"2020-01-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE);","lastModifiedDate":"2020-01-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();","lastModifiedDate":"2020-01-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());","lastModifiedDate":"2020-01-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);","lastModifiedDate":"2020-01-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());","lastModifiedDate":"2020-01-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());","lastModifiedDate":"2020-01-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP, config.getAuthorDisplayNameMap());","lastModifiedDate":"2020-01-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-01-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.size(), config.getAuthorList().size());","lastModifiedDate":"2020-01-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        config.getAuthorList().forEach(author -\u003e {","lastModifiedDate":"2020-01-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            Assert.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.get(author), author.getAuthorAliases());","lastModifiedDate":"2020-01-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2020-01-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-01-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-01-18"}],"authorContributionMap":{"chan-j-d":11,"-":203}},{"path":"src/test/java/reposense/report/RepoClonerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;","lastModifiedDate":"2019-05-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":3,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2019-05-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2019-05-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":10,"author":{"gitId":"chan-j-d"},"content":"import reposense.git.GitClone;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2019-05-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2019-05-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class RepoClonerTest {","lastModifiedDate":"2019-05-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_EMPTY_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Empty.git\";","lastModifiedDate":"2019-05-16"},{"lineNumber":18,"author":{"gitId":"chan-j-d"},"content":"    private static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String OUTPUT_PATH \u003d \"repocloner_test\";","lastModifiedDate":"2019-05-16"},{"lineNumber":20,"author":{"gitId":"chan-j-d"},"content":"    private static final Path REPOCLONE_LOCAL_TEST_PATH \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"chan-j-d"},"content":"            Paths.get(FileUtil.REPOS_ADDRESS, \"repoclone test/dummy-repo\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-05-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void repoCloner_emptyRepo_failsGracefully() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyRepositoryRepoConfig \u003d","lastModifiedDate":"2019-05-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_EMPTY_GIT_LOCATION));","lastModifiedDate":"2019-05-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","lastModifiedDate":"2019-05-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(emptyRepositoryRepoConfig);","lastModifiedDate":"2019-08-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();","lastModifiedDate":"2019-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-05-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assert.assertNull(clonedRepoLocation);","lastModifiedDate":"2019-05-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-05-16"},{"lineNumber":34,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"chan-j-d"},"content":"    public void repoCloner_validRepoLocationWithRelativePathingAndSpaces_success() throws Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"chan-j-d"},"content":"        // Clones a test repository into the test directory for testing of relative pathing","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"chan-j-d"},"content":"        RepoConfiguration tempRemoteConfiguration \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION));","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"chan-j-d"},"content":"        GitClone.cloneBare(tempRemoteConfiguration, Paths.get(\".\"), REPOCLONE_LOCAL_TEST_PATH.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"chan-j-d"},"content":"        RepoConfiguration repoWithRelativePathingAndSpacesAndEndingBackslash \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"chan-j-d"},"content":"                new RepoConfiguration(new RepoLocation(REPOCLONE_LOCAL_TEST_PATH.toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"chan-j-d"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"        repoCloner.cloneBare(repoWithRelativePathingAndSpacesAndEndingBackslash);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertTrue(Files.exists(REPOCLONE_LOCAL_TEST_PATH));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-05-16"}],"authorContributionMap":{"chan-j-d":21,"-":26}},{"path":"src/test/java/reposense/template/GitTestTemplate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.template;","lastModifiedDate":"2018-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-04-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-07-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-07-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-04-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2020-11-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.After;","lastModifiedDate":"2018-05-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2018-05-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;","lastModifiedDate":"2018-05-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoAnalyzer;","lastModifiedDate":"2018-06-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoExtractor;","lastModifiedDate":"2018-06-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;","lastModifiedDate":"2018-06-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;","lastModifiedDate":"2018-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;","lastModifiedDate":"2018-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-06-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","lastModifiedDate":"2018-12-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","lastModifiedDate":"2019-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-06-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","lastModifiedDate":"2018-12-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains templates for git testing.","lastModifiedDate":"2019-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class GitTestTemplate {","lastModifiedDate":"2018-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";","lastModifiedDate":"2018-07-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    protected static final String DISK_REPO_DISPLAY_NAME \u003d \"testrepo-Alpha_master\";","lastModifiedDate":"2018-07-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";","lastModifiedDate":"2018-07-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    protected static final String ROOT_COMMIT_HASH \u003d \"fd425072e12004b71d733a58d819d845509f8db3\";","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";","lastModifiedDate":"2018-07-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_PARENT \u003d \"c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151\";","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";","lastModifiedDate":"2018-07-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";","lastModifiedDate":"2018-07-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";","lastModifiedDate":"2018-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";","lastModifiedDate":"2019-01-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";","lastModifiedDate":"2019-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";","lastModifiedDate":"2020-01-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected static final String JAMES_ALTERNATIVE_AUTHOR_NAME \u003d \"James Pang\";","lastModifiedDate":"2020-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";","lastModifiedDate":"2019-07-22"},{"lineNumber":45,"author":{"gitId":"FH-30"},"content":"    protected static final String LATEST_COMMIT_HASH \u003d \"af6087ebc0c689a9dcf3de0c3b2eb13ff47775d5\";","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"FH-30"},"content":"    protected static final String LATEST_COMMIT_HASH_PARENT \u003d \"5fdb7b10c2107fdeaff7fcc512fcec41eacc381e\";","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";","lastModifiedDate":"2020-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";","lastModifiedDate":"2018-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);","lastModifiedDate":"2018-12-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";","lastModifiedDate":"2018-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);","lastModifiedDate":"2018-12-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";","lastModifiedDate":"2018-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);","lastModifiedDate":"2018-12-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING \u003d","lastModifiedDate":"2020-11-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \"7d7584fc204922cc5ff3bd5ca073cad6bed2c46a\";","lastModifiedDate":"2020-11-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING \u003d","lastModifiedDate":"2020-11-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";","lastModifiedDate":"2020-11-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING \u003d","lastModifiedDate":"2020-11-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \"8e4ca1da5d413e9ab84a1e8d1474918afa97f7a1\";","lastModifiedDate":"2020-11-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING \u003d","lastModifiedDate":"2020-11-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";","lastModifiedDate":"2020-11-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018 \u003d Arrays.asList(","lastModifiedDate":"2020-11-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING),","lastModifiedDate":"2020-11-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING),","lastModifiedDate":"2020-11-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING),","lastModifiedDate":"2020-11-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING));","lastModifiedDate":"2020-11-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";","lastModifiedDate":"2018-08-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    protected static final String TIME_ZONE_ID_STRING \u003d \"Asia/Singapore\";","lastModifiedDate":"2020-11-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected static final Author MAIN_AUTHOR \u003d new Author(MAIN_AUTHOR_NAME);","lastModifiedDate":"2021-04-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected static final Author FAKE_AUTHOR \u003d new Author(FAKE_AUTHOR_NAME);","lastModifiedDate":"2021-04-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected static RepoConfiguration config;","lastModifiedDate":"2018-07-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2018-02-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");","lastModifiedDate":"2018-12-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));","lastModifiedDate":"2018-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);","lastModifiedDate":"2019-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        config.setIsLastModifiedDateIncluded(false);","lastModifiedDate":"2020-11-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @BeforeClass","lastModifiedDate":"2018-02-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {","lastModifiedDate":"2020-02-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");","lastModifiedDate":"2018-12-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID_STRING);","lastModifiedDate":"2020-11-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        GitClone.clone(config);","lastModifiedDate":"2018-12-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @After","lastModifiedDate":"2018-02-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void after() {","lastModifiedDate":"2018-02-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), \"master\");","lastModifiedDate":"2018-12-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Generates the information for test file.","lastModifiedDate":"2019-04-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public FileInfo generateTestFileInfo(String relativePath) {","lastModifiedDate":"2018-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), relativePath);","lastModifiedDate":"2018-07-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));","lastModifiedDate":"2020-12-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return fileInfo;","lastModifiedDate":"2018-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {","lastModifiedDate":"2018-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        FileInfo fileinfo \u003d generateTestFileInfo(relativePath);","lastModifiedDate":"2018-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return FileInfoAnalyzer.analyzeTextFile(config, fileinfo);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * For each line in {@code FileResult}, assert that it is attributed to the expected author provided by","lastModifiedDate":"2021-04-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code expectedLineAuthors}.","lastModifiedDate":"2021-04-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void assertFileAnalysisCorrectness(FileResult fileResult, List\u003cAuthor\u003e expectedLineAuthors) {","lastModifiedDate":"2021-04-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lines \u003d fileResult.getLines();","lastModifiedDate":"2021-04-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedLineAuthors.size(), lines.size());","lastModifiedDate":"2021-04-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Iterator\u003cAuthor\u003e lineAuthorsItr \u003d expectedLineAuthors.iterator();","lastModifiedDate":"2021-04-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Iterator\u003cLineInfo\u003e linesItr \u003d lines.iterator();","lastModifiedDate":"2021-04-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        while (linesItr.hasNext() \u0026\u0026 lineAuthorsItr.hasNext()) {","lastModifiedDate":"2021-04-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            assertEquals(lineAuthorsItr.next(), linesItr.next().getAuthor());","lastModifiedDate":"2021-04-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-02-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits","lastModifiedDate":"2018-07-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * will be filtered out in the `git log` command.","lastModifiedDate":"2018-07-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    protected Author getAlphaAllAliasAuthor() {","lastModifiedDate":"2018-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MAIN_AUTHOR_NAME);","lastModifiedDate":"2018-07-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));","lastModifiedDate":"2019-01-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return author;","lastModifiedDate":"2018-07-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-02-07"}],"authorContributionMap":{"FH-30":2,"-":142}},{"path":"src/test/java/reposense/util/InputBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2019-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","lastModifiedDate":"2019-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building command line input.","lastModifiedDate":"2019-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2019-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code String input \u003d new InputBuilder().addSinceDate(\"27/01/2017\").build();}","lastModifiedDate":"2019-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class InputBuilder {","lastModifiedDate":"2019-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2019-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private StringBuilder input;","lastModifiedDate":"2019-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public InputBuilder() {","lastModifiedDate":"2019-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.input \u003d new StringBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the {@code input} generated from this {@code InputBuilder}","lastModifiedDate":"2019-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String build() {","lastModifiedDate":"2019-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return input.toString();","lastModifiedDate":"2019-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Add a help flag to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public InputBuilder addHelp() {","lastModifiedDate":"2019-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.HELP_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Adds the config flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param path The config folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public InputBuilder addConfig(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.CONFIG_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds the repo flag with the {@code paths} as arguments to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param paths The repo paths.","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public InputBuilder addRepos(String... paths) {","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.REPO_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (String path : paths) {","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"chan-j-d"},"content":"            input.append(addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the view flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param path The view folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public InputBuilder addView(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the view flag only to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public InputBuilder addView() {","lastModifiedDate":"2019-02-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds the output flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param path The output folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public InputBuilder addOutput(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":89,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.OUTPUT_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the since flag with the {@code date} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param date The since date.","lastModifiedDate":"2019-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public InputBuilder addSinceDate(String date) {","lastModifiedDate":"2019-02-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SINCE_FLAGS[0] + WHITESPACE + date + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Adds the until flag with the {@code date} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param date The until date.","lastModifiedDate":"2019-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public InputBuilder addUntilDate(String date) {","lastModifiedDate":"2019-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.UNTIL_FLAGS[0] + WHITESPACE + date + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-08-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Adds the period flag with the {@code period} as argument to the input.","lastModifiedDate":"2020-08-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2020-08-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-08-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @param period The period.","lastModifiedDate":"2020-08-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-08-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public InputBuilder addPeriod(String period) {","lastModifiedDate":"2020-08-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.PERIOD_FLAGS[0] + WHITESPACE + period + WHITESPACE);","lastModifiedDate":"2020-08-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2020-08-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Adds the format flag with the {@code formats} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param formats The formats that need to be evaluated.","lastModifiedDate":"2019-02-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public InputBuilder addFormats(String formats) {","lastModifiedDate":"2019-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.FORMAT_FLAGS[0] + WHITESPACE + formats + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Adds the ignoreStandaloneConfig flag to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public InputBuilder addIgnoreStandaloneConfig() {","lastModifiedDate":"2019-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.IGNORE_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds the timezone flag with the {@code zoneId} as argument to the input.","lastModifiedDate":"2019-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public InputBuilder addTimezone(String zoneId) {","lastModifiedDate":"2019-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.TIMEZONE_FLAGS[0] + WHITESPACE + zoneId + WHITESPACE);","lastModifiedDate":"2019-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-03-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Adds the cloning threads flag with the {@code threads} as argument to the input.","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for cloning.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public InputBuilder addNumCloningThreads(int threads) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.CLONING_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Adds the analysis threads flag with the {@code threads} as argument to the input.","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for analysis.","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public InputBuilder addNumAnalysisThreads(int threads) {","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.ANALYSIS_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Adds the flag to enable shallow cloning.","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public InputBuilder addShallowCloning() {","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SHALLOW_CLONING_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Adds {@code content} to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public InputBuilder add(String content) {","lastModifiedDate":"2019-02-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        input.append(content + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Adds {@code num} of white spaces to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @param num The number of white spaces to add.","lastModifiedDate":"2019-02-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public InputBuilder addWhiteSpace(int num) {","lastModifiedDate":"2019-02-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c num; i++) {","lastModifiedDate":"2019-02-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            input.append(WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Clears all input and flags given.","lastModifiedDate":"2019-02-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public InputBuilder reset() {","lastModifiedDate":"2019-02-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        input \u003d new StringBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":213,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":214,"author":{"gitId":"chan-j-d"},"content":"    private static String addQuotationMarksToPath(String path) {","lastModifiedDate":"2021-07-09"},{"lineNumber":215,"author":{"gitId":"chan-j-d"},"content":"        return \u0027\"\u0027 + path + \u0027\"\u0027;","lastModifiedDate":"2021-07-09"},{"lineNumber":216,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":217,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":218,"author":{"gitId":"chan-j-d"},"content":"    private static String addQuotationMarksToPath(Path path) {","lastModifiedDate":"2021-07-09"},{"lineNumber":219,"author":{"gitId":"chan-j-d"},"content":"        return addQuotationMarksToPath(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":220,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":221,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-19"}],"authorContributionMap":{"chan-j-d":13,"-":209}},{"path":"src/test/java/reposense/util/StringsUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2018-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2020-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringsUtilTest {","lastModifiedDate":"2018-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final Path STRINGS_UTIL_TEST_DIRECTORY \u003d loadResource(FileUtilTest.class, \"StringsUtilTest\");","lastModifiedDate":"2020-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void filterText_standardInput_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Path gitBlameStandardOutputFile \u003d","lastModifiedDate":"2018-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                Paths.get(STRINGS_UTIL_TEST_DIRECTORY.toString(), \"standardBlameOutput.txt\");","lastModifiedDate":"2018-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(gitBlameStandardOutputFile);","lastModifiedDate":"2018-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String text \u003d String.join(\"\\n\", lines);","lastModifiedDate":"2018-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String expected \u003d \"a79711ed676fd3a27af2f466be6d5b48177580e0 4 4\\n\"","lastModifiedDate":"2018-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"author example\\n\";","lastModifiedDate":"2018-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String filteredText \u003d StringsUtil.filterText(text, \"(^author .*)|(^[0-9a-f]{40} .*)\");","lastModifiedDate":"2018-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expected, filteredText);","lastModifiedDate":"2018-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void replaceSpecialSymbols_noSpecialSymbols_noChange() {","lastModifiedDate":"2018-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String noSpecialSymbolString \u003d \"Just A Normal String\";","lastModifiedDate":"2018-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");","lastModifiedDate":"2018-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assert.assertEquals(noSpecialSymbolString, convertedString);","lastModifiedDate":"2018-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void replaceSpecialSymbols_stringWithSpecialSymbolsToPeriod_success() {","lastModifiedDate":"2018-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String noSpecialSymbolString \u003d \"($t^!ng W!th $pec!@l Symbols)\";","lastModifiedDate":"2018-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");","lastModifiedDate":"2018-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedConvertedString \u003d \"..t..ng W.th .pec..l Symbols.\";","lastModifiedDate":"2018-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConvertedString, convertedString);","lastModifiedDate":"2018-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-27"},{"lineNumber":48,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"chan-j-d"},"content":"    public void removeTrailingBackslash_stringWithMultipleTrailingBackslash_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"chan-j-d"},"content":"        String multipleTrailingBackslashString \u003d \"abc\\\\cde\\\\\\\\\\\\\";","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"        String expectedString \u003d \"abc\\\\cde\";","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"chan-j-d"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(multipleTrailingBackslashString);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(expectedString, actualString);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"chan-j-d"},"content":"    public void removeTrailingBackslash_stringWithNoTrailingBackslash_noChange() {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"chan-j-d"},"content":"        String multipleTrailingBackslashString \u003d \"abc\\\\cde\";","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"chan-j-d"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(multipleTrailingBackslashString);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(multipleTrailingBackslashString, actualString);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"chan-j-d"},"content":"    public void removeTrailingBackslash_emptyString_noChange() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"chan-j-d"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"chan-j-d"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(emptyString);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(emptyString, actualString);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-09-01"}],"authorContributionMap":{"chan-j-d":25,"-":48}},{"path":"src/test/java/reposense/util/TestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2018-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":3,"author":{"gitId":"chan-j-d"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-07-09"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"import java.net.URL;","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-05-31"},{"lineNumber":7,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-07-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2019-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-07-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2019-07-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.TimeZone;","lastModifiedDate":"2020-11-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-07-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-08-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;","lastModifiedDate":"2019-07-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-08-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains testing related functionalities.","lastModifiedDate":"2019-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2018-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int[] END_OF_DAY_TIME \u003d {23, 59, 59};","lastModifiedDate":"2019-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final int[] START_OF_DAY_TIME \u003d {0, 0, 0};","lastModifiedDate":"2019-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d getZoneId(\"Asia/Singapore\");","lastModifiedDate":"2020-11-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPARING_FILES \u003d \"Comparing files %s \u0026 %s\\n\";","lastModifiedDate":"2018-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_CONTENT_DIFFERENT \u003d \"Content different at line number %d:\\n\"","lastModifiedDate":"2018-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"\u003c\u003c %s\\n\"","lastModifiedDate":"2018-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"\u003e\u003e %s\\n\";","lastModifiedDate":"2018-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINES_LENGTH_DIFFERENT \u003d \"The files\u0027 lines count do not match.\";","lastModifiedDate":"2018-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";","lastModifiedDate":"2020-04-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";","lastModifiedDate":"2020-04-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;","lastModifiedDate":"2020-04-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same.","lastModifiedDate":"2018-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,","lastModifiedDate":"2018-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * else prints out the first line of content difference (if any).","lastModifiedDate":"2018-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-05-24"},{"lineNumber":46,"author":{"gitId":"FH-30"},"content":"    public static boolean compareFileContents(Path expected, Path actual) throws Exception {","lastModifiedDate":"2021-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return compareFileContents(expected, actual, 1);","lastModifiedDate":"2018-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same.","lastModifiedDate":"2018-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,","lastModifiedDate":"2018-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * else prints out maximum {@code maxTraceCounts} lines of content difference (if any).","lastModifiedDate":"2018-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-05-24"},{"lineNumber":55,"author":{"gitId":"FH-30"},"content":"    public static boolean compareFileContents(Path expected, Path actual, int maxTraceCounts) throws Exception {","lastModifiedDate":"2021-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        int traceCounts \u003d 0;","lastModifiedDate":"2018-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        System.out.println(String.format(MESSAGE_COMPARING_FILES, expected, actual));","lastModifiedDate":"2018-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String[] expectedContent \u003d new String(Files.readAllBytes(expected))","lastModifiedDate":"2018-05-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","lastModifiedDate":"2018-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String[] actualContent \u003d new String(Files.readAllBytes(actual))","lastModifiedDate":"2018-05-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","lastModifiedDate":"2018-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c Math.min(expectedContent.length, actualContent.length); i++) {","lastModifiedDate":"2018-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (!expectedContent[i].equals(actualContent[i])) {","lastModifiedDate":"2018-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                System.out.println(","lastModifiedDate":"2018-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_LINE_CONTENT_DIFFERENT, i + 1, expectedContent[i], actualContent[i]));","lastModifiedDate":"2018-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                if (++traceCounts \u003e\u003d maxTraceCounts) {","lastModifiedDate":"2018-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2018-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (expectedContent.length !\u003d actualContent.length) {","lastModifiedDate":"2018-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            System.out.println(MESSAGE_LINES_LENGTH_DIFFERENT);","lastModifiedDate":"2018-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } else if (traceCounts \u003e\u003d maxTraceCounts) {","lastModifiedDate":"2018-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if {@code expected} directory has all files with same content as {@code actual} directory.","lastModifiedDate":"2018-07-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-15"},{"lineNumber":86,"author":{"gitId":"FH-30"},"content":"    public static boolean compareDirectories(Path expected, Path actual) throws Exception {","lastModifiedDate":"2021-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e expectedPaths \u003d Files.walk(expected)","lastModifiedDate":"2018-07-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .sorted()","lastModifiedDate":"2018-07-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-07-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e actualPaths \u003d Files.walk(actual)","lastModifiedDate":"2018-07-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .sorted()","lastModifiedDate":"2018-07-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-07-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (expectedPaths.size() !\u003d actualPaths.size()) {","lastModifiedDate":"2018-07-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-07-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedPaths.size(); i++) {","lastModifiedDate":"2018-07-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            if (!(Files.isDirectory(expectedPaths.get(i)) || Files.isDirectory(actualPaths.get(i)))","lastModifiedDate":"2018-07-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !TestUtil.compareFileContents(expectedPaths.get(i), actualPaths.get(i))) {","lastModifiedDate":"2018-07-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2018-07-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-07-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day}.","lastModifiedDate":"2018-06-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Date getDate(int year, int month, int date, int[] time) {","lastModifiedDate":"2020-11-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2020-11-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        cal.setTimeZone(TimeZone.getTimeZone(TIME_ZONE_ID));","lastModifiedDate":"2020-11-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);","lastModifiedDate":"2020-11-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);","lastModifiedDate":"2020-11-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);","lastModifiedDate":"2020-11-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);","lastModifiedDate":"2020-11-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);","lastModifiedDate":"2020-11-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);","lastModifiedDate":"2020-11-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2020-11-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2020-11-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get since date with time 00:00:00","lastModifiedDate":"2019-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Date getSinceDate(int year, int month, int date) {","lastModifiedDate":"2019-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, START_OF_DAY_TIME);","lastModifiedDate":"2019-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get until date with time 23:59:59","lastModifiedDate":"2019-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Date getUntilDate(int year, int month, int date) {","lastModifiedDate":"2019-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, END_OF_DAY_TIME);","lastModifiedDate":"2019-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day} that is not","lastModifiedDate":"2021-04-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * dependent on the time zone of the current system, in cases where adjusting for the time zone is not necessary.","lastModifiedDate":"2021-04-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Date getLocalDate(int year, int month, int date, int[] time) {","lastModifiedDate":"2021-04-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2021-04-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);","lastModifiedDate":"2021-04-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);","lastModifiedDate":"2021-04-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);","lastModifiedDate":"2021-04-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);","lastModifiedDate":"2021-04-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);","lastModifiedDate":"2021-04-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);","lastModifiedDate":"2021-04-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2021-04-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2021-04-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get since date with time 00:00:00","lastModifiedDate":"2021-04-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Date getLocalSinceDate(int year, int month, int date) {","lastModifiedDate":"2021-04-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, START_OF_DAY_TIME);","lastModifiedDate":"2021-04-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get until date with time 23:59:59","lastModifiedDate":"2021-04-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static Date getLocalUntilDate(int year, int month, int date) {","lastModifiedDate":"2021-04-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, END_OF_DAY_TIME);","lastModifiedDate":"2021-04-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns a {@code ZoneId} object for the specified {@code timezone}.","lastModifiedDate":"2020-11-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static ZoneId getZoneId(String timezone) {","lastModifiedDate":"2020-11-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return ZoneId.of(timezone);","lastModifiedDate":"2020-11-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedRepoConfig} and {@code actualRepoConfig}.","lastModifiedDate":"2018-08-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check.","lastModifiedDate":"2018-08-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static void compareRepoConfig(RepoConfiguration expectedRepoConfig, RepoConfiguration actualRepoConfig) {","lastModifiedDate":"2018-08-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedRepoConfig, actualRepoConfig);","lastModifiedDate":"2019-02-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedRepoConfig.getAuthorList().size(); i++) {","lastModifiedDate":"2018-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            compareAuthor(expectedRepoConfig.getAuthorList().get(i), actualRepoConfig.getAuthorList().get(i));","lastModifiedDate":"2018-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-10-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedAuthor} and {@code actualAuthor}, with exception of it\u0027s display name.","lastModifiedDate":"2018-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * The display name is not compared as it varies with object construction.","lastModifiedDate":"2018-10-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * It is a transient value and it is not needed for object matching.","lastModifiedDate":"2018-10-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check.","lastModifiedDate":"2018-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static void compareAuthor(Author expectedAuthor, Author actualAuthor) {","lastModifiedDate":"2018-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getGitId(), actualAuthor.getGitId());","lastModifiedDate":"2018-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getIgnoreGlobList(), actualAuthor.getIgnoreGlobList());","lastModifiedDate":"2018-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getAuthorAliases(), actualAuthor.getAuthorAliases());","lastModifiedDate":"2018-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberCommits} is equal to the expected number of commits captured in","lastModifiedDate":"2019-07-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}.","lastModifiedDate":"2018-08-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public static boolean compareNumberExpectedCommitsToGitLogLines(int expectedNumberCommits, String gitLogResult) {","lastModifiedDate":"2018-08-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no commits","lastModifiedDate":"2018-08-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {","lastModifiedDate":"2018-08-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return expectedNumberCommits \u003d\u003d 0;","lastModifiedDate":"2018-08-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // (actualSplitGitLogResilt - 1) as the 1st token is always empty.","lastModifiedDate":"2019-07-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return expectedNumberCommits \u003d\u003d (gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER).length - 1);","lastModifiedDate":"2019-07-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberFilesChanged} is equal to the actual number of files changed in","lastModifiedDate":"2019-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}.","lastModifiedDate":"2019-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public static boolean compareNumberFilesChanged(int expectedNumberFilesChanged, String gitLogResult) {","lastModifiedDate":"2019-04-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no files changed","lastModifiedDate":"2019-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {","lastModifiedDate":"2019-04-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return expectedNumberFilesChanged \u003d\u003d 0;","lastModifiedDate":"2019-04-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String[] changesLogged \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);","lastModifiedDate":"2019-07-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        HashSet\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2019-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // start from index 1 as index 0 is always empty.","lastModifiedDate":"2019-07-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c changesLogged.length; i++) {","lastModifiedDate":"2019-07-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            filesChanged.addAll(getFilesChangedInCommit(changesLogged[i]));","lastModifiedDate":"2019-07-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return filesChanged.size() \u003d\u003d expectedNumberFilesChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Returns the {@code set} of files changed in the commit {@code rawCommitInfo}.","lastModifiedDate":"2019-07-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private static Set\u003cString\u003e getFilesChangedInCommit(String rawCommitInfo) {","lastModifiedDate":"2019-07-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2019-07-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String[] commitInfo \u003d rawCommitInfo.replaceAll(\"\\n+$\", \"\").split(\"\\n\");","lastModifiedDate":"2019-07-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        int fileChangedNum \u003d Integer.parseInt(commitInfo[commitInfo.length - 1].trim().split(\" \")[0]);","lastModifiedDate":"2019-07-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        for (int fileNum \u003d 0; fileNum \u003c fileChangedNum; fileNum++) {","lastModifiedDate":"2019-07-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            filesChanged.add(getFileChanged(commitInfo[commitInfo.length - 2 - fileNum]));","lastModifiedDate":"2019-07-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return filesChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Returns the file changed given a {@code rawFileChangedString}.","lastModifiedDate":"2019-07-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private static String getFileChanged(String rawFileChangedString) {","lastModifiedDate":"2019-07-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String fileChanged \u003d rawFileChangedString.split(TAB_SPLITTER)[STAT_FILE_PATH_INDEX].trim();","lastModifiedDate":"2020-04-17"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        if (fileChanged.contains(MOVED_FILE_INDICATION)) {","lastModifiedDate":"2020-04-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            fileChanged \u003d fileChanged.substring(fileChanged.indexOf(MOVED_FILE_INDICATION)","lastModifiedDate":"2020-04-17"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    + MOVED_FILE_INDICATION.length());","lastModifiedDate":"2020-04-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return fileChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-10-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Returns true if the test environment is on Windows OS.","lastModifiedDate":"2018-10-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-10-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public static boolean isWindows() {","lastModifiedDate":"2018-10-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");","lastModifiedDate":"2018-10-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-08-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Returns the path to a resource","lastModifiedDate":"2020-08-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-08-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public static Path loadResource(Class classForLoading, String pathToResource) {","lastModifiedDate":"2020-08-09"},{"lineNumber":270,"author":{"gitId":"chan-j-d"},"content":"        ClassLoader classLoader \u003d classForLoading.getClassLoader();","lastModifiedDate":"2021-07-09"},{"lineNumber":271,"author":{"gitId":"chan-j-d"},"content":"        URL url \u003d classLoader.getResource(pathToResource);","lastModifiedDate":"2021-07-09"},{"lineNumber":272,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d null;","lastModifiedDate":"2021-07-09"},{"lineNumber":273,"author":{"gitId":"chan-j-d"},"content":"        try {","lastModifiedDate":"2021-07-09"},{"lineNumber":274,"author":{"gitId":"chan-j-d"},"content":"            path \u003d Paths.get(url.toURI());","lastModifiedDate":"2021-07-09"},{"lineNumber":275,"author":{"gitId":"chan-j-d"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2021-07-09"},{"lineNumber":276,"author":{"gitId":"chan-j-d"},"content":"            System.out.println(\"URL format does not follow required standard\");","lastModifiedDate":"2021-07-09"},{"lineNumber":277,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-07-09"},{"lineNumber":278,"author":{"gitId":"chan-j-d"},"content":"        return path;","lastModifiedDate":"2021-07-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-05-24"}],"authorContributionMap":{"chan-j-d":12,"FH-30":3,"-":265}},{"path":"src/test/java/reposense/util/TestUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chan-j-d"},"content":"package reposense.util;","lastModifiedDate":"2021-07-09"},{"lineNumber":2,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":3,"author":{"gitId":"chan-j-d"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2021-07-09"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"chan-j-d"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-07-09"},{"lineNumber":6,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-07-09"},{"lineNumber":7,"author":{"gitId":"chan-j-d"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-07-09"},{"lineNumber":8,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":9,"author":{"gitId":"chan-j-d"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-07-09"},{"lineNumber":10,"author":{"gitId":"chan-j-d"},"content":"import org.junit.Test;","lastModifiedDate":"2021-07-09"},{"lineNumber":11,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":12,"author":{"gitId":"chan-j-d"},"content":"public class TestUtilTest {","lastModifiedDate":"2021-07-09"},{"lineNumber":13,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":14,"author":{"gitId":"chan-j-d"},"content":"    private static final String EXPECTED_FILE_CONTENTS \u003d \"1\";","lastModifiedDate":"2021-07-09"},{"lineNumber":15,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":16,"author":{"gitId":"chan-j-d"},"content":"    private static final String DIRECTORY_NAME \u003d \"TestUtilTest\";","lastModifiedDate":"2021-07-09"},{"lineNumber":17,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_NO_SPECIAL_CHAR_TEST \u003d DIRECTORY_NAME + \"/test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":18,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_PLUS_TEST \u003d DIRECTORY_NAME + \"/plus+test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":19,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_SPACE_TEST \u003d DIRECTORY_NAME + \"/space test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":20,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_SYMBOLS_TEST \u003d DIRECTORY_NAME + \"/symbols +-,.;\u0027[]{}~`!@#$%^\u0026()_-+\u003dtest.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":21,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":22,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":23,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":24,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithNoSpecialCharacters_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":25,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_NO_SPECIAL_CHAR_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":26,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":27,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":28,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":29,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":30,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":31,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":32,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithSpace_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":33,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_SPACE_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":34,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":35,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":36,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":37,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":38,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":39,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":40,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithPlus_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":41,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_PLUS_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":42,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":43,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":46,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":47,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":48,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithManySymbols_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":49,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_SYMBOLS_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":50,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":51,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":53,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":54,"author":{"gitId":"chan-j-d"},"content":"}","lastModifiedDate":"2021-07-09"}],"authorContributionMap":{"chan-j-d":54}},{"path":"src/test/java/reposense/util/TimeUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2021-04-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-04-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-04-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2021-04-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-04-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2021-04-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TimeUtilTest {","lastModifiedDate":"2021-04-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-20"},{"lineNumber":12,"author":{"gitId":"FH-30"},"content":"    public void extractDate_validDate_success() {","lastModifiedDate":"2021-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String expectedDate \u003d \"20/05/2019\";","lastModifiedDate":"2021-04-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String actualDate \u003d TimeUtil.extractDate(expectedDate);","lastModifiedDate":"2021-04-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedDate, actualDate);","lastModifiedDate":"2021-04-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-20"},{"lineNumber":19,"author":{"gitId":"FH-30"},"content":"    public void extractDate_validDateAndTime_success() {","lastModifiedDate":"2021-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String originalDateAndTime \u003d \"20/05/2020 12:34:56\";","lastModifiedDate":"2021-04-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String expectedDate \u003d \"20/05/2020\";","lastModifiedDate":"2021-04-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String actualDate \u003d TimeUtil.extractDate(originalDateAndTime);","lastModifiedDate":"2021-04-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedDate, actualDate);","lastModifiedDate":"2021-04-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parseDate_validDateAndTime_success() throws Exception {","lastModifiedDate":"2021-04-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String originalDateAndTime \u003d \"20/05/2020 00:00:00\";","lastModifiedDate":"2021-04-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Date expectedDate \u003d TestUtil.getLocalSinceDate(2020, Calendar.MAY, 20);","lastModifiedDate":"2021-04-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Date actualDate \u003d TimeUtil.parseDate(originalDateAndTime);","lastModifiedDate":"2021-04-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedDate, actualDate);","lastModifiedDate":"2021-04-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test (expected \u003d ParseException.class)","lastModifiedDate":"2021-04-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseDate_invalidDate_throwsParseException() throws Exception {","lastModifiedDate":"2021-04-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        TimeUtil.parseDate(\"31/02/2020 00:00:00\");","lastModifiedDate":"2021-04-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test (expected \u003d ParseException.class)","lastModifiedDate":"2021-04-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseDate_invalidTime_throwsParseException() throws Exception {","lastModifiedDate":"2021-04-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TimeUtil.parseDate(\"20/05/2020 23:69:70\");","lastModifiedDate":"2021-04-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-20"}],"authorContributionMap":{"FH-30":2,"-":41}},{"path":"src/test/resources/StandaloneConfigJsonParserTest/standaloneConfig_full.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"**.adoc\", \"collate**\"],","lastModifiedDate":"2018-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\t\"formats\": [\"gradle\", \"jade\", \"java\", \"js\", \"md\", \"scss\", \"yml\"],","lastModifiedDate":"2018-10-14"},{"lineNumber":4,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"7b96c563eb2d3612aa5275364333664a18f01491\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"FH-30"},"content":"\t\"ignoreAuthorsList\": [\"yong24s\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"yong24s\",","lastModifiedDate":"2018-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Yong Hao\",","lastModifiedDate":"2018-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Yong Hao TENG\"],","lastModifiedDate":"2018-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**.css\", \"**.html\", \"**.jade\", \"**.js\"]","lastModifiedDate":"2018-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-10-14"}],"authorContributionMap":{"FH-30":2,"-":13}},{"path":"src/test/resources/StandaloneConfigTest/authors_trailingCommas_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-12-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lithiumlkid\",","lastModifiedDate":"2018-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Ahm\",","lastModifiedDate":"2018-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Ahmad Syafiq\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"*.aa1\", \"**.aa2\", \"**.java\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"codeeong\",","lastModifiedDate":"2018-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Cod\",","lastModifiedDate":"2018-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Codee\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**[!(.md)]\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jordancjq\",","lastModifiedDate":"2018-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jor\",","lastModifiedDate":"2018-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jordan Chong\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lohtianwei\",","lastModifiedDate":"2018-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Loh\",","lastModifiedDate":"2018-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Tianwei\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-18"}],"authorContributionMap":{"FH-30":1,"-":29}},{"path":"src/test/resources/StandaloneConfigTest/invalidIgnoreCommit_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-08-19"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc \u0026\u0026 echo Hi user\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lithiumlkid\",","lastModifiedDate":"2018-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Ahm\",","lastModifiedDate":"2018-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Ahmad Syafiq\"],","lastModifiedDate":"2018-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"*.aa1\", \"**.aa2\", \"**.java\"]","lastModifiedDate":"2018-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"codeeong\",","lastModifiedDate":"2018-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Cod\",","lastModifiedDate":"2018-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Codee\"],","lastModifiedDate":"2018-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**[!(.md)]\"]","lastModifiedDate":"2018-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jordancjq\",","lastModifiedDate":"2018-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jor\",","lastModifiedDate":"2018-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jordan Chong\"],","lastModifiedDate":"2018-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"\"]","lastModifiedDate":"2018-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lohtianwei\",","lastModifiedDate":"2018-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Loh\",","lastModifiedDate":"2018-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Tianwei\"]","lastModifiedDate":"2018-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-19"}],"authorContributionMap":{"FH-30":1,"-":29}},{"path":"src/test/resources/StandaloneConfigTest/lithiumlkid_invalidIgnoreGlob_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-08-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lithiumlkid\",","lastModifiedDate":"2018-08-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Ahm\",","lastModifiedDate":"2018-08-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Ahmad Syafiq\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"*.aa1\", \"\u0026\u0026 echo test\", \"**.java\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"codeeong\",","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Cod\",","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Codee\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**[!(.md)]\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jordancjq\",","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jor\",","lastModifiedDate":"2018-08-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jordan Chong\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lohtianwei\",","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Loh\",","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Tianwei\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-06"}],"authorContributionMap":{"FH-30":1,"-":29}},{"path":"src/test/resources/StandaloneConfigTest/lithiumlkid_trailingCommas_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-12-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lithiumlkid\",","lastModifiedDate":"2018-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Ahm\",","lastModifiedDate":"2018-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Ahmad Syafiq\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"*.aa1\", \"**.aa2\", \"**.java\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"codeeong\",","lastModifiedDate":"2018-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Cod\",","lastModifiedDate":"2018-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Codee\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**[!(.md)]\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jordancjq\",","lastModifiedDate":"2018-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jor\",","lastModifiedDate":"2018-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jordan Chong\"],","lastModifiedDate":"2018-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lohtianwei\",","lastModifiedDate":"2018-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Loh\",","lastModifiedDate":"2018-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Tianwei\"]","lastModifiedDate":"2018-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-18"}],"authorContributionMap":{"FH-30":1,"-":29}},{"path":"src/test/resources/StandaloneConfigTest/specialCharacterAuthor_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-09-27"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"‘Processed�‘Cooked�\",","lastModifiedDate":"2018-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"‘Processed�‘Cooked�\",","lastModifiedDate":"2018-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"‘Processed�‘Cooked�\"]","lastModifiedDate":"2018-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"(codeeong)\",","lastModifiedDate":"2018-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"(codeeong)\",","lastModifiedDate":"2018-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"(codeeong)\"]","lastModifiedDate":"2018-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"^:jordancjq;$\",","lastModifiedDate":"2018-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"^:jordancjq;$\",","lastModifiedDate":"2018-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"^:jordancjq;$\"]","lastModifiedDate":"2018-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-09-27"}],"authorContributionMap":{"FH-30":1,"-":21}},{"path":"src/test/resources/StandaloneConfigTest/valid_config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"collated**\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":3,"author":{"gitId":"FH-30"},"content":"\t\"ignoreCommitsList\": [\"12345abc\", \"67890def\"],","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"authors\":","lastModifiedDate":"2018-08-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t[","lastModifiedDate":"2018-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lithiumlkid\",","lastModifiedDate":"2018-08-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Ahm\",","lastModifiedDate":"2018-08-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Ahmad Syafiq\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"*.aa1\", \"**.aa2\", \"**.java\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"codeeong\",","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Cod\",","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Codee\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**[!(.md)]\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"jordancjq\",","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jor\",","lastModifiedDate":"2018-08-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jordan Chong\"],","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t},","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t{","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"lohtianwei\",","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Loh\",","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Tianwei\"]","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t}","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t]","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-06"}],"authorContributionMap":{"FH-30":1,"-":29}}]
