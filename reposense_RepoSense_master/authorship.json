[{"path":"src/main/java/reposense/model/RepoConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-06-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2018-07-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-05-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-05-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-05-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-05-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2019-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;","lastModifiedDate":"2019-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","lastModifiedDate":"2019-05-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","lastModifiedDate":"2018-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2018-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents configuration information from CSV config file for a single repository.","lastModifiedDate":"2019-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class RepoConfiguration {","lastModifiedDate":"2017-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";","lastModifiedDate":"2018-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);","lastModifiedDate":"2018-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private RepoLocation location;","lastModifiedDate":"2018-12-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String displayName;","lastModifiedDate":"2018-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient String zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient Date sinceDate;","lastModifiedDate":"2019-04-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private transient Date untilDate;","lastModifiedDate":"2019-04-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient String repoFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private transient FileTypeManager fileTypeManager;","lastModifiedDate":"2019-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-07-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoredAuthorsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2019-12-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private transient AuthorConfiguration authorConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private transient boolean isStandaloneConfigIgnored;","lastModifiedDate":"2018-08-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private transient List\u003cCommitHash\u003e ignoreCommitList;","lastModifiedDate":"2018-12-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private transient boolean isLastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private transient boolean isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private transient boolean isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredAuthorsListOverriding \u003d false;","lastModifiedDate":"2019-12-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location) {","lastModifiedDate":"2018-12-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);","lastModifiedDate":"2018-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch) {","lastModifiedDate":"2018-12-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(location, branch, Collections.emptyList(), Collections.emptyList(), false, Collections.emptyList(),","lastModifiedDate":"2019-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                false, false, false, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, List\u003cFileType\u003e formats, List\u003cString\u003e ignoreGlobList,","lastModifiedDate":"2019-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding,","lastModifiedDate":"2019-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            boolean isIgnoreGlobListOverriding, boolean isIgnoreCommitListOverriding,","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d new AuthorConfiguration(location, branch);","lastModifiedDate":"2019-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2018-07-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;","lastModifiedDate":"2019-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","lastModifiedDate":"2018-08-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","lastModifiedDate":"2018-08-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.fileTypeManager \u003d new FileTypeManager(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isFormatsOverriding \u003d isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String organization \u003d location.getOrganization();","lastModifiedDate":"2018-12-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String repoName \u003d location.getRepoName();","lastModifiedDate":"2018-12-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        displayName \u003d repoName + \"[\" + branch + \"]\";","lastModifiedDate":"2019-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        outputFolderName \u003d repoName + \"_\" + branch;","lastModifiedDate":"2019-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        repoFolderName \u003d repoName;","lastModifiedDate":"2019-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (organization !\u003d null) {","lastModifiedDate":"2018-12-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            repoFolderName \u003d organization + \"_\" + repoFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            displayName \u003d organization + \"/\" + displayName;","lastModifiedDate":"2019-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            outputFolderName \u003d organization + \"_\" + outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void setDatesToRepoConfigs(List\u003cRepoConfiguration\u003e configs, Date sinceDate, Date untilDate) {","lastModifiedDate":"2019-06-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2018-06-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            config.setSinceDate(sinceDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            config.setUntilDate(untilDate);","lastModifiedDate":"2019-06-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void setZoneIdToRepoConfigs(List\u003cRepoConfiguration\u003e configs, String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2020-11-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            config.setZoneId(zoneId);","lastModifiedDate":"2020-11-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void setIsLastModifiedDateIncludedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","lastModifiedDate":"2020-11-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                                  boolean isLastModifiedDateIncluded) {","lastModifiedDate":"2020-11-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2020-11-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            config.setIsLastModifiedDateIncluded(isLastModifiedDateIncluded);","lastModifiedDate":"2020-11-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-11-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void setIsShallowCloningPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                                                 boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsShallowCloningPerformed(true));","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Merges a {@code RepoConfiguration} from {@code repoConfigs} with an {@code AuthorConfiguration} from","lastModifiedDate":"2019-02-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code authorConfigs} if their {@code RepoLocation} and branch matches","lastModifiedDate":"2019-02-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : authorConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().isEmpty()) {","lastModifiedDate":"2019-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                for (RepoConfiguration repoConfig : repoConfigs) {","lastModifiedDate":"2019-12-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    repoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-12-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-01-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-01-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e locationMatchingRepoConfigs \u003d","lastModifiedDate":"2019-12-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    getMatchingRepoConfigsByLocation(repoConfigs, authorConfig.getLocation());","lastModifiedDate":"2019-12-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (locationMatchingRepoConfigs.isEmpty()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","lastModifiedDate":"2018-08-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\",","lastModifiedDate":"2019-12-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                        authorConfig.getLocation()));","lastModifiedDate":"2019-12-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2018-08-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            if (authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                locationMatchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","lastModifiedDate":"2019-12-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    matchingRepoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2019-12-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-12-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            RepoConfiguration branchMatchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);","lastModifiedDate":"2019-12-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (branchMatchingRepoConfig \u003d\u003d null) {","lastModifiedDate":"2019-12-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (!authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(","lastModifiedDate":"2019-12-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                            \"Repository %s (branch %s) is not found in repo-config.csv.\",","lastModifiedDate":"2019-12-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                            authorConfig.getLocation(), authorConfig.getBranch()));","lastModifiedDate":"2019-12-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-08-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-12-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            branchMatchingRepoConfig.addAuthors(authorConfig.getAuthorList());","lastModifiedDate":"2019-12-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the list of groups in {@code groupConfigs} to the respective {@code repoConfigs}.","lastModifiedDate":"2019-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void setGroupConfigsToRepos(List\u003cRepoConfiguration\u003e repoConfigs,","lastModifiedDate":"2019-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            List\u003cGroupConfiguration\u003e groupConfigs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (GroupConfiguration groupConfig : groupConfigs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e matchingRepoConfigs;","lastModifiedDate":"2019-12-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (groupConfig.getLocation().isEmpty()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d repoConfigs;","lastModifiedDate":"2019-12-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2019-12-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d getMatchingRepoConfigsByLocation(repoConfigs,","lastModifiedDate":"2019-12-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        groupConfig.getLocation());","lastModifiedDate":"2019-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-12-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (matchingRepoConfigs.isEmpty()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","lastModifiedDate":"2019-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\", groupConfig.getLocation()));","lastModifiedDate":"2019-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2019-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            matchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","lastModifiedDate":"2019-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                matchingRepoConfig.addGroups(groupConfig.getGroupsList());","lastModifiedDate":"2019-12-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2019-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Iterates through {@code repoConfigs} to find a {@code RepoConfiguration} with {@code RepoLocation} and branch","lastModifiedDate":"2019-02-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * that matches {@code authorConfig}. Returns {@code null} if no match is found.","lastModifiedDate":"2019-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private static RepoConfiguration getMatchingRepoConfig(","lastModifiedDate":"2019-02-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e repoConfigs, AuthorConfiguration authorConfig) {","lastModifiedDate":"2019-02-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (authorConfig.isDefaultBranch()) {","lastModifiedDate":"2019-12-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2019-12-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        for (RepoConfiguration repoConfig : repoConfigs) {","lastModifiedDate":"2019-02-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (repoConfig.getLocation().equals(authorConfig.getLocation())","lastModifiedDate":"2019-02-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {","lastModifiedDate":"2019-02-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                return repoConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-02-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2019-02-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns a list of {@link RepoConfiguration} where the {@link RepoLocation} matches {@code targetRepoLocation}.","lastModifiedDate":"2019-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private static List\u003cRepoConfiguration\u003e getMatchingRepoConfigsByLocation(","lastModifiedDate":"2019-12-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, RepoLocation targetRepoLocation) {","lastModifiedDate":"2019-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return configs.stream().filter(config -\u003e config.getLocation().equals(targetRepoLocation))","lastModifiedDate":"2019-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2019-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Sets {@code formats} to {@code RepoConfiguration} in {@code configs} if its format list is empty.","lastModifiedDate":"2018-08-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFileType\u003e formats) {","lastModifiedDate":"2019-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","lastModifiedDate":"2019-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (!config.fileTypeManager.hasSpecifiedFormats()) {","lastModifiedDate":"2019-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                config.fileTypeManager.setFormats(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-01-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Sets each {@code RepoConfiguration} in {@code configs} to ignore its standalone config, if","lastModifiedDate":"2019-12-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * {@code ignoreAllStandaloneConfigs} is true.","lastModifiedDate":"2019-12-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-01-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public static void setStandaloneConfigIgnoredToRepoConfigs(","lastModifiedDate":"2019-01-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, boolean ignoreAllStandaloneConfigs) {","lastModifiedDate":"2019-12-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (ignoreAllStandaloneConfigs) {","lastModifiedDate":"2019-12-20"},{"lineNumber":224,"author":{"gitId":"litone01"},"content":"            configs.forEach(config -\u003e config.setStandaloneConfigIgnored(true));","lastModifiedDate":"2021-07-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Clears existing information related to this repository and its authors, and replaces it with information from the","lastModifiedDate":"2020-08-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * {@code standaloneConfig}.","lastModifiedDate":"2020-08-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig) {","lastModifiedDate":"2018-07-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations.","lastModifiedDate":"2019-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e replacementFileTypes \u003d FileType.convertFormatStringsToFileTypes(standaloneConfig.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());","lastModifiedDate":"2019-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (!isIgnoreGlobListOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();","lastModifiedDate":"2019-02-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (!isFormatsOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            fileTypeManager.setFormats(replacementFileTypes);","lastModifiedDate":"2019-08-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (!isIgnoreCommitListOverriding) {","lastModifiedDate":"2019-03-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());","lastModifiedDate":"2018-12-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!isIgnoredAuthorsListOverriding) {","lastModifiedDate":"2019-12-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            ignoredAuthorsList \u003d standaloneConfig.getIgnoreAuthorList();","lastModifiedDate":"2019-12-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-12-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        authorConfig.update(standaloneConfig, ignoreGlobList);","lastModifiedDate":"2019-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@code Author} given a name and an email.","lastModifiedDate":"2019-04-03"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned.","lastModifiedDate":"2019-04-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {","lastModifiedDate":"2019-04-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthor(name, email);","lastModifiedDate":"2019-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Updates branch with {@code currentBranch} if default branch is specified.","lastModifiedDate":"2019-03-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void updateBranch(String currentBranch) {","lastModifiedDate":"2019-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","lastModifiedDate":"2019-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","lastModifiedDate":"2019-03-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Gets the current branch and updates branch with current branch if default branch is specified.","lastModifiedDate":"2019-03-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void updateBranch() throws GitBranchException {","lastModifiedDate":"2019-05-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","lastModifiedDate":"2019-03-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());","lastModifiedDate":"2019-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","lastModifiedDate":"2019-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-09-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Gets the path to the root folder of the repository.","lastModifiedDate":"2019-09-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-09-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public String getRepoRoot() {","lastModifiedDate":"2018-07-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;","lastModifiedDate":"2019-03-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (!getRepoName().isEmpty()) {","lastModifiedDate":"2018-12-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            path +\u003d getRepoName() + File.separator;","lastModifiedDate":"2018-12-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return path;","lastModifiedDate":"2018-07-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-09-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Gets the name of the folder containing the cloned repository; the parent directory of the repo\u0027s root folder.","lastModifiedDate":"2019-09-16"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-09-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public String getRepoFolderName() {","lastModifiedDate":"2019-03-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return repoFolderName;","lastModifiedDate":"2019-03-16"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-06-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-06-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-06-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-06-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoConfiguration)) {","lastModifiedDate":"2018-06-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-06-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-06-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;","lastModifiedDate":"2019-02-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return location.equals(otherRepoConfig.location)","lastModifiedDate":"2019-02-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherRepoConfig.branch)","lastModifiedDate":"2019-02-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)","lastModifiedDate":"2019-02-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)","lastModifiedDate":"2019-02-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoredAuthorsList.equals(otherRepoConfig.ignoredAuthorsList)","lastModifiedDate":"2019-12-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored","lastModifiedDate":"2019-02-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypeManager.equals(otherRepoConfig.fileTypeManager)","lastModifiedDate":"2019-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \u0026\u0026 isLastModifiedDateIncluded \u003d\u003d otherRepoConfig.isLastModifiedDateIncluded","lastModifiedDate":"2020-11-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding","lastModifiedDate":"2019-03-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u0026\u0026 isShallowCloningPerformed \u003d\u003d otherRepoConfig.isShallowCloningPerformed","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding","lastModifiedDate":"2019-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding","lastModifiedDate":"2019-12-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredAuthorsListOverriding \u003d\u003d otherRepoConfig.isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {","lastModifiedDate":"2018-01-03"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDisplayNameMap();","lastModifiedDate":"2019-02-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-03"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {","lastModifiedDate":"2018-01-03"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);","lastModifiedDate":"2019-02-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public String getBranch() {","lastModifiedDate":"2017-07-10"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {","lastModifiedDate":"2017-07-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        updateDisplayName(branch);","lastModifiedDate":"2018-10-21"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        updateOutputFolderName(branch);","lastModifiedDate":"2019-07-20"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;","lastModifiedDate":"2017-07-10"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        authorConfig.setBranch(branch);","lastModifiedDate":"2019-02-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-17"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code displayName} to the","lastModifiedDate":"2020-12-17"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * current {@code branch}.","lastModifiedDate":"2020-12-17"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-17"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public void updateDisplayName(String branch) {","lastModifiedDate":"2018-10-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027[\u0027) + 1) + branch + \"]\";","lastModifiedDate":"2019-07-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-20"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-12-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code outputFolderName} to the","lastModifiedDate":"2020-12-17"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * current {@code branch}.","lastModifiedDate":"2020-12-17"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-12-17"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public void updateOutputFolderName(String branch) {","lastModifiedDate":"2019-07-20"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        this.outputFolderName \u003d outputFolderName.substring(0, outputFolderName.lastIndexOf(\u0027_\u0027) + 1) + branch;","lastModifiedDate":"2019-07-20"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-21"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","lastModifiedDate":"2018-07-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return ignoreGlobList;","lastModifiedDate":"2018-07-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-20"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {","lastModifiedDate":"2018-07-24"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","lastModifiedDate":"2018-07-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-20"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-11"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e getIgnoreCommitList() {","lastModifiedDate":"2018-12-30"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        return ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {","lastModifiedDate":"2018-12-30"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","lastModifiedDate":"2018-08-19"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoredAuthorsList() {","lastModifiedDate":"2019-12-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return this.ignoredAuthorsList;","lastModifiedDate":"2019-12-27"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    public void setIgnoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {","lastModifiedDate":"2019-12-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;","lastModifiedDate":"2019-12-27"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    public boolean isIgnoredAuthorsListOverriding() {","lastModifiedDate":"2019-12-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return this.isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    public void setIsLastModifiedDateIncluded(boolean lastModifiedDateIncluded) {","lastModifiedDate":"2020-11-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        this.isLastModifiedDateIncluded \u003d lastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    public void setIsShallowCloningPerformed(boolean isShallowCloningPerformed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public boolean isLastModifiedDateIncluded() {","lastModifiedDate":"2020-11-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return this.isLastModifiedDateIncluded;","lastModifiedDate":"2020-11-21"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-21"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        return this.isShallowCloningPerformed;","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void setIsIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {","lastModifiedDate":"2019-12-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;","lastModifiedDate":"2019-12-27"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors() {","lastModifiedDate":"2019-12-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        authorConfig.removeIgnoredAuthors(ignoredAuthorsList);","lastModifiedDate":"2019-12-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {","lastModifiedDate":"2017-09-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorList();","lastModifiedDate":"2019-02-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {","lastModifiedDate":"2018-08-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        authorConfig.addAuthor(author, this.getIgnoreGlobList());","lastModifiedDate":"2019-02-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList) {","lastModifiedDate":"2019-01-19"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());","lastModifiedDate":"2019-02-05"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {","lastModifiedDate":"2019-02-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d authorConfig;","lastModifiedDate":"2019-02-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        for (Author author : authorConfig.getAuthorList()) {","lastModifiedDate":"2019-02-05"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);","lastModifiedDate":"2019-02-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-01-19"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {","lastModifiedDate":"2018-08-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        return authorConfig.containsAuthor(author);","lastModifiedDate":"2019-02-05"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-02"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-01-19"},{"lineNumber":438,"author":{"gitId":"-"},"content":"     * Clears authors information and sets the {@code authorList} to {@code RepoConfiguration}.","lastModifiedDate":"2019-01-19"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-01-19"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {","lastModifiedDate":"2017-09-11"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        authorConfig.clear();","lastModifiedDate":"2020-08-10"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorList(authorList);","lastModifiedDate":"2019-02-05"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        authorConfig.buildFromAuthorList();","lastModifiedDate":"2020-08-10"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        authorList.forEach(author -\u003e AuthorConfiguration.propagateIgnoreGlobList(author, this.getIgnoreGlobList()));","lastModifiedDate":"2019-12-27"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-11"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-17"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorDetailsToAuthorMap() {","lastModifiedDate":"2020-12-14"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDetailsToAuthorMap();","lastModifiedDate":"2020-12-14"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-17"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-17"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public void setAuthorDetailsToAuthorMap(Map\u003cString, Author\u003e authorDetailsToAuthorMap) {","lastModifiedDate":"2020-12-14"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDetailsToAuthorMap(authorDetailsToAuthorMap);","lastModifiedDate":"2020-12-14"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-17"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {","lastModifiedDate":"2019-08-18"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        fileTypeManager.setFormats(formats);","lastModifiedDate":"2019-08-18"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    private void setGroups(List\u003cFileType\u003e groups) {","lastModifiedDate":"2019-08-18"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        fileTypeManager.setGroups(groups);","lastModifiedDate":"2019-08-18"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public void addGroups(List\u003cFileType\u003e groups) {","lastModifiedDate":"2019-12-25"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        fileTypeManager.addGroups(groups);","lastModifiedDate":"2019-12-25"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-12-25"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-12-25"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-18"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     * Returns all format or group types (depending on whether the user has specified a custom grouping).","lastModifiedDate":"2019-08-18"},{"lineNumber":469,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-18"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {","lastModifiedDate":"2019-08-18"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        return fileTypeManager.getAllFileTypes();","lastModifiedDate":"2019-08-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {","lastModifiedDate":"2019-08-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return fileTypeManager.getFileType(fileName);","lastModifiedDate":"2019-08-18"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public FileTypeManager getFileTypeManager() {","lastModifiedDate":"2019-08-18"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        return fileTypeManager;","lastModifiedDate":"2019-08-18"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-18"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-18"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    public Date getSinceDate() {","lastModifiedDate":"2018-06-18"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        return sinceDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    public void setSinceDate(Date sinceDate) {","lastModifiedDate":"2018-06-18"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    public Date getUntilDate() {","lastModifiedDate":"2018-06-18"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        return untilDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-20"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public void setUntilDate(Date untilDate) {","lastModifiedDate":"2018-06-18"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;","lastModifiedDate":"2018-06-18"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-20"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-25"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public String getZoneId() {","lastModifiedDate":"2020-11-16"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        return zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void setZoneId(String zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {","lastModifiedDate":"2018-06-18"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayName(author, displayName);","lastModifiedDate":"2019-02-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-18"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void addAuthorDetailsToAuthorMapEntry(Author author, List\u003cString\u003e values) {","lastModifiedDate":"2020-12-14"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorDetailsToAuthorMapEntry(author, values);","lastModifiedDate":"2020-12-14"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-18"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    public String getDisplayName() {","lastModifiedDate":"2018-07-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        return displayName;","lastModifiedDate":"2018-07-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public String getRepoName() {","lastModifiedDate":"2018-07-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return location.getRepoName();","lastModifiedDate":"2018-12-30"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    public String getOutputFolderName() {","lastModifiedDate":"2019-07-20"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return outputFolderName;","lastModifiedDate":"2019-07-20"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-20"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-20"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {","lastModifiedDate":"2019-01-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","lastModifiedDate":"2019-01-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {","lastModifiedDate":"2018-12-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2018-12-30"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    public String getOrganization() {","lastModifiedDate":"2018-12-30"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return location.getOrganization();","lastModifiedDate":"2018-12-30"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-29"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-29"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {","lastModifiedDate":"2018-12-30"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;","lastModifiedDate":"2018-12-30"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public boolean isFormatsOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        return isFormatsOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public boolean isIgnoreGlobListOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        return isIgnoreGlobListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-27"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    public boolean isIgnoreCommitListOverriding() {","lastModifiedDate":"2019-03-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        return isIgnoreCommitListOverriding;","lastModifiedDate":"2019-03-27"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-10"}],"authorContributionMap":{"-":552,"litone01":1}},{"path":"src/main/java/reposense/model/RepoLocation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","lastModifiedDate":"2018-12-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-12-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-12-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-12-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2018-12-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2018-12-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidLocationException;","lastModifiedDate":"2018-12-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;","lastModifiedDate":"2021-05-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-12-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a repository location.","lastModifiedDate":"2018-12-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-12-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RepoLocation {","lastModifiedDate":"2018-12-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String GIT_LINK_SUFFIX \u003d \".git\";","lastModifiedDate":"2018-12-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_LOCATION \u003d \"%s is an invalid location.\";","lastModifiedDate":"2021-05-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Pattern GIT_REPOSITORY_LOCATION_PATTERN \u003d","lastModifiedDate":"2018-12-30"},{"lineNumber":20,"author":{"gitId":"aidoxe-123"},"content":"            Pattern.compile(\"^https?://github.com/(?\u003corg\u003e.+?)/(?\u003crepoName\u003e.+?)\\\\.git$\");","lastModifiedDate":"2021-07-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String location;","lastModifiedDate":"2018-12-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String repoName;","lastModifiedDate":"2018-12-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private String organization;","lastModifiedDate":"2018-12-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if {@code location} cannot be represented by a {@code URL} or {@code Path}.","lastModifiedDate":"2018-12-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public RepoLocation(String location) throws InvalidLocationException {","lastModifiedDate":"2018-12-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        verifyLocation(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2018-12-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d GIT_REPOSITORY_LOCATION_PATTERN.matcher(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2018-12-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            organization \u003d matcher.group(\"org\");","lastModifiedDate":"2018-12-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            repoName \u003d matcher.group(\"repoName\");","lastModifiedDate":"2018-12-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-12-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            repoName \u003d Paths.get(location).getFileName().toString().replace(GIT_LINK_SUFFIX, \"\");","lastModifiedDate":"2018-12-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2019-01-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return location.isEmpty();","lastModifiedDate":"2019-01-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getRepoName() {","lastModifiedDate":"2018-12-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return repoName;","lastModifiedDate":"2018-12-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getOrganization() {","lastModifiedDate":"2018-12-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return organization;","lastModifiedDate":"2018-12-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Verifies {@code location} can be presented as a {@code URL} or {@code Path}.","lastModifiedDate":"2018-12-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if otherwise.","lastModifiedDate":"2018-12-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void verifyLocation(String location) throws InvalidLocationException {","lastModifiedDate":"2018-12-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        boolean isValidPathLocation \u003d false;","lastModifiedDate":"2018-12-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        boolean isValidGitUrl \u003d false;","lastModifiedDate":"2018-12-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Path pathLocation \u003d Paths.get(location);","lastModifiedDate":"2018-12-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            isValidPathLocation \u003d Files.exists(pathLocation);","lastModifiedDate":"2018-12-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-12-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            // Ignore exception","lastModifiedDate":"2018-12-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d GIT_REPOSITORY_LOCATION_PATTERN.matcher(location);","lastModifiedDate":"2020-12-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        isValidGitUrl \u003d matcher.matches();","lastModifiedDate":"2020-12-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!isValidPathLocation \u0026\u0026 !isValidGitUrl) {","lastModifiedDate":"2018-12-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            ErrorSummary.getInstance().addErrorMessage(location, String.format(MESSAGE_INVALID_LOCATION, location));","lastModifiedDate":"2021-05-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new InvalidLocationException(String.format(MESSAGE_INVALID_LOCATION, location));","lastModifiedDate":"2021-05-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2018-12-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2018-12-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2018-12-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2018-12-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles null","lastModifiedDate":"2018-12-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoLocation)) {","lastModifiedDate":"2018-12-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        RepoLocation otherLocation \u003d (RepoLocation) other;","lastModifiedDate":"2018-12-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this.location.equals(otherLocation.location);","lastModifiedDate":"2018-12-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return location.hashCode();","lastModifiedDate":"2018-12-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-30"}],"authorContributionMap":{"-":102,"aidoxe-123":1}},{"path":"src/test/java/reposense/model/RepoLocationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aidoxe-123"},"content":"package reposense.model;","lastModifiedDate":"2021-07-09"},{"lineNumber":2,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":3,"author":{"gitId":"aidoxe-123"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-07-09"},{"lineNumber":4,"author":{"gitId":"aidoxe-123"},"content":"import org.junit.Test;","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":6,"author":{"gitId":"aidoxe-123"},"content":"import reposense.parser.InvalidLocationException;","lastModifiedDate":"2021-07-09"},{"lineNumber":7,"author":{"gitId":"aidoxe-123"},"content":"import reposense.util.AssertUtil;","lastModifiedDate":"2021-07-09"},{"lineNumber":8,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":9,"author":{"gitId":"aidoxe-123"},"content":"public class RepoLocationTest {","lastModifiedDate":"2021-07-09"},{"lineNumber":10,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":11,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_validRepoUrl_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":12,"author":{"gitId":"aidoxe-123"},"content":"        // valid url without specifying branch","lastModifiedDate":"2021-07-09"},{"lineNumber":13,"author":{"gitId":"aidoxe-123"},"content":"        assertValidLocation(\"https://github.com/reposense/testrepo-Beta.git\",","lastModifiedDate":"2021-07-09"},{"lineNumber":14,"author":{"gitId":"aidoxe-123"},"content":"                \"testrepo-Beta\", \"reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":15,"author":{"gitId":"aidoxe-123"},"content":"        assertValidLocation(\"https://github.com/reposense/testrepo-Delta.git\",","lastModifiedDate":"2021-07-09"},{"lineNumber":16,"author":{"gitId":"aidoxe-123"},"content":"                \"testrepo-Delta\", \"reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":17,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":18,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":19,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":20,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_invalidRepoUrl_throwsInvalidLocationException() {","lastModifiedDate":"2021-07-09"},{"lineNumber":21,"author":{"gitId":"aidoxe-123"},"content":"        // ftp url should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":22,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"ftp://github.com/reposense/testrepo-Delta.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":23,"author":{"gitId":"aidoxe-123"},"content":"        // non GitHub url should rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":24,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://gitlab.com/reposense/RepoSense.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":25,"author":{"gitId":"aidoxe-123"},"content":"        // url without organisation name should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":26,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":27,"author":{"gitId":"aidoxe-123"},"content":"        // url without repo name should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":28,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/.git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":29,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":30,"author":{"gitId":"aidoxe-123"},"content":"        // url without a .git suffix should be rejected","lastModifiedDate":"2021-07-09"},{"lineNumber":31,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSensegit\");","lastModifiedDate":"2021-07-09"},{"lineNumber":32,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense-git\");","lastModifiedDate":"2021-07-09"},{"lineNumber":33,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense.gi\");","lastModifiedDate":"2021-07-09"},{"lineNumber":34,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/RepoSense\");","lastModifiedDate":"2021-07-09"},{"lineNumber":35,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":36,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":37,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":38,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocation_repoUrlWithASpecifiedBranch_throwsInvalidLocationException() {","lastModifiedDate":"2021-07-09"},{"lineNumber":39,"author":{"gitId":"aidoxe-123"},"content":"        // reject both repos with and without .git","lastModifiedDate":"2021-07-09"},{"lineNumber":40,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/testrepo-Beta/tree/add-config-json\");","lastModifiedDate":"2021-07-09"},{"lineNumber":41,"author":{"gitId":"aidoxe-123"},"content":"        assertInvalidLocation(\"https://github.com/reposense/testrepo-Beta.git/tree/add-config-json\");","lastModifiedDate":"2021-07-09"},{"lineNumber":42,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":43,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":44,"author":{"gitId":"aidoxe-123"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"aidoxe-123"},"content":"    public void repoLocationParser_parseEmptyString_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":46,"author":{"gitId":"aidoxe-123"},"content":"        RepoLocation repoLocation \u003d new RepoLocation(\"\");","lastModifiedDate":"2021-07-09"},{"lineNumber":47,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":48,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":49,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":50,"author":{"gitId":"aidoxe-123"},"content":"    /**","lastModifiedDate":"2021-07-09"},{"lineNumber":51,"author":{"gitId":"aidoxe-123"},"content":"     * Compares the information parsed by the RepoLocation model with the expected information","lastModifiedDate":"2021-07-09"},{"lineNumber":52,"author":{"gitId":"aidoxe-123"},"content":"     */","lastModifiedDate":"2021-07-09"},{"lineNumber":53,"author":{"gitId":"aidoxe-123"},"content":"    public void assertValidLocation(String rawLocation, String expectedRepoName,","lastModifiedDate":"2021-07-09"},{"lineNumber":54,"author":{"gitId":"aidoxe-123"},"content":"            String expectedOrganization) throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":55,"author":{"gitId":"aidoxe-123"},"content":"        RepoLocation repoLocation \u003d new RepoLocation(rawLocation);","lastModifiedDate":"2021-07-09"},{"lineNumber":56,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertEquals(repoLocation.getRepoName(), expectedRepoName);","lastModifiedDate":"2021-07-09"},{"lineNumber":57,"author":{"gitId":"aidoxe-123"},"content":"        Assert.assertEquals(repoLocation.getOrganization(), expectedOrganization);","lastModifiedDate":"2021-07-09"},{"lineNumber":58,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":59,"author":{"gitId":"aidoxe-123"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":60,"author":{"gitId":"aidoxe-123"},"content":"    private void assertInvalidLocation(String rawLocation) {","lastModifiedDate":"2021-07-09"},{"lineNumber":61,"author":{"gitId":"aidoxe-123"},"content":"        AssertUtil.assertThrows(InvalidLocationException.class, () -\u003e new RepoLocation(rawLocation));","lastModifiedDate":"2021-07-09"},{"lineNumber":62,"author":{"gitId":"aidoxe-123"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":63,"author":{"gitId":"aidoxe-123"},"content":"}","lastModifiedDate":"2021-07-09"}],"authorContributionMap":{"aidoxe-123":63}},{"path":"src/test/java/reposense/parser/ArgsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","lastModifiedDate":"2018-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","lastModifiedDate":"2018-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2020-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2018-06-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2019-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-07-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-07-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.After;","lastModifiedDate":"2019-04-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.Before;","lastModifiedDate":"2019-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2018-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","lastModifiedDate":"2019-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.RepoSense;","lastModifiedDate":"2018-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;","lastModifiedDate":"2018-06-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","lastModifiedDate":"2019-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","lastModifiedDate":"2019-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;","lastModifiedDate":"2018-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","lastModifiedDate":"2019-04-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","lastModifiedDate":"2019-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","lastModifiedDate":"2018-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","lastModifiedDate":"2020-11-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ArgsParserTest {","lastModifiedDate":"2018-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));","lastModifiedDate":"2018-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\")","lastModifiedDate":"2020-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);","lastModifiedDate":"2020-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");","lastModifiedDate":"2020-08-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"output\");","lastModifiedDate":"2020-08-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);","lastModifiedDate":"2018-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);","lastModifiedDate":"2018-06-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_CSV_FILE \u003d","lastModifiedDate":"2018-08-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);","lastModifiedDate":"2018-08-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d","lastModifiedDate":"2018-08-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);","lastModifiedDate":"2018-08-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";","lastModifiedDate":"2019-04-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";","lastModifiedDate":"2018-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TIMEZONE \u003d \"Asia/Singapore\";","lastModifiedDate":"2020-11-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d TestUtil.getZoneId(DEFAULT_TIMEZONE);","lastModifiedDate":"2020-11-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Before","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void before() {","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @After","lastModifiedDate":"2019-04-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void after() {","lastModifiedDate":"2019-04-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2019-04-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());","lastModifiedDate":"2019-04-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2019-04-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2019-04-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputs_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .addFormats(\"java adoc html css js\")","lastModifiedDate":"2019-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","lastModifiedDate":"2019-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2019-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2019-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2019-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2019-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test(expected \u003d HelpScreenException.class)","lastModifiedDate":"2019-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_help_throwsHelpScreenException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String input \u003d \"--help\";","lastModifiedDate":"2019-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputsAlias_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":118,"author":{"gitId":"chan-j-d"},"content":"        String input \u003d String.format(","lastModifiedDate":"2021-07-09"},{"lineNumber":119,"author":{"gitId":"chan-j-d"},"content":"                \"-c \\\"%s\\\" -o \\\"%s\\\" -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -v -t %s\",","lastModifiedDate":"2021-07-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIMEZONE);","lastModifiedDate":"2019-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2018-12-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_withExtraWhitespaces_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)","lastModifiedDate":"2019-02-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)","lastModifiedDate":"2019-02-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)","lastModifiedDate":"2019-02-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)","lastModifiedDate":"2019-02-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .addFormats(\"java   adoc  html      css js   \")","lastModifiedDate":"2019-02-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig().addWhiteSpace(1)","lastModifiedDate":"2019-02-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .addView().addWhiteSpace(4)","lastModifiedDate":"2019-02-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE).addWhiteSpace(5)","lastModifiedDate":"2019-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList(","lastModifiedDate":"2019-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \"java\", \"adoc\", \"html\", \"css\", \"js\"));","lastModifiedDate":"2018-12-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_configFolderOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // Optional arguments have default values","lastModifiedDate":"2018-06-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());","lastModifiedDate":"2018-07-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // Optional arguments have default values","lastModifiedDate":"2018-06-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());","lastModifiedDate":"2018-07-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","lastModifiedDate":"2019-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_viewOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE, ((ViewCliArguments) cliArguments).getReportDirectoryPath()));","lastModifiedDate":"2018-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_withIgnore_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","lastModifiedDate":"2019-02-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .add(\"-i\")","lastModifiedDate":"2019-02-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));","lastModifiedDate":"2019-01-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsWithAlias instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArgumentsWithAlias).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assert.assertEquals(cliArguments, cliArgumentsWithAlias);","lastModifiedDate":"2019-01-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parse_withoutIgnore_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Assert.assertFalse(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());","lastModifiedDate":"2019-01-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView().build();","lastModifiedDate":"2019-02-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), (","lastModifiedDate":"2020-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());","lastModifiedDate":"2019-01-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndOutputDirectory_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2018-07-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2018-07-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-08-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2018-08-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-07-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","lastModifiedDate":"2019-02-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-01-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-02-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-01-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));","lastModifiedDate":"2019-02-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2019-02-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));","lastModifiedDate":"2019-02-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void sinceDate_correctFormat_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-06-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public void untilDate_correctFormat_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-07-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void sinceDate_withExtraDate_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\")","lastModifiedDate":"2020-11-16"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-07-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2019-07-31"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2019-07-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-07-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public void untilDate_withExtraTime_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\")","lastModifiedDate":"2020-11-16"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-07-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-07-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);","lastModifiedDate":"2019-07-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2019-06-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-08-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void period_inDaysWithSinceDate_success() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-08-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                .addPeriod(\"2d\")","lastModifiedDate":"2020-08-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-08-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.JULY, 2);","lastModifiedDate":"2020-08-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-08-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-08-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    public void period_inWeeksWithUntilDate_success() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-08-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                .addUntilDate(\"14/07/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)","lastModifiedDate":"2020-11-16"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .addPeriod(\"2w\")","lastModifiedDate":"2020-08-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-08-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);","lastModifiedDate":"2020-08-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-08-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    public void formats_inAlphanumeric_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-18"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","lastModifiedDate":"2019-08-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));","lastModifiedDate":"2019-08-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());","lastModifiedDate":"2018-07-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public void numCloningThreads_default_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","lastModifiedDate":"2021-03-31"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_CLONING_THREADS;","lastModifiedDate":"2021-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public void numCloningThreads_isNumeric_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2021-03-31"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                .addNumCloningThreads(2)","lastModifiedDate":"2021-03-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        System.out.println(input);","lastModifiedDate":"2021-03-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_default_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","lastModifiedDate":"2021-03-31"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_ANALYSIS_THREADS;","lastModifiedDate":"2021-03-31"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_isNumeric_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2021-03-31"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                .addNumAnalysisThreads(2)","lastModifiedDate":"2021-03-31"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-31"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","lastModifiedDate":"2021-03-31"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-31"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, repoConfigs.size());","lastModifiedDate":"2018-07-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .addView()","lastModifiedDate":"2019-02-19"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-01-05"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-01-05"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsOnly_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-01-05"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-01-05"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-01-05"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","lastModifiedDate":"2019-02-19"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2019-02-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());","lastModifiedDate":"2019-02-12"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","lastModifiedDate":"2019-02-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());","lastModifiedDate":"2019-02-12"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void parse_viewWithArgCwd_returnsViewCliArguments() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(new File(\".\").toPath()).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);","lastModifiedDate":"2019-01-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-07-31"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void parse_configOrLocationsSimilar_success() throws Exception {","lastModifiedDate":"2020-02-10"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        Assert.assertTrue(configCliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d","lastModifiedDate":"2018-07-31"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((ConfigCliArguments) configCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        Assert.assertTrue(locationCliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d","lastModifiedDate":"2018-07-31"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((LocationsCliArguments) locationCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        Assert.assertEquals(actualRepoConfigs, expectedRepoConfigs);","lastModifiedDate":"2018-07-31"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    public void emptyArgs_defaultConfigFolderPath() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});","lastModifiedDate":"2018-09-06"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-09-06"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), (","lastModifiedDate":"2020-03-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());","lastModifiedDate":"2018-09-06"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-06"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-06"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-01-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public void parse_repoAliases_sameResult() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-02"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        Assert.assertEquals(repoAliasCliArguments, reposAliasCliArguments);","lastModifiedDate":"2018-09-02"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-09-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-09-02"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    @Test (expected \u003d ParseException.class)","lastModifiedDate":"2020-08-12"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void parse_noValidRepoLocation_throwsParseException()","lastModifiedDate":"2020-08-12"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            throws ParseException, HelpScreenException {","lastModifiedDate":"2020-08-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(\"https://githubaaaa.com/asdasdasdasd/RepoSense\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);","lastModifiedDate":"2018-07-31"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);","lastModifiedDate":"2020-08-12"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-31"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();","lastModifiedDate":"2019-02-19"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();","lastModifiedDate":"2019-02-19"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(relDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    public void parse_notExistsConfigFolder_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");","lastModifiedDate":"2019-02-19"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-30"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-30"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-30"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-30"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    public void parse_configCsvFileAsConfigFolder_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    public void parse_missingConfigValue_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-09-29"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    public void outputPath_nonExistentDirectory_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);","lastModifiedDate":"2019-04-20"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);","lastModifiedDate":"2019-02-19"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();","lastModifiedDate":"2019-02-19"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-09-29"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2018-09-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(","lastModifiedDate":"2018-09-29"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","lastModifiedDate":"2018-09-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    public void sinceDate_unsupportedFormats_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    public void untilDate_unsupportedFormats_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":608,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-06-09"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    public void sinceDate_laterThanUntilDate_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2019-02-19"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-06-09"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-18"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    public void period_withBothSinceDateAndUntilDate_throwsParseException() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"18d\")","lastModifiedDate":"2020-08-02"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .addSinceDate(\"30/11/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .addUntilDate(\"01/12/2017\")","lastModifiedDate":"2020-08-02"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-08-02"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    public void period_notNumeric_throwsParseExcpetion() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"abcd\").build();","lastModifiedDate":"2020-08-02"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2020-08-02"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    public void period_isZero_throwsParseExcpetion() throws Exception {","lastModifiedDate":"2020-08-02"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"0w\").build();","lastModifiedDate":"2020-08-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-08-02"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-18"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    public void formats_notInAlphanumeric_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-18"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-18"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2018-07-31"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2019-02-19"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                .addRepos(TEST_REPO_REPOSENSE)","lastModifiedDate":"2019-02-19"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2019-02-19"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2018-07-31"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-31"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-07"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-01-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    public void parse_extraArgumentForIgnore_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();","lastModifiedDate":"2019-02-19"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-01-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-01-07"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-03-21"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    public void parse_withTimezone_success() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        String zoneId \u003d \"UTC+11\";","lastModifiedDate":"2019-03-21"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2019-03-21"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC-1030\";","lastModifiedDate":"2019-03-21"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2019-03-21"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2019-03-21"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC\";","lastModifiedDate":"2020-11-16"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","lastModifiedDate":"2020-11-16"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2019-03-21"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","lastModifiedDate":"2020-11-16"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-03-21"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    public void parse_incorrectTimezone_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();","lastModifiedDate":"2019-03-21"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)","lastModifiedDate":"2019-03-21"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    public void parse_timezoneWithoutArgument_throwsParseException() throws Exception {","lastModifiedDate":"2020-04-18"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();","lastModifiedDate":"2019-03-21"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2019-03-21"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-30"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-11-16"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    public void parse_withDatesAndTimezone_success() throws Exception {","lastModifiedDate":"2020-11-16"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC+11\")","lastModifiedDate":"2020-11-16"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        int[] expectedSinceTime \u003d {21, 0, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JUNE, 30, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        int[] expectedUntilTime \u003d {20, 59, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.NOVEMBER, 30, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":713,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC-0930\")","lastModifiedDate":"2020-11-16"},{"lineNumber":714,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":716,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{17, 30, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{17, 29, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER","lastModifiedDate":"2020-11-16"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC\")","lastModifiedDate":"2020-11-16"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","lastModifiedDate":"2020-11-16"},{"lineNumber":731,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2020-11-16"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{8, 0, 0};","lastModifiedDate":"2020-11-16"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{7, 59, 59};","lastModifiedDate":"2020-11-16"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);","lastModifiedDate":"2020-11-16"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2020-11-16"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","lastModifiedDate":"2020-11-16"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    public void parse_shallowCloning_success() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","lastModifiedDate":"2021-03-27"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        Assert.assertEquals(false, cliArguments.isShallowCloningPerformed());","lastModifiedDate":"2021-03-27"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        String inputShallow \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","lastModifiedDate":"2021-03-27"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                .addShallowCloning()","lastModifiedDate":"2021-03-27"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsShallow \u003d ArgsParser.parse(translateCommandline(inputShallow));","lastModifiedDate":"2021-03-27"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsShallow instanceof ConfigCliArguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        Assert.assertEquals(true, cliArgumentsShallow.isShallowCloningPerformed());","lastModifiedDate":"2021-03-27"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}.","lastModifiedDate":"2019-06-30"},{"lineNumber":763,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}.","lastModifiedDate":"2019-06-30"},{"lineNumber":764,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    private void assertDateDiffOneMonth(Date actualSinceDate, Date untilDate, ZoneId zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);","lastModifiedDate":"2020-11-21"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar","lastModifiedDate":"2020-11-16"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                .Builder()","lastModifiedDate":"2020-11-16"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                .setInstant(untilDate.getTime())","lastModifiedDate":"2020-11-16"},{"lineNumber":772,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2020-11-16"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MONTH, -1);","lastModifiedDate":"2019-06-30"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualSinceDate.equals(cal.getTime()));","lastModifiedDate":"2020-11-16"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-06-30"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-30"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-06-30"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59 for the given","lastModifiedDate":"2020-11-16"},{"lineNumber":784,"author":{"gitId":"-"},"content":"     * {@code zoneId} time zone.","lastModifiedDate":"2020-11-16"},{"lineNumber":785,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation","lastModifiedDate":"2019-06-30"},{"lineNumber":786,"author":{"gitId":"-"},"content":"     * with time at 23:59:59.","lastModifiedDate":"2019-06-30"},{"lineNumber":787,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-06-30"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    private void assertDateDiffEndOfDay(Date actualUntilDate, ZoneId zoneId) {","lastModifiedDate":"2020-11-16"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);","lastModifiedDate":"2020-11-21"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());","lastModifiedDate":"2020-11-21"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2019-06-30"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 23);","lastModifiedDate":"2019-06-30"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 59);","lastModifiedDate":"2019-06-30"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 59);","lastModifiedDate":"2019-06-30"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2019-06-30"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);","lastModifiedDate":"2020-11-16"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualUntilDate.equals(cal.getTime()));","lastModifiedDate":"2020-11-16"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":800,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-06-09"}],"authorContributionMap":{"chan-j-d":2,"-":798}},{"path":"src/test/java/reposense/util/InputBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2019-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","lastModifiedDate":"2019-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building command line input.","lastModifiedDate":"2019-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2019-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code String input \u003d new InputBuilder().addSinceDate(\"27/01/2017\").build();}","lastModifiedDate":"2019-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class InputBuilder {","lastModifiedDate":"2019-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2019-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private StringBuilder input;","lastModifiedDate":"2019-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public InputBuilder() {","lastModifiedDate":"2019-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.input \u003d new StringBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the {@code input} generated from this {@code InputBuilder}","lastModifiedDate":"2019-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String build() {","lastModifiedDate":"2019-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return input.toString();","lastModifiedDate":"2019-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Add a help flag to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public InputBuilder addHelp() {","lastModifiedDate":"2019-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.HELP_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Adds the config flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param path The config folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public InputBuilder addConfig(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.CONFIG_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds the repo flag with the {@code paths} as arguments to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param paths The repo paths.","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public InputBuilder addRepos(String... paths) {","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.REPO_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (String path : paths) {","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"chan-j-d"},"content":"            input.append(addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the view flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param path The view folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public InputBuilder addView(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the view flag only to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public InputBuilder addView() {","lastModifiedDate":"2019-02-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds the output flag with the {@code path} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param path The output folder path.","lastModifiedDate":"2019-02-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public InputBuilder addOutput(Path path) {","lastModifiedDate":"2019-02-19"},{"lineNumber":89,"author":{"gitId":"chan-j-d"},"content":"        input.append(ArgsParser.OUTPUT_FLAGS[0] + WHITESPACE + addQuotationMarksToPath(path) + WHITESPACE);","lastModifiedDate":"2021-07-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the since flag with the {@code date} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param date The since date.","lastModifiedDate":"2019-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public InputBuilder addSinceDate(String date) {","lastModifiedDate":"2019-02-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SINCE_FLAGS[0] + WHITESPACE + date + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Adds the until flag with the {@code date} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param date The until date.","lastModifiedDate":"2019-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public InputBuilder addUntilDate(String date) {","lastModifiedDate":"2019-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.UNTIL_FLAGS[0] + WHITESPACE + date + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-08-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Adds the period flag with the {@code period} as argument to the input.","lastModifiedDate":"2020-08-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2020-08-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-08-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @param period The period.","lastModifiedDate":"2020-08-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-08-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public InputBuilder addPeriod(String period) {","lastModifiedDate":"2020-08-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.PERIOD_FLAGS[0] + WHITESPACE + period + WHITESPACE);","lastModifiedDate":"2020-08-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2020-08-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Adds the format flag with the {@code formats} as argument to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param formats The formats that need to be evaluated.","lastModifiedDate":"2019-02-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public InputBuilder addFormats(String formats) {","lastModifiedDate":"2019-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.FORMAT_FLAGS[0] + WHITESPACE + formats + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Adds the ignoreStandaloneConfig flag to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-02-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public InputBuilder addIgnoreStandaloneConfig() {","lastModifiedDate":"2019-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.IGNORE_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds the timezone flag with the {@code zoneId} as argument to the input.","lastModifiedDate":"2019-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2019-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public InputBuilder addTimezone(String zoneId) {","lastModifiedDate":"2019-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.TIMEZONE_FLAGS[0] + WHITESPACE + zoneId + WHITESPACE);","lastModifiedDate":"2019-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-03-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Adds the cloning threads flag with the {@code threads} as argument to the input.","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for cloning.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public InputBuilder addNumCloningThreads(int threads) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.CLONING_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Adds the analysis threads flag with the {@code threads} as argument to the input.","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for analysis.","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public InputBuilder addNumAnalysisThreads(int threads) {","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.ANALYSIS_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Adds the flag to enable shallow cloning.","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build.","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public InputBuilder addShallowCloning() {","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SHALLOW_CLONING_FLAGS[0] + WHITESPACE);","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Adds {@code content} to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public InputBuilder add(String content) {","lastModifiedDate":"2019-02-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        input.append(content + WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Adds {@code num} of white spaces to the input.","lastModifiedDate":"2019-02-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @param num The number of white spaces to add.","lastModifiedDate":"2019-02-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public InputBuilder addWhiteSpace(int num) {","lastModifiedDate":"2019-02-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c num; i++) {","lastModifiedDate":"2019-02-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            input.append(WHITESPACE);","lastModifiedDate":"2019-02-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Clears all input and flags given.","lastModifiedDate":"2019-02-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public InputBuilder reset() {","lastModifiedDate":"2019-02-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        input \u003d new StringBuilder();","lastModifiedDate":"2019-02-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-19"},{"lineNumber":213,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":214,"author":{"gitId":"chan-j-d"},"content":"    private static String addQuotationMarksToPath(String path) {","lastModifiedDate":"2021-07-09"},{"lineNumber":215,"author":{"gitId":"chan-j-d"},"content":"        return \u0027\"\u0027 + path + \u0027\"\u0027;","lastModifiedDate":"2021-07-09"},{"lineNumber":216,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":217,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":218,"author":{"gitId":"chan-j-d"},"content":"    private static String addQuotationMarksToPath(Path path) {","lastModifiedDate":"2021-07-09"},{"lineNumber":219,"author":{"gitId":"chan-j-d"},"content":"        return addQuotationMarksToPath(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":220,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":221,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-19"}],"authorContributionMap":{"chan-j-d":13,"-":209}},{"path":"src/test/java/reposense/util/TestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;","lastModifiedDate":"2018-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-05-24"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"chan-j-d"},"content":"import java.net.URL;","lastModifiedDate":"2021-07-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-05-31"},{"lineNumber":8,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-07-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","lastModifiedDate":"2020-11-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Calendar;","lastModifiedDate":"2018-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Date;","lastModifiedDate":"2018-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2019-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-07-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2019-07-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.TimeZone;","lastModifiedDate":"2020-11-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-07-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.Assert;","lastModifiedDate":"2018-08-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;","lastModifiedDate":"2019-07-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.Author;","lastModifiedDate":"2018-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","lastModifiedDate":"2018-08-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains testing related functionalities.","lastModifiedDate":"2019-04-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2018-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final int[] END_OF_DAY_TIME \u003d {23, 59, 59};","lastModifiedDate":"2019-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final int[] START_OF_DAY_TIME \u003d {0, 0, 0};","lastModifiedDate":"2019-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d getZoneId(\"Asia/Singapore\");","lastModifiedDate":"2020-11-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPARING_FILES \u003d \"Comparing files %s \u0026 %s\\n\";","lastModifiedDate":"2018-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_CONTENT_DIFFERENT \u003d \"Content different at line number %d:\\n\"","lastModifiedDate":"2018-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"\u003c\u003c %s\\n\"","lastModifiedDate":"2018-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"\u003e\u003e %s\\n\";","lastModifiedDate":"2018-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINES_LENGTH_DIFFERENT \u003d \"The files\u0027 lines count do not match.\";","lastModifiedDate":"2018-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";","lastModifiedDate":"2020-04-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";","lastModifiedDate":"2020-04-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;","lastModifiedDate":"2020-04-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same.","lastModifiedDate":"2018-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,","lastModifiedDate":"2018-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * else prints out the first line of content difference (if any).","lastModifiedDate":"2018-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual) throws IOException {","lastModifiedDate":"2018-05-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return compareFileContents(expected, actual, 1);","lastModifiedDate":"2018-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same.","lastModifiedDate":"2018-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,","lastModifiedDate":"2018-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * else prints out maximum {@code maxTraceCounts} lines of content difference (if any).","lastModifiedDate":"2018-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual, int maxTraceCounts) throws IOException {","lastModifiedDate":"2018-05-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int traceCounts \u003d 0;","lastModifiedDate":"2018-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        System.out.println(String.format(MESSAGE_COMPARING_FILES, expected, actual));","lastModifiedDate":"2018-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String[] expectedContent \u003d new String(Files.readAllBytes(expected))","lastModifiedDate":"2018-05-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","lastModifiedDate":"2018-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String[] actualContent \u003d new String(Files.readAllBytes(actual))","lastModifiedDate":"2018-05-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","lastModifiedDate":"2018-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c Math.min(expectedContent.length, actualContent.length); i++) {","lastModifiedDate":"2018-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (!expectedContent[i].equals(actualContent[i])) {","lastModifiedDate":"2018-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                System.out.println(","lastModifiedDate":"2018-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_LINE_CONTENT_DIFFERENT, i + 1, expectedContent[i], actualContent[i]));","lastModifiedDate":"2018-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                if (++traceCounts \u003e\u003d maxTraceCounts) {","lastModifiedDate":"2018-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2018-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (expectedContent.length !\u003d actualContent.length) {","lastModifiedDate":"2018-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            System.out.println(MESSAGE_LINES_LENGTH_DIFFERENT);","lastModifiedDate":"2018-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } else if (traceCounts \u003e\u003d maxTraceCounts) {","lastModifiedDate":"2018-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-06-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-07-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if {@code expected} directory has all files with same content as {@code actual} directory.","lastModifiedDate":"2018-07-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-07-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static boolean compareDirectories(Path expected, Path actual) throws IOException {","lastModifiedDate":"2018-07-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e expectedPaths \u003d Files.walk(expected)","lastModifiedDate":"2018-07-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .sorted()","lastModifiedDate":"2018-07-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-07-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e actualPaths \u003d Files.walk(actual)","lastModifiedDate":"2018-07-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .sorted()","lastModifiedDate":"2018-07-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-07-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (expectedPaths.size() !\u003d actualPaths.size()) {","lastModifiedDate":"2018-07-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-07-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedPaths.size(); i++) {","lastModifiedDate":"2018-07-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            if (!(Files.isDirectory(expectedPaths.get(i)) || Files.isDirectory(actualPaths.get(i)))","lastModifiedDate":"2018-07-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !TestUtil.compareFileContents(expectedPaths.get(i), actualPaths.get(i))) {","lastModifiedDate":"2018-07-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2018-07-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-07-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-07-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-07-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-06-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day}.","lastModifiedDate":"2018-06-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-06-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Date getDate(int year, int month, int date, int[] time) {","lastModifiedDate":"2020-11-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2020-11-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        cal.setTimeZone(TimeZone.getTimeZone(TIME_ZONE_ID));","lastModifiedDate":"2020-11-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);","lastModifiedDate":"2020-11-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);","lastModifiedDate":"2020-11-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);","lastModifiedDate":"2020-11-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);","lastModifiedDate":"2020-11-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);","lastModifiedDate":"2020-11-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);","lastModifiedDate":"2020-11-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2020-11-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2020-11-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-06-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get since date with time 00:00:00","lastModifiedDate":"2019-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Date getSinceDate(int year, int month, int date) {","lastModifiedDate":"2019-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, START_OF_DAY_TIME);","lastModifiedDate":"2019-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get until date with time 23:59:59","lastModifiedDate":"2019-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Date getUntilDate(int year, int month, int date) {","lastModifiedDate":"2019-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, END_OF_DAY_TIME);","lastModifiedDate":"2019-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day} that is not","lastModifiedDate":"2021-04-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * dependent on the time zone of the current system, in cases where adjusting for the time zone is not necessary.","lastModifiedDate":"2021-04-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Date getLocalDate(int year, int month, int date, int[] time) {","lastModifiedDate":"2021-04-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2021-04-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);","lastModifiedDate":"2021-04-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);","lastModifiedDate":"2021-04-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);","lastModifiedDate":"2021-04-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);","lastModifiedDate":"2021-04-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);","lastModifiedDate":"2021-04-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);","lastModifiedDate":"2021-04-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2021-04-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return cal.getTime();","lastModifiedDate":"2021-04-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get since date with time 00:00:00","lastModifiedDate":"2021-04-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Date getLocalSinceDate(int year, int month, int date) {","lastModifiedDate":"2021-04-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, START_OF_DAY_TIME);","lastModifiedDate":"2021-04-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get until date with time 23:59:59","lastModifiedDate":"2021-04-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Date getLocalUntilDate(int year, int month, int date) {","lastModifiedDate":"2021-04-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, END_OF_DAY_TIME);","lastModifiedDate":"2021-04-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-11-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Returns a {@code ZoneId} object for the specified {@code timezone}.","lastModifiedDate":"2020-11-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-11-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static ZoneId getZoneId(String timezone) {","lastModifiedDate":"2020-11-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return ZoneId.of(timezone);","lastModifiedDate":"2020-11-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-11-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-11-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedRepoConfig} and {@code actualRepoConfig}.","lastModifiedDate":"2018-08-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check.","lastModifiedDate":"2018-08-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static void compareRepoConfig(RepoConfiguration expectedRepoConfig, RepoConfiguration actualRepoConfig) {","lastModifiedDate":"2018-08-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedRepoConfig, actualRepoConfig);","lastModifiedDate":"2019-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedRepoConfig.getAuthorList().size(); i++) {","lastModifiedDate":"2018-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            compareAuthor(expectedRepoConfig.getAuthorList().get(i), actualRepoConfig.getAuthorList().get(i));","lastModifiedDate":"2018-10-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-10-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedAuthor} and {@code actualAuthor}, with exception of it\u0027s display name.","lastModifiedDate":"2018-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-10-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * The display name is not compared as it varies with object construction.","lastModifiedDate":"2018-10-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * It is a transient value and it is not needed for object matching.","lastModifiedDate":"2018-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check.","lastModifiedDate":"2018-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static void compareAuthor(Author expectedAuthor, Author actualAuthor) {","lastModifiedDate":"2018-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getGitId(), actualAuthor.getGitId());","lastModifiedDate":"2018-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getIgnoreGlobList(), actualAuthor.getIgnoreGlobList());","lastModifiedDate":"2018-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getAuthorAliases(), actualAuthor.getAuthorAliases());","lastModifiedDate":"2018-10-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberCommits} is equal to the expected number of commits captured in","lastModifiedDate":"2019-07-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}.","lastModifiedDate":"2018-08-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public static boolean compareNumberExpectedCommitsToGitLogLines(int expectedNumberCommits, String gitLogResult) {","lastModifiedDate":"2018-08-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no commits","lastModifiedDate":"2018-08-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {","lastModifiedDate":"2018-08-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return expectedNumberCommits \u003d\u003d 0;","lastModifiedDate":"2018-08-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // (actualSplitGitLogResilt - 1) as the 1st token is always empty.","lastModifiedDate":"2019-07-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return expectedNumberCommits \u003d\u003d (gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER).length - 1);","lastModifiedDate":"2019-07-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberFilesChanged} is equal to the actual number of files changed in","lastModifiedDate":"2019-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}.","lastModifiedDate":"2019-04-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-04-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public static boolean compareNumberFilesChanged(int expectedNumberFilesChanged, String gitLogResult) {","lastModifiedDate":"2019-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no files changed","lastModifiedDate":"2019-04-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {","lastModifiedDate":"2019-04-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return expectedNumberFilesChanged \u003d\u003d 0;","lastModifiedDate":"2019-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String[] changesLogged \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);","lastModifiedDate":"2019-07-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        HashSet\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2019-04-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // start from index 1 as index 0 is always empty.","lastModifiedDate":"2019-07-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c changesLogged.length; i++) {","lastModifiedDate":"2019-07-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            filesChanged.addAll(getFilesChangedInCommit(changesLogged[i]));","lastModifiedDate":"2019-07-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return filesChanged.size() \u003d\u003d expectedNumberFilesChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Returns the {@code set} of files changed in the commit {@code rawCommitInfo}.","lastModifiedDate":"2019-07-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private static Set\u003cString\u003e getFilesChangedInCommit(String rawCommitInfo) {","lastModifiedDate":"2019-07-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2019-07-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String[] commitInfo \u003d rawCommitInfo.replaceAll(\"\\n+$\", \"\").split(\"\\n\");","lastModifiedDate":"2019-07-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        int fileChangedNum \u003d Integer.parseInt(commitInfo[commitInfo.length - 1].trim().split(\" \")[0]);","lastModifiedDate":"2019-07-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        for (int fileNum \u003d 0; fileNum \u003c fileChangedNum; fileNum++) {","lastModifiedDate":"2019-07-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            filesChanged.add(getFileChanged(commitInfo[commitInfo.length - 2 - fileNum]));","lastModifiedDate":"2019-07-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return filesChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-07-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Returns the file changed given a {@code rawFileChangedString}.","lastModifiedDate":"2019-07-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-07-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private static String getFileChanged(String rawFileChangedString) {","lastModifiedDate":"2019-07-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String fileChanged \u003d rawFileChangedString.split(TAB_SPLITTER)[STAT_FILE_PATH_INDEX].trim();","lastModifiedDate":"2020-04-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (fileChanged.contains(MOVED_FILE_INDICATION)) {","lastModifiedDate":"2020-04-17"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            fileChanged \u003d fileChanged.substring(fileChanged.indexOf(MOVED_FILE_INDICATION)","lastModifiedDate":"2020-04-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    + MOVED_FILE_INDICATION.length());","lastModifiedDate":"2020-04-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-04-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return fileChanged;","lastModifiedDate":"2019-07-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-04-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-10-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Returns true if the test environment is on Windows OS.","lastModifiedDate":"2018-10-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-10-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public static boolean isWindows() {","lastModifiedDate":"2018-10-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");","lastModifiedDate":"2018-10-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-10-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-08-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Returns the path to a resource","lastModifiedDate":"2020-08-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-08-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public static Path loadResource(Class classForLoading, String pathToResource) {","lastModifiedDate":"2020-08-09"},{"lineNumber":271,"author":{"gitId":"chan-j-d"},"content":"        ClassLoader classLoader \u003d classForLoading.getClassLoader();","lastModifiedDate":"2021-07-09"},{"lineNumber":272,"author":{"gitId":"chan-j-d"},"content":"        URL url \u003d classLoader.getResource(pathToResource);","lastModifiedDate":"2021-07-09"},{"lineNumber":273,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d null;","lastModifiedDate":"2021-07-09"},{"lineNumber":274,"author":{"gitId":"chan-j-d"},"content":"        try {","lastModifiedDate":"2021-07-09"},{"lineNumber":275,"author":{"gitId":"chan-j-d"},"content":"            path \u003d Paths.get(url.toURI());","lastModifiedDate":"2021-07-09"},{"lineNumber":276,"author":{"gitId":"chan-j-d"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2021-07-09"},{"lineNumber":277,"author":{"gitId":"chan-j-d"},"content":"            System.out.println(\"URL format does not follow required standard\");","lastModifiedDate":"2021-07-09"},{"lineNumber":278,"author":{"gitId":"chan-j-d"},"content":"        }","lastModifiedDate":"2021-07-09"},{"lineNumber":279,"author":{"gitId":"chan-j-d"},"content":"        return path;","lastModifiedDate":"2021-07-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-05-24"}],"authorContributionMap":{"chan-j-d":12,"-":269}},{"path":"src/test/java/reposense/util/TestUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chan-j-d"},"content":"package reposense.util;","lastModifiedDate":"2021-07-09"},{"lineNumber":2,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":3,"author":{"gitId":"chan-j-d"},"content":"import static reposense.util.TestUtil.loadResource;","lastModifiedDate":"2021-07-09"},{"lineNumber":4,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":5,"author":{"gitId":"chan-j-d"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-07-09"},{"lineNumber":6,"author":{"gitId":"chan-j-d"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-07-09"},{"lineNumber":7,"author":{"gitId":"chan-j-d"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-07-09"},{"lineNumber":8,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":9,"author":{"gitId":"chan-j-d"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-07-09"},{"lineNumber":10,"author":{"gitId":"chan-j-d"},"content":"import org.junit.Test;","lastModifiedDate":"2021-07-09"},{"lineNumber":11,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":12,"author":{"gitId":"chan-j-d"},"content":"public class TestUtilTest {","lastModifiedDate":"2021-07-09"},{"lineNumber":13,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":14,"author":{"gitId":"chan-j-d"},"content":"    private static final String EXPECTED_FILE_CONTENTS \u003d \"1\";","lastModifiedDate":"2021-07-09"},{"lineNumber":15,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":16,"author":{"gitId":"chan-j-d"},"content":"    private static final String DIRECTORY_NAME \u003d \"TestUtilTest\";","lastModifiedDate":"2021-07-09"},{"lineNumber":17,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_NO_SPECIAL_CHAR_TEST \u003d DIRECTORY_NAME + \"/test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":18,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_PLUS_TEST \u003d DIRECTORY_NAME + \"/plus+test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":19,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_SPACE_TEST \u003d DIRECTORY_NAME + \"/space test.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":20,"author":{"gitId":"chan-j-d"},"content":"    private static final String PATH_SYMBOLS_TEST \u003d DIRECTORY_NAME + \"/symbols +-,.;\u0027[]{}~`!@#$%^\u0026()_-+\u003dtest.txt\";","lastModifiedDate":"2021-07-09"},{"lineNumber":21,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":22,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":23,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":24,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithNoSpecialCharacters_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":25,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_NO_SPECIAL_CHAR_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":26,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":27,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":28,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":29,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":30,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":31,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":32,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithSpace_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":33,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_SPACE_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":34,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":35,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":36,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":37,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":38,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":39,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":40,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithPlus_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":41,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_PLUS_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":42,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":43,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":44,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":45,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":46,"author":{"gitId":"chan-j-d"},"content":"","lastModifiedDate":"2021-07-09"},{"lineNumber":47,"author":{"gitId":"chan-j-d"},"content":"    @Test","lastModifiedDate":"2021-07-09"},{"lineNumber":48,"author":{"gitId":"chan-j-d"},"content":"    public void loadResource_validFileWithManySymbols_success() throws Exception {","lastModifiedDate":"2021-07-09"},{"lineNumber":49,"author":{"gitId":"chan-j-d"},"content":"        Path path \u003d loadResource(TestUtilTest.class, PATH_SYMBOLS_TEST);","lastModifiedDate":"2021-07-09"},{"lineNumber":50,"author":{"gitId":"chan-j-d"},"content":"        FileReader fileReader \u003d new FileReader(path.toString());","lastModifiedDate":"2021-07-09"},{"lineNumber":51,"author":{"gitId":"chan-j-d"},"content":"        String actualLine \u003d new Scanner(fileReader).nextLine();","lastModifiedDate":"2021-07-09"},{"lineNumber":52,"author":{"gitId":"chan-j-d"},"content":"        Assert.assertEquals(EXPECTED_FILE_CONTENTS, actualLine);","lastModifiedDate":"2021-07-09"},{"lineNumber":53,"author":{"gitId":"chan-j-d"},"content":"    }","lastModifiedDate":"2021-07-09"},{"lineNumber":54,"author":{"gitId":"chan-j-d"},"content":"}","lastModifiedDate":"2021-07-09"}],"authorContributionMap":{"chan-j-d":54}}]
