{"authorDailyContributionsMap":{"chan-j-d":[{"date":"2021-07-09","commitResults":[{"hash":"c2a25380a3bdd678483223ccf3aca139f33ee76b","messageTitle":"[#435] TestUtil: fix issue with whitespace in paths (#1556)","messageBody":"The test suite will convert spaces in URLs into %20, which can lead to\r\ntest case failures. Java API recommends managing encoding and decoding\r\nof URLs by using URI, which would resolve the issue with spaces.\r\n\r\nThis could save new developers some trouble when encountering test\r\nfailures while attempting to build the project locally for the first\r\ntime.\r\n\r\nLet\u0027s fix the issues caused by whitespace in the test cases.","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":7}}}]}],"FH-30":[],"aidoxe-123":[{"date":"2021-07-09","commitResults":[{"hash":"9d1aebd65cad7160a3296d847a20825ab74aa819","messageTitle":"[#1212] RepoLocation: Remove redundant backslashes in regex (#1550)","messageBody":"In RepoLocation.java, our current regex is \r\n\"^https?:\\\\/\\\\/github.com\\\\/(?\u003corg\u003e.+?)\\\\/(?\u003crepoName\u003e.+?)\\\\.git$\".\r\n\r\nThere is no need to escape the forward slash \"/\" character with the\r\n\"\\\\\" characters, as the forward slash does not have a special meaning\r\nwhen used on its own.\r\n\r\nLet\u0027s remove the redundant backslashes and add more tests for\r\ndifferent types of repository URLs.","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":1}}}]}],"litone01":[{"date":"2021-07-15","commitResults":[{"hash":"6b94f82545bbd84852f7bd110af72e495ad23652","messageTitle":"[#954] RepoConfiguration: remove redundant usage of streams (#1558)","messageBody":"In the setStandaloneConfigIgnoredToRepoConfigs method of\r\nRepoConfiguration, we iterate through a list of RepoConfiguration\r\nobjects and modify the isStandaloneConfigIgnored attribute in each\r\nobject. Currently, we use Stream.forEach(), which can be replaced by a\r\nlist.forEach() method since we already have a list.\r\n\r\nLet\u0027s replace the redundant Stream.forEach() with the .forEach()\r\nmethod.","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"chan-j-d":{"java":81,"js":0,"scss":0,"json":0,"md":0,"py":0,"pug":0,"gradle":0,"sh":0,"yml":0},"FH-30":{"java":0,"js":0,"scss":0,"json":0,"md":0,"py":0,"pug":0,"gradle":0,"sh":0,"yml":0},"aidoxe-123":{"java":64,"js":0,"scss":0,"json":0,"md":0,"py":0,"pug":0,"gradle":0,"sh":0,"yml":0},"litone01":{"java":1,"js":0,"scss":0,"json":0,"md":0,"py":0,"pug":0,"gradle":0,"sh":0,"yml":0}},"authorContributionVariance":{"chan-j-d":81.50656,"FH-30":0.0,"aidoxe-123":44.46864,"litone01":0.042100497},"authorDisplayNameMap":{"chan-j-d":"CHAN..N DA","FH-30":"FRAN..ANTO","aidoxe-123":"HUYN..UONG","litone01":"YU J..IANG"}}
